{"version":3,"sources":["webpack:///./node_modules/lodash/differenceBy.js","webpack:///../sonar-docs/src/tooltips/branches/no-branch-support.md","webpack:///../sonar-docs/src/tooltips/branches/single-branch.md","webpack:///./src/main/js/app/components/nav/component/ComponentNav.css?68e5","webpack:///./src/main/js/app/components/nav/component/ComponentNav.css","webpack:///./src/main/js/app/components/ComponentContainerNotFound.tsx","webpack:///./src/main/js/app/components/nav/component/ComponentNavBranchesMenuItem.tsx","webpack:///./src/main/js/app/components/nav/component/ComponentNavBranchesMenu.tsx","webpack:///./src/main/js/app/components/nav/component/ComponentNavBranch.tsx","webpack:///./src/main/js/app/components/nav/component/ComponentNavHeader.tsx","webpack:///./src/main/js/app/components/nav/component/ComponentNavWarnings.tsx","webpack:///./src/main/js/app/components/nav/component/ComponentNavMeta.tsx","webpack:///./src/main/js/app/components/nav/component/ComponentNavMenu.tsx","webpack:///./src/main/js/app/components/nav/component/ComponentNavLicenseNotif.tsx","webpack:///./src/main/js/app/components/nav/component/ComponentNavBgTaskNotif.tsx","webpack:///./src/main/js/app/components/nav/component/ComponentNav.tsx","webpack:///./src/main/js/app/components/ComponentContainer.tsx","webpack:///./src/main/js/components/docs/DocTooltip.tsx","webpack:///./src/main/js/helpers/almIntegrations.ts","webpack:///./src/main/js/components/hoc/withAppState.tsx","webpack:///./src/main/js/apps/background-tasks/constants.ts","webpack:///./src/main/js/api/ce.ts","webpack:///./src/main/js/api/nav.ts","webpack:///./src/main/js/components/common/OrganizationHelmet.tsx","webpack:///./src/main/js/components/common/BranchStatus.tsx","webpack:///./src/main/js/components/icons-components/WarningIcon.tsx","webpack:///./src/main/js/api/branches.ts","webpack:///./src/main/js/app/components/ComponentContext.tsx"],"names":["baseDifference","__webpack_require__","baseFlatten","baseIteratee","baseRest","isArrayLikeObject","last","differenceBy","array","values","iteratee","undefined","module","exports","r","__webpack_exports__","content","i","options","hmr","transform","insertInto","locals","push","ComponentContainerNotFound","index_js_exposed","Helmet","defaultTitle","Object","l10n","defer","className","id","react_router_es","to","ComponentNavBranchesMenuItem","_a","branchLike","props","__rest","displayName","helpers_branches","shouldBeIndented","isOrphan","key","onMouseEnter","onSelect","ref","innerRef","classnames","active","selected","urls","component","title","BranchIcon","big-spacer-left","BranchStatus","component_ComponentNavBranchesMenu","withRouter","[object Object]","this","state","query","getFilteredBranchLikes","toLowerCase","branchLikes","filter","matchBranchName","name","includes","matchPullRequestTitleOrId","handleSearchChange","setState","handleKeyDown","event","keyCode","preventDefault","openSelected","selectPrevious","selectNext","getSelected","router","getProjectBranchUrl","index","findIndex","b","branches","length","handleSelect","find","currentBranchLike","renderSearch","SearchBox","autoFocus","onChange","onKeyDown","placeholder","value","renderBranchesList","items","map","previous","isPreviousOrphan","showDivider","showOrphanHeader","showPullRequestHeader","showShortLivingBranchHeader","isSelected","HelpTooltip","overlay","node","selectedBranchNode","listNode","scrollToSelectedBranch","smooth","scrolling","parent","showManageLink","qualifier","configuration","showSettings","Dropdown","noPadding","pathname","component_ComponentNavBranch","withAppState","mounted","dropdownOpen","handleClick","stopPropagation","currentTarget","blur","closeDropdown","renderMergeBranch","mergeBranch","index_es","defaultMessage","target","branch","renderOverlay","breadcrumbs","nextProps","location","_this$props","_this$props$component","system","appState","branchesEnabled","fill","theme","PlusCircleIcon","size","DocTooltip","doc","Promise","resolve","then","bind","Toggler","onRequestClose","open","canAdmin","onClose","href","onClick","DropdownIcon","component_ComponentNavHeader","es","ownProps","organization","rootReducer","OrganizationHelmet","OrganizationAvatar","OrganizationLink","shouldLinkLast","lastItem","item","QualifierIcon","renderBreadcrumbs","alm","url","rel","alt","almIntegrations","height","src","concat","width","AnalysisWarningsModal","lazyLoad","all","e","ComponentNavWarnings_ComponentNavWarnings","modal","handleCloseModal","WarningIcon","warnings","String","component_ComponentNavMeta","currentUser","_ref","mainBranch","longBranch","currentPage","type","getCurrentPage","displayVersion","version","analysisDate","DateTimeFormatter","date","Tooltip","mouseEnterDelay","users","Favorite","favorite","Boolean","isFavorite","HomePageSelect","DetachIcon","SETTINGS_URLS","component_ComponentNavMenu","getQuery","assign","renderExtension","isAdmin","activeClassName","isPortfolio","isDeveloper","isApplication","_this$props$location","isIssuesActive","startsWith","resolved","_component$extensions","extensions","some","extension","getConfiguration","isSettingsActive","window","indexOf","adminLinks","renderAdministrationLinks","link","data-test","tagName","_ref2","onToggleClick","aria-expanded","aria-haspopup","renderSettingsLink","renderBranchesLink","renderProfilesLink","renderQualityGateLink","renderCustomMeasuresLink","renderLinksLink","renderPermissionsLink","renderBackgroundTasksLink","renderUpdateKeyLink","renderWebhooksLink","renderAdminExtensions","renderDeletionLink","isProject","showQualityProfiles","showQualityGates","showManualMeasures","showLinks","showPermissions","showBackgroundTasks","showUpdateKey","withoutSecurityExtension","_ref3","NavBarTabs","renderDashboardLink","renderIssuesLink","renderSecurityReports","renderComponentMeasuresLink","renderCodeLink","renderActivityLink","renderAdministration","renderExtensions","component_ComponentNavLicenseNotif","loading","fetchIsValidLicense","marketplace","isValidLicense","currentTask","_this$state","errorType","Alert","display","variant","errorMessage","ComponentNavBgTaskNotif_ComponentNavBgTaskNotif","messageKey","status","currentTaskOnSameBranch","isInProgress","isPending","renderMessage","constants","ALL","FAILED","pullRequest","pullRequestTitle","message","ComponentNav_ComponentNav","populateRecentHistory","RecentHistory","add","prevProps","notifComponent","ContextNavBar","notif","FETCH_STATUS_WAIT_TIME","ComponentContainer_ComponentContainer","addQualifier","fetchBranches","breadcrumb","api_branches","_slicedToArray","getCurrentBranchLike","registerBranchStatuses","fetchStatus","ce","_ref4","current","queue","shouldFetchComponent","_ref5","tasksInProgress","newCurrentTask","getCurrentTask","pendingTasks","getPendingTasks","newTasksInProgress","task","IN_PROGRESS","currentTaskChanged","progressChanged","differenceBy_default","clearTimeout","watchStatusTimer","setTimeout","PENDING","fetchComponent","fetchWarnings","_ref6","isMain","isSameBranch","branchType","forEach","registerBranchStatus","qualityGateStatus","handleComponentChange","changes","handleBranchesChange","_ref7","_this$props$location$","api_nav","components","_ref8","_ref9","nav","componentWithQualifier","fetchOrganization","param","response","requireAuthorization","_ref10","_this$state2","ComponentContext","Provider","children","onBranchesChange","onComponentChange","mapDispatchToProps","rootActions","d","react__WEBPACK_IMPORTED_MODULE_0__","_controls_HelpTooltip__WEBPACK_IMPORTED_MODULE_1__","_lazyLoad__WEBPACK_IMPORTED_MODULE_2__","DocMarkdownBlock","close","default","document","addEventListener","removeEventListener","childProps","overlayProps","isTooltip","getAlmMembersUrl","getUserAlmKey","hasAdvancedALMIntegration","isBitbucket","isGithub","isVSTS","isPersonal","sanitizeAlmId","_users__WEBPACK_IMPORTED_MODULE_0__","endsWith","replace","user","externalProvider","almKey","personal","react_redux__WEBPACK_IMPORTED_MODULE_1__","_utils__WEBPACK_IMPORTED_MODULE_2__","_store_rootReducer__WEBPACK_IMPORTED_MODULE_3__","WrappedComponent","Wrapper","STATUSES","ALL_TYPES","CURRENTS","DEFAULT_FILTERS","DEBOUNCE_DELAY","ALL_EXCEPT_PENDING","SUCCESS","CANCELED","ONLY_CURRENTS","taskType","currents","minSubmittedAt","maxExecutedAt","getAnalysisStatus","getActivity","getStatus","getTask","cancelTask","cancelAllTasks","getTasksForComponent","getTypes","getWorkers","setWorkerCount","_helpers_request__WEBPACK_IMPORTED_MODULE_0__","_app_utils_throwGlobalError__WEBPACK_IMPORTED_MODULE_1__","data","catch","componentId","additionalFields","taskTypes","count","getComponentNavigation","getMarketplaceNavigation","getSettingsNavigation","react_helmet__WEBPACK_IMPORTED_MODULE_1__","react_helmet__WEBPACK_IMPORTED_MODULE_1___default","n","a","titleTemplate","_ui_Level__WEBPACK_IMPORTED_MODULE_2__","level","small","_Icon__WEBPACK_IMPORTED_MODULE_1__","_app_theme__WEBPACK_IMPORTED_MODULE_2__","_ref$fill","style","getBranches","getPullRequests","deleteBranch","deletePullRequest","renameBranch","project","pullRequests"],"mappings":"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","file":"js/296.m.13f8bef9.chunk.js","sourcesContent":["var baseDifference = require('./_baseDifference'),\n    baseFlatten = require('./_baseFlatten'),\n    baseIteratee = require('./_baseIteratee'),\n    baseRest = require('./_baseRest'),\n    isArrayLikeObject = require('./isArrayLikeObject'),\n    last = require('./last');\n\n/**\n * This method is like `_.difference` except that it accepts `iteratee` which\n * is invoked for each element of `array` and `values` to generate the criterion\n * by which they're compared. The order and references of result values are\n * determined by the first array. The iteratee is invoked with one argument:\n * (value).\n *\n * **Note:** Unlike `_.pullAllBy`, this method returns a new array.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Array\n * @param {Array} array The array to inspect.\n * @param {...Array} [values] The values to exclude.\n * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n * @returns {Array} Returns the new array of filtered values.\n * @example\n *\n * _.differenceBy([2.1, 1.2], [2.3, 3.4], Math.floor);\n * // => [1.2]\n *\n * // The `_.property` iteratee shorthand.\n * _.differenceBy([{ 'x': 2 }, { 'x': 1 }], [{ 'x': 1 }], 'x');\n * // => [{ 'x': 2 }]\n */\nvar differenceBy = baseRest(function(array, values) {\n  var iteratee = last(values);\n  if (isArrayLikeObject(iteratee)) {\n    iteratee = undefined;\n  }\n  return isArrayLikeObject(array)\n    ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true), baseIteratee(iteratee, 2))\n    : [];\n});\n\nmodule.exports = differenceBy;\n","export default \"**Get the most out of SonarQube with branches analysis**\\n\\nAnalyze each branch of your project separately with the Developer Edition.\\n\\n---\\n\\n[Learn More](https://redirect.sonarsource.com/editions/developer.html)\\n\"","export default \"**Learn how to analyze branches in {instance}**\\n\\nQuickly setup branch analysis and get separate insights for each of your branches and pull requests.\\n\\n---\\n\\n[Branches Documentation](/branches/overview/)  \\n[Pull Request Analysis](/analysis/pull-request/)\\n\"","\nvar content = require(\"!!../../../../../../../node_modules/css-loader/dist/cjs.js??ref--6-1!../../../../../../../node_modules/postcss-loader/src/index.js??postcss!./ComponentNav.css\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../../../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../../../../../node_modules/css-loader/dist/cjs.js??ref--6-1!../../../../../../../node_modules/postcss-loader/src/index.js??postcss!./ComponentNav.css\", function() {\n\t\tvar newContent = require(\"!!../../../../../../../node_modules/css-loader/dist/cjs.js??ref--6-1!../../../../../../../node_modules/postcss-loader/src/index.js??postcss!./ComponentNav.css\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","exports = module.exports = require(\"../../../../../../../node_modules/css-loader/dist/runtime/api.js\")(false);\n// Module\nexports.push([module.id, \".navbar-context-branches{display:inline-flex;justify-content:center;align-items:center;flex-shrink:1!important;min-width:0;line-height:16px;margin-left:16px;font-size:13px}.navbar-context-branches .popup{min-width:430px;max-width:650px}.navbar-context-meta-branch-menu-title{padding-left:24px}.navbar-context-meta-branch-menu-item{display:flex!important;justify-content:space-between;align-items:center}.navbar-context-meta-branch-menu-item-name{flex:0 1 550px;min-width:0}.navbar-context-meta-branch-menu-item-actions{height:12px;margin-left:32px}\", \"\"]);\n\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { Helmet } from 'react-helmet';\nimport { Link } from 'react-router';\nimport { translate } from '../../helpers/l10n';\n\nexport default function ComponentContainerNotFound() {\n  return (\n    <>\n      <Helmet defaultTitle={translate('404_not_found')} defer={false} />\n      <div className=\"page-wrapper-simple\" id=\"bd\">\n        <div className=\"page-simple\" id=\"nonav\">\n          <h2 className=\"big-spacer-bottom\">{translate('dashboard.project_not_found')}</h2>\n          <p className=\"spacer-bottom\">{translate('dashboard.project_not_found.2')}</p>\n          <p>\n            <Link to=\"/\">{translate('go_back_to_homepage')}</Link>\n          </p>\n        </div>\n      </div>\n    </>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { Link } from 'react-router';\nimport * as classNames from 'classnames';\nimport BranchStatus from '../../../../components/common/BranchStatus';\nimport BranchIcon from '../../../../components/icons-components/BranchIcon';\nimport {\n  isShortLivingBranch,\n  getBranchLikeDisplayName,\n  getBranchLikeKey,\n  isMainBranch,\n  isPullRequest\n} from '../../../../helpers/branches';\nimport { translate } from '../../../../helpers/l10n';\nimport { getBranchLikeUrl } from '../../../../helpers/urls';\n\nexport interface Props {\n  branchLike: T.BranchLike;\n  component: T.Component;\n  onSelect: (branchLike: T.BranchLike) => void;\n  selected: boolean;\n  innerRef?: (node: HTMLLIElement) => void;\n}\n\nexport default function ComponentNavBranchesMenuItem({ branchLike, ...props }: Props) {\n  const handleMouseEnter = () => {\n    props.onSelect(branchLike);\n  };\n\n  const displayName = getBranchLikeDisplayName(branchLike);\n  const shouldBeIndented =\n    (isShortLivingBranch(branchLike) && !branchLike.isOrphan) || isPullRequest(branchLike);\n\n  return (\n    <li key={getBranchLikeKey(branchLike)} onMouseEnter={handleMouseEnter} ref={props.innerRef}>\n      <Link\n        className={classNames('navbar-context-meta-branch-menu-item', {\n          active: props.selected\n        })}\n        to={getBranchLikeUrl(props.component.key, branchLike)}>\n        <div\n          className=\"navbar-context-meta-branch-menu-item-name text-ellipsis\"\n          title={displayName}>\n          <BranchIcon\n            branchLike={branchLike}\n            className={classNames('little-spacer-right', { 'big-spacer-left': shouldBeIndented })}\n          />\n          {displayName}\n          {isMainBranch(branchLike) && (\n            <div className=\"outline-badge spacer-left\">{translate('branches.main_branch')}</div>\n          )}\n        </div>\n        <div className=\"big-spacer-left note\">\n          <BranchStatus branchLike={branchLike} component={props.component.key} />\n        </div>\n      </Link>\n    </li>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { Link } from 'react-router';\nimport ComponentNavBranchesMenuItem from './ComponentNavBranchesMenuItem';\nimport {\n  sortBranchesAsTree,\n  isLongLivingBranch,\n  isShortLivingBranch,\n  isSameBranchLike,\n  getBranchLikeKey,\n  isPullRequest,\n  isBranch\n} from '../../../../helpers/branches';\nimport { scrollToElement } from '../../../../helpers/scrolling';\nimport { translate } from '../../../../helpers/l10n';\nimport { getBranchLikeUrl } from '../../../../helpers/urls';\nimport SearchBox from '../../../../components/controls/SearchBox';\nimport HelpTooltip from '../../../../components/controls/HelpTooltip';\nimport { DropdownOverlay } from '../../../../components/controls/Dropdown';\nimport { withRouter, Router } from '../../../../components/hoc/withRouter';\n\ninterface Props {\n  branchLikes: T.BranchLike[];\n  canAdmin?: boolean;\n  component: T.Component;\n  currentBranchLike: T.BranchLike;\n  onClose: () => void;\n  router: Pick<Router, 'push'>;\n}\n\ninterface State {\n  query: string;\n  selected: T.BranchLike | undefined;\n}\n\nexport class ComponentNavBranchesMenu extends React.PureComponent<Props, State> {\n  listNode?: HTMLUListElement | null;\n  selectedBranchNode?: HTMLLIElement | null;\n  state: State = { query: '', selected: undefined };\n\n  componentDidMount() {\n    this.scrollToSelectedBranch(false);\n  }\n\n  componentDidUpdate() {\n    this.scrollToSelectedBranch(true);\n  }\n\n  scrollToSelectedBranch(smooth: boolean) {\n    if (this.listNode && this.selectedBranchNode) {\n      scrollToElement(this.selectedBranchNode, {\n        parent: this.listNode,\n        smooth\n      });\n    }\n  }\n\n  getFilteredBranchLikes = () => {\n    const query = this.state.query.toLowerCase();\n    return sortBranchesAsTree(this.props.branchLikes).filter(branchLike => {\n      const matchBranchName = isBranch(branchLike) && branchLike.name.toLowerCase().includes(query);\n      const matchPullRequestTitleOrId =\n        isPullRequest(branchLike) &&\n        (branchLike.title.toLowerCase().includes(query) ||\n          branchLike.key.toLowerCase().includes(query));\n      return matchBranchName || matchPullRequestTitleOrId;\n    });\n  };\n\n  handleSearchChange = (query: string) => this.setState({ query, selected: undefined });\n\n  handleKeyDown = (event: React.KeyboardEvent<HTMLInputElement>) => {\n    switch (event.keyCode) {\n      case 13:\n        event.preventDefault();\n        this.openSelected();\n        return;\n      case 38:\n        event.preventDefault();\n        this.selectPrevious();\n        return;\n      case 40:\n        event.preventDefault();\n        this.selectNext();\n        // keep this return to prevent fall-through in case more cases will be adder later\n        // eslint-disable-next-line no-useless-return\n        return;\n    }\n  };\n\n  openSelected = () => {\n    const selected = this.getSelected();\n    if (selected) {\n      this.props.router.push(this.getProjectBranchUrl(selected));\n    }\n  };\n\n  selectPrevious = () => {\n    const selected = this.getSelected();\n    const branchLikes = this.getFilteredBranchLikes();\n    const index = branchLikes.findIndex(b => isSameBranchLike(b, selected));\n    if (index > 0) {\n      this.setState({ selected: branchLikes[index - 1] });\n    }\n  };\n\n  selectNext = () => {\n    const selected = this.getSelected();\n    const branches = this.getFilteredBranchLikes();\n    const index = branches.findIndex(b => isSameBranchLike(b, selected));\n    if (index >= 0 && index < branches.length - 1) {\n      this.setState({ selected: branches[index + 1] });\n    }\n  };\n\n  handleSelect = (branchLike: T.BranchLike) => {\n    this.setState({ selected: branchLike });\n  };\n\n  getSelected = () => {\n    if (this.state.selected) {\n      return this.state.selected;\n    }\n\n    const branchLikes = this.getFilteredBranchLikes();\n    if (branchLikes.find(b => isSameBranchLike(b, this.props.currentBranchLike))) {\n      return this.props.currentBranchLike;\n    }\n\n    if (branchLikes.length > 0) {\n      return branchLikes[0];\n    }\n\n    return undefined;\n  };\n\n  getProjectBranchUrl = (branchLike: T.BranchLike) =>\n    getBranchLikeUrl(this.props.component.key, branchLike);\n\n  isOrphan = (branchLike: T.BranchLike) => {\n    return (isShortLivingBranch(branchLike) || isPullRequest(branchLike)) && branchLike.isOrphan;\n  };\n\n  renderSearch = () => (\n    <div className=\"menu-search\">\n      <SearchBox\n        autoFocus={true}\n        onChange={this.handleSearchChange}\n        onKeyDown={this.handleKeyDown}\n        placeholder={translate('branches.search_for_branches')}\n        value={this.state.query}\n      />\n    </div>\n  );\n\n  renderBranchesList = () => {\n    const branchLikes = this.getFilteredBranchLikes();\n    const selected = this.getSelected();\n\n    if (branchLikes.length === 0) {\n      return <div className=\"menu-message note\">{translate('no_results')}</div>;\n    }\n\n    const items = branchLikes.map((branchLike, index) => {\n      const isOrphan = this.isOrphan(branchLike);\n      const previous = index > 0 ? branchLikes[index - 1] : undefined;\n      const isPreviousOrphan = previous !== undefined && this.isOrphan(previous);\n      const showDivider = isLongLivingBranch(branchLike) || (isOrphan && !isPreviousOrphan);\n      const showOrphanHeader = isOrphan && !isPreviousOrphan;\n      const showPullRequestHeader =\n        !showOrphanHeader && isPullRequest(branchLike) && !isPullRequest(previous);\n      const showShortLivingBranchHeader =\n        !showOrphanHeader && isShortLivingBranch(branchLike) && !isShortLivingBranch(previous);\n      const isSelected = isSameBranchLike(branchLike, selected);\n      return (\n        <React.Fragment key={getBranchLikeKey(branchLike)}>\n          {showDivider && <li className=\"divider\" />}\n          {showOrphanHeader && (\n            <li className=\"menu-header\">\n              <div className=\"display-inline-block text-middle\">\n                {translate('branches.orphan_branches')}\n              </div>\n              <HelpTooltip\n                className=\"spacer-left\"\n                overlay={translate('branches.orphan_branches.tooltip')}\n              />\n            </li>\n          )}\n          {showPullRequestHeader && (\n            <li className=\"menu-header navbar-context-meta-branch-menu-title\">\n              {translate('branches.pull_requests')}\n            </li>\n          )}\n          {showShortLivingBranchHeader && (\n            <li className=\"menu-header navbar-context-meta-branch-menu-title\">\n              {translate('branches.short_lived_branches')}\n            </li>\n          )}\n          <ComponentNavBranchesMenuItem\n            branchLike={branchLike}\n            component={this.props.component}\n            innerRef={node =>\n              (this.selectedBranchNode = isSelected ? node : this.selectedBranchNode)\n            }\n            key={getBranchLikeKey(branchLike)}\n            onSelect={this.handleSelect}\n            selected={isSelected}\n          />\n        </React.Fragment>\n      );\n    });\n\n    return (\n      <ul className=\"menu menu-vertically-limited\" ref={node => (this.listNode = node)}>\n        {items}\n      </ul>\n    );\n  };\n\n  render() {\n    const { component } = this.props;\n    const showManageLink =\n      component.qualifier === 'TRK' &&\n      component.configuration &&\n      component.configuration.showSettings;\n\n    return (\n      <DropdownOverlay noPadding={true}>\n        {this.renderSearch()}\n        {this.renderBranchesList()}\n        {showManageLink && (\n          <div className=\"dropdown-bottom-hint text-right\">\n            <Link\n              className=\"text-muted\"\n              to={{ pathname: '/project/branches', query: { id: component.key } }}>\n              {translate('branches.manage')}\n            </Link>\n          </div>\n        )}\n      </DropdownOverlay>\n    );\n  }\n}\n\nexport default withRouter(ComponentNavBranchesMenu);\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport { Link } from 'react-router';\nimport ComponentNavBranchesMenu from './ComponentNavBranchesMenu';\nimport DocTooltip from '../../../../components/docs/DocTooltip';\nimport * as theme from '../../../theme';\nimport BranchIcon from '../../../../components/icons-components/BranchIcon';\nimport {\n  isShortLivingBranch,\n  isSameBranchLike,\n  getBranchLikeDisplayName,\n  isPullRequest\n} from '../../../../helpers/branches';\nimport { translate } from '../../../../helpers/l10n';\nimport PlusCircleIcon from '../../../../components/icons-components/PlusCircleIcon';\nimport HelpTooltip from '../../../../components/controls/HelpTooltip';\nimport Toggler from '../../../../components/controls/Toggler';\nimport DropdownIcon from '../../../../components/icons-components/DropdownIcon';\nimport { isSonarCloud } from '../../../../helpers/system';\nimport { getPortfolioAdminUrl } from '../../../../helpers/urls';\nimport { withAppState } from '../../../../components/hoc/withAppState';\n\ninterface Props {\n  appState: Pick<T.AppState, 'branchesEnabled'>;\n  branchLikes: T.BranchLike[];\n  component: T.Component;\n  currentBranchLike: T.BranchLike;\n  location?: any;\n}\n\ninterface State {\n  dropdownOpen: boolean;\n}\n\nexport class ComponentNavBranch extends React.PureComponent<Props, State> {\n  mounted = false;\n  state: State = { dropdownOpen: false };\n\n  componentDidMount() {\n    this.mounted = true;\n  }\n\n  componentWillReceiveProps(nextProps: Props) {\n    if (\n      nextProps.component !== this.props.component ||\n      !isSameBranchLike(nextProps.currentBranchLike, this.props.currentBranchLike) ||\n      nextProps.location !== this.props.location\n    ) {\n      this.setState({ dropdownOpen: false });\n    }\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  handleClick = (event: React.SyntheticEvent<HTMLElement>) => {\n    event.preventDefault();\n    event.stopPropagation();\n    event.currentTarget.blur();\n    this.setState(state => ({ dropdownOpen: !state.dropdownOpen }));\n  };\n\n  closeDropdown = () => {\n    if (this.mounted) {\n      this.setState({ dropdownOpen: false });\n    }\n  };\n\n  renderMergeBranch = () => {\n    const { currentBranchLike } = this.props;\n    if (isShortLivingBranch(currentBranchLike)) {\n      return currentBranchLike.isOrphan ? (\n        <span className=\"note big-spacer-left text-ellipsis flex-shrink\">\n          <span className=\"text-middle\">{translate('branches.orphan_branch')}</span>\n          <HelpTooltip\n            className=\"spacer-left\"\n            overlay={translate('branches.orphan_branches.tooltip')}\n          />\n        </span>\n      ) : (\n        <span className=\"note big-spacer-left\">\n          {translate('from')} <strong>{currentBranchLike.mergeBranch}</strong>\n        </span>\n      );\n    } else if (isPullRequest(currentBranchLike)) {\n      return (\n        <span className=\"note big-spacer-left text-ellipsis flex-shrink\">\n          <FormattedMessage\n            defaultMessage={translate('branches.pull_request.for_merge_into_x_from_y')}\n            id=\"branches.pull_request.for_merge_into_x_from_y\"\n            values={{\n              target: <strong>{currentBranchLike.target}</strong>,\n              branch: <strong>{currentBranchLike.branch}</strong>\n            }}\n          />\n        </span>\n      );\n    } else {\n      return null;\n    }\n  };\n\n  renderOverlay = () => {\n    return (\n      <>\n        <p>{translate('application.branches.help')}</p>\n        <hr className=\"spacer-top spacer-bottom\" />\n        <Link\n          className=\"spacer-left link-no-underline\"\n          to={getPortfolioAdminUrl(this.props.component.breadcrumbs[0].key, 'APP')}>\n          {translate('application.branches.link')}\n        </Link>\n      </>\n    );\n  };\n\n  render() {\n    const { branchLikes, currentBranchLike } = this.props;\n    const { configuration, breadcrumbs } = this.props.component;\n\n    if (isSonarCloud() && !this.props.appState.branchesEnabled) {\n      return null;\n    }\n\n    const displayName = getBranchLikeDisplayName(currentBranchLike);\n    const isApp = breadcrumbs && breadcrumbs[0] && breadcrumbs[0].qualifier === 'APP';\n\n    if (isApp && branchLikes.length < 2) {\n      return (\n        <div className=\"navbar-context-branches\">\n          <BranchIcon\n            branchLike={currentBranchLike}\n            className=\"little-spacer-right\"\n            fill={theme.gray80}\n          />\n          <span className=\"note\">{displayName}</span>\n          {configuration && configuration.showSettings && (\n            <HelpTooltip className=\"spacer-left\" overlay={this.renderOverlay()}>\n              <PlusCircleIcon className=\"text-middle\" fill={theme.blue} size={12} />\n            </HelpTooltip>\n          )}\n        </div>\n      );\n    } else {\n      if (!this.props.appState.branchesEnabled) {\n        return (\n          <div className=\"navbar-context-branches\">\n            <BranchIcon\n              branchLike={currentBranchLike}\n              className=\"little-spacer-right\"\n              fill={theme.gray80}\n            />\n            <span className=\"note\">{displayName}</span>\n            <DocTooltip\n              className=\"spacer-left\"\n              doc={import(/* webpackMode: \"eager\" */ 'Docs/tooltips/branches/no-branch-support.md')}>\n              <PlusCircleIcon fill={theme.gray71} size={12} />\n            </DocTooltip>\n          </div>\n        );\n      }\n\n      if (branchLikes.length < 2) {\n        return (\n          <div className=\"navbar-context-branches\">\n            <BranchIcon branchLike={currentBranchLike} className=\"little-spacer-right\" />\n            <span className=\"note\">{displayName}</span>\n            <DocTooltip\n              className=\"spacer-left\"\n              doc={import(/* webpackMode: \"eager\" */ 'Docs/tooltips/branches/single-branch.md')}>\n              <PlusCircleIcon fill={theme.blue} size={12} />\n            </DocTooltip>\n          </div>\n        );\n      }\n    }\n\n    return (\n      <div className=\"navbar-context-branches\">\n        <div className=\"dropdown\">\n          <Toggler\n            onRequestClose={this.closeDropdown}\n            open={this.state.dropdownOpen}\n            overlay={\n              <ComponentNavBranchesMenu\n                branchLikes={this.props.branchLikes}\n                canAdmin={configuration && configuration.showSettings}\n                component={this.props.component}\n                currentBranchLike={this.props.currentBranchLike}\n                onClose={this.closeDropdown}\n              />\n            }>\n            <a\n              className=\"link-base-color link-no-underline nowrap\"\n              href=\"#\"\n              onClick={this.handleClick}>\n              <BranchIcon branchLike={currentBranchLike} className=\"little-spacer-right\" />\n              <span className=\"text-limited text-top\" title={displayName}>\n                {displayName}\n              </span>\n              <DropdownIcon className=\"little-spacer-left\" />\n            </a>\n          </Toggler>\n        </div>\n        {this.renderMergeBranch()}\n      </div>\n    );\n  }\n}\n\nexport default withAppState(ComponentNavBranch);\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router';\nimport ComponentNavBranch from './ComponentNavBranch';\nimport QualifierIcon from '../../../../components/icons-components/QualifierIcon';\nimport { getOrganizationByKey, Store } from '../../../../store/rootReducer';\nimport OrganizationAvatar from '../../../../components/common/OrganizationAvatar';\nimport OrganizationHelmet from '../../../../components/common/OrganizationHelmet';\nimport OrganizationLink from '../../../../components/ui/OrganizationLink';\nimport { sanitizeAlmId } from '../../../../helpers/almIntegrations';\nimport { getProjectUrl, getBaseUrl } from '../../../../helpers/urls';\nimport { isSonarCloud } from '../../../../helpers/system';\nimport { isMainBranch } from '../../../../helpers/branches';\n\ninterface StateProps {\n  organization?: T.Organization;\n}\n\ninterface OwnProps {\n  branchLikes: T.BranchLike[];\n  component: T.Component;\n  currentBranchLike: T.BranchLike | undefined;\n  location?: any;\n}\n\ntype Props = StateProps & OwnProps;\n\nexport function ComponentNavHeader(props: Props) {\n  const { component, organization } = props;\n\n  return (\n    <header className=\"navbar-context-header\">\n      <OrganizationHelmet\n        organization={organization && isSonarCloud() ? organization : undefined}\n        title={component.name}\n      />\n      {organization && isSonarCloud() && (\n        <>\n          <OrganizationAvatar organization={organization} />\n          <OrganizationLink\n            className=\"navbar-context-header-breadcrumb-link link-base-color link-no-underline spacer-left\"\n            organization={organization}>\n            {organization.name}\n          </OrganizationLink>\n          <span className=\"slash-separator\" />\n        </>\n      )}\n      {renderBreadcrumbs(\n        component.breadcrumbs,\n        props.currentBranchLike !== undefined && !isMainBranch(props.currentBranchLike)\n      )}\n      {isSonarCloud() && component.alm && (\n        <a\n          className=\"link-no-underline\"\n          href={component.alm.url}\n          rel=\"noopener noreferrer\"\n          target=\"_blank\">\n          <img\n            alt={sanitizeAlmId(component.alm.key)}\n            className=\"text-text-top spacer-left\"\n            height={16}\n            src={`${getBaseUrl()}/images/sonarcloud/${sanitizeAlmId(component.alm.key)}.svg`}\n            width={16}\n          />\n        </a>\n      )}\n      {props.currentBranchLike && (\n        <ComponentNavBranch\n          branchLikes={props.branchLikes}\n          component={component}\n          currentBranchLike={props.currentBranchLike}\n          // to close dropdown on any location change\n          location={props.location}\n        />\n      )}\n    </header>\n  );\n}\n\nfunction renderBreadcrumbs(breadcrumbs: T.Breadcrumb[], shouldLinkLast: boolean) {\n  const lastItem = breadcrumbs[breadcrumbs.length - 1];\n  return breadcrumbs.map((item, index) => {\n    return (\n      <React.Fragment key={item.key}>\n        {index === 0 && <QualifierIcon className=\"spacer-right\" qualifier={lastItem.qualifier} />}\n        {shouldLinkLast || index < breadcrumbs.length - 1 ? (\n          <Link\n            className=\"navbar-context-header-breadcrumb-link link-base-color link-no-underline\"\n            title={item.name}\n            to={getProjectUrl(item.key)}>\n            {item.name}\n          </Link>\n        ) : (\n          <span className=\"navbar-context-header-breadcrumb-link\" title={item.name}>\n            {item.name}\n          </span>\n        )}\n        {index < breadcrumbs.length - 1 && <span className=\"slash-separator\" />}\n      </React.Fragment>\n    );\n  });\n}\n\nconst mapStateToProps = (state: Store, ownProps: OwnProps): StateProps => ({\n  organization: getOrganizationByKey(state, ownProps.component.organization)\n});\n\nexport default connect(mapStateToProps)(ComponentNavHeader);\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport { lazyLoad } from '../../../../components/lazyLoad';\nimport WarningIcon from '../../../../components/icons-components/WarningIcon';\nimport { translate, translateWithParameters } from '../../../../helpers/l10n';\n\nconst AnalysisWarningsModal = lazyLoad(() =>\n  import('../../../../components/common/AnalysisWarningsModal')\n);\n\ninterface Props {\n  warnings: string[];\n}\n\ninterface State {\n  modal: boolean;\n}\n\nexport default class ComponentNavWarnings extends React.PureComponent<Props, State> {\n  state: State = { modal: false };\n\n  handleClick = (event: React.MouseEvent<HTMLAnchorElement>) => {\n    event.preventDefault();\n    event.currentTarget.blur();\n    this.setState({ modal: true });\n  };\n\n  handleCloseModal = () => {\n    this.setState({ modal: false });\n  };\n\n  render() {\n    return (\n      <>\n        <div className=\"badge badge-focus badge-medium display-inline-flex-center js-component-analysis-warnings flex-1\">\n          <WarningIcon className=\"spacer-right\" />\n          <FormattedMessage\n            defaultMessage={translate('component_navigation.last_analsys_had_warnings')}\n            id=\"component_navigation.last_analsys_had_warnings\"\n            values={{\n              warnings: (\n                <a href=\"#\" onClick={this.handleClick}>\n                  {translateWithParameters(\n                    'component_navigation.x_warnings',\n                    String(this.props.warnings.length)\n                  )}\n                </a>\n              )\n            }}\n          />\n        </div>\n        {this.state.modal && (\n          <AnalysisWarningsModal onClose={this.handleCloseModal} warnings={this.props.warnings} />\n        )}\n      </>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { connect } from 'react-redux';\nimport ComponentNavWarnings from './ComponentNavWarnings';\nimport BranchStatus from '../../../../components/common/BranchStatus';\nimport DateTimeFormatter from '../../../../components/intl/DateTimeFormatter';\nimport Favorite from '../../../../components/controls/Favorite';\nimport HomePageSelect from '../../../../components/controls/HomePageSelect';\nimport Tooltip from '../../../../components/controls/Tooltip';\nimport DetachIcon from '../../../../components/icons-components/DetachIcon';\nimport {\n  isShortLivingBranch,\n  isLongLivingBranch,\n  isMainBranch,\n  isPullRequest\n} from '../../../../helpers/branches';\nimport { translate } from '../../../../helpers/l10n';\nimport { isLoggedIn } from '../../../../helpers/users';\nimport { getCurrentUser, Store } from '../../../../store/rootReducer';\n\nexport interface Props {\n  branchLike?: T.BranchLike;\n  currentUser: T.CurrentUser;\n  component: T.Component;\n  warnings: string[];\n}\n\nexport function ComponentNavMeta({ branchLike, component, currentUser, warnings }: Props) {\n  const mainBranch = !branchLike || isMainBranch(branchLike);\n  const longBranch = isLongLivingBranch(branchLike);\n  const currentPage = getCurrentPage(component, branchLike);\n  const displayVersion = component.version !== undefined && (mainBranch || longBranch);\n\n  return (\n    <div className=\"navbar-context-meta flex-0\">\n      {warnings.length > 0 && <ComponentNavWarnings warnings={warnings} />}\n      {component.analysisDate && (\n        <div className=\"spacer-left text-ellipsis\">\n          <DateTimeFormatter date={component.analysisDate} />\n        </div>\n      )}\n      {displayVersion && (\n        <Tooltip mouseEnterDelay={0.5} overlay={`${translate('version')} ${component.version}`}>\n          <div className=\"spacer-left text-limited\">\n            {translate('version')} {component.version}\n          </div>\n        </Tooltip>\n      )}\n      {isLoggedIn(currentUser) && (\n        <div className=\"navbar-context-meta-secondary\">\n          {mainBranch && (\n            <Favorite\n              component={component.key}\n              favorite={Boolean(component.isFavorite)}\n              qualifier={component.qualifier}\n            />\n          )}\n          {(mainBranch || longBranch) && currentPage !== undefined && (\n            <HomePageSelect className=\"spacer-left\" currentPage={currentPage} />\n          )}\n        </div>\n      )}\n      {(isShortLivingBranch(branchLike) || isPullRequest(branchLike)) && (\n        <div className=\"navbar-context-meta-secondary display-inline-flex-center\">\n          {isPullRequest(branchLike) && branchLike.url !== undefined && (\n            <a\n              className=\"display-inline-flex-center big-spacer-right\"\n              href={branchLike.url}\n              rel=\"noopener noreferrer\"\n              target=\"_blank\">\n              {translate('branches.see_the_pr')}\n              <DetachIcon className=\"little-spacer-left\" size={12} />\n            </a>\n          )}\n          <BranchStatus branchLike={branchLike} component={component.key} />\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport function getCurrentPage(component: T.Component, branchLike: T.BranchLike | undefined) {\n  let currentPage: T.HomePage | undefined;\n  if (component.qualifier === 'VW' || component.qualifier === 'SVW') {\n    currentPage = { type: 'PORTFOLIO', component: component.key };\n  } else if (component.qualifier === 'APP') {\n    const branch = isLongLivingBranch(branchLike) ? branchLike.name : undefined;\n    currentPage = { type: 'APPLICATION', component: component.key, branch };\n  } else if (component.qualifier === 'TRK') {\n    // when home page is set to the default branch of a project, its name is returned as `undefined`\n    const branch = isLongLivingBranch(branchLike) ? branchLike.name : undefined;\n    currentPage = { type: 'PROJECT', component: component.key, branch };\n  }\n  return currentPage;\n}\n\nconst mapStateToProps = (state: Store) => ({\n  currentUser: getCurrentUser(state)\n});\n\nexport default connect(mapStateToProps)(ComponentNavMeta);\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { Link } from 'react-router';\nimport * as classNames from 'classnames';\nimport Dropdown from '../../../../components/controls/Dropdown';\nimport { withAppState } from '../../../../components/hoc/withAppState';\nimport DropdownIcon from '../../../../components/icons-components/DropdownIcon';\nimport NavBarTabs from '../../../../components/nav/NavBarTabs';\nimport {\n  isShortLivingBranch,\n  isPullRequest,\n  isMainBranch,\n  getBranchLikeQuery\n} from '../../../../helpers/branches';\nimport { translate } from '../../../../helpers/l10n';\nimport { isSonarCloud } from '../../../../helpers/system';\n\nconst SETTINGS_URLS = [\n  '/project/admin',\n  '/project/branches',\n  '/project/settings',\n  '/project/quality_profiles',\n  '/project/quality_gate',\n  '/custom_measures',\n  '/project/links',\n  '/project_roles',\n  '/project/history',\n  'background_tasks',\n  '/project/key',\n  '/project/deletion',\n  '/project/webhooks'\n];\n\ninterface Props {\n  appState: Pick<T.AppState, 'branchesEnabled'>;\n  branchLike: T.BranchLike | undefined;\n  component: T.Component;\n  location?: any;\n}\n\nexport class ComponentNavMenu extends React.PureComponent<Props> {\n  isProject() {\n    return this.props.component.qualifier === 'TRK';\n  }\n\n  isDeveloper() {\n    return this.props.component.qualifier === 'DEV';\n  }\n\n  isPortfolio() {\n    const { qualifier } = this.props.component;\n    return qualifier === 'VW' || qualifier === 'SVW';\n  }\n\n  isApplication() {\n    return this.props.component.qualifier === 'APP';\n  }\n\n  getConfiguration() {\n    return this.props.component.configuration || {};\n  }\n\n  getQuery = () => {\n    return { id: this.props.component.key, ...getBranchLikeQuery(this.props.branchLike) };\n  };\n\n  renderDashboardLink() {\n    const pathname = this.isPortfolio() ? '/portfolio' : '/dashboard';\n    return (\n      <li>\n        <Link activeClassName=\"active\" to={{ pathname, query: this.getQuery() }}>\n          {translate('overview.page')}\n        </Link>\n      </li>\n    );\n  }\n\n  renderCodeLink() {\n    if (this.isDeveloper()) {\n      return null;\n    }\n\n    return (\n      <li>\n        <Link activeClassName=\"active\" to={{ pathname: '/code', query: this.getQuery() }}>\n          {this.isPortfolio() || this.isApplication()\n            ? translate('view_projects.page')\n            : translate('code.page')}\n        </Link>\n      </li>\n    );\n  }\n\n  renderActivityLink() {\n    const { branchLike } = this.props;\n\n    if (isShortLivingBranch(branchLike) || isPullRequest(branchLike)) {\n      return null;\n    }\n\n    return (\n      <li>\n        <Link\n          activeClassName=\"active\"\n          to={{ pathname: '/project/activity', query: this.getQuery() }}>\n          {translate('project_activity.page')}\n        </Link>\n      </li>\n    );\n  }\n\n  renderIssuesLink() {\n    const { location = { pathname: '' } } = this.props;\n    const isIssuesActive = location.pathname.startsWith('/project/issues');\n    return (\n      <li>\n        <Link\n          activeClassName=\"active\"\n          className={classNames({ active: isIssuesActive })}\n          to={{ pathname: '/project/issues', query: { ...this.getQuery(), resolved: 'false' } }}>\n          {translate('issues.page')}\n        </Link>\n      </li>\n    );\n  }\n\n  renderComponentMeasuresLink() {\n    return (\n      <li>\n        <Link\n          activeClassName=\"active\"\n          to={{ pathname: '/component_measures', query: this.getQuery() }}>\n          {translate('layout.measures')}\n        </Link>\n      </li>\n    );\n  }\n\n  renderSecurityReports() {\n    const { branchLike, component } = this.props;\n    const { extensions = [] } = component;\n\n    if (isShortLivingBranch(branchLike) || isPullRequest(branchLike)) {\n      return null;\n    }\n\n    const hasSecurityReportsEnabled = extensions.some(extension =>\n      extension.key.startsWith('securityreport/')\n    );\n\n    if (!hasSecurityReportsEnabled) {\n      return null;\n    }\n\n    return (\n      <li>\n        <Link\n          activeClassName=\"active\"\n          to={{\n            pathname: '/project/extension/securityreport/securityreport',\n            query: this.getQuery()\n          }}>\n          {translate('layout.security_reports')}\n        </Link>\n      </li>\n    );\n  }\n\n  renderAdministration() {\n    const { branchLike } = this.props;\n\n    if (!this.getConfiguration().showSettings || (branchLike && !isMainBranch(branchLike))) {\n      return null;\n    }\n\n    const isSettingsActive = SETTINGS_URLS.some(url => window.location.href.indexOf(url) !== -1);\n\n    const adminLinks = this.renderAdministrationLinks();\n    if (!adminLinks.some(link => link != null)) {\n      return null;\n    }\n\n    return (\n      <Dropdown\n        data-test=\"administration\"\n        overlay={<ul className=\"menu\">{adminLinks}</ul>}\n        tagName=\"li\">\n        {({ onToggleClick, open }) => (\n          <a\n            aria-expanded={open}\n            aria-haspopup=\"true\"\n            className={classNames('dropdown-toggle', { active: isSettingsActive || open })}\n            href=\"#\"\n            id=\"component-navigation-admin\"\n            onClick={onToggleClick}>\n            {translate('layout.settings')}\n            <DropdownIcon className=\"little-spacer-left\" />\n          </a>\n        )}\n      </Dropdown>\n    );\n  }\n\n  renderAdministrationLinks() {\n    return [\n      this.renderSettingsLink(),\n      this.renderBranchesLink(),\n      this.renderProfilesLink(),\n      this.renderQualityGateLink(),\n      this.renderCustomMeasuresLink(),\n      this.renderLinksLink(),\n      this.renderPermissionsLink(),\n      this.renderBackgroundTasksLink(),\n      this.renderUpdateKeyLink(),\n      this.renderWebhooksLink(),\n      ...this.renderAdminExtensions(),\n      this.renderDeletionLink()\n    ];\n  }\n\n  renderSettingsLink() {\n    if (!this.getConfiguration().showSettings || this.isApplication() || this.isPortfolio()) {\n      return null;\n    }\n    return (\n      <li key=\"settings\">\n        <Link\n          activeClassName=\"active\"\n          to={{ pathname: '/project/settings', query: this.getQuery() }}>\n          {translate('project_settings.page')}\n        </Link>\n      </li>\n    );\n  }\n\n  renderBranchesLink() {\n    if (\n      !this.props.appState.branchesEnabled ||\n      !this.isProject() ||\n      !this.getConfiguration().showSettings\n    ) {\n      return null;\n    }\n\n    return (\n      <li key=\"branches\">\n        <Link\n          activeClassName=\"active\"\n          to={{ pathname: '/project/branches', query: { id: this.props.component.key } }}>\n          {translate('project_branches.page')}\n        </Link>\n      </li>\n    );\n  }\n\n  renderProfilesLink() {\n    if (!this.getConfiguration().showQualityProfiles) {\n      return null;\n    }\n    return (\n      <li key=\"profiles\">\n        <Link\n          activeClassName=\"active\"\n          to={{ pathname: '/project/quality_profiles', query: { id: this.props.component.key } }}>\n          {translate('project_quality_profiles.page')}\n        </Link>\n      </li>\n    );\n  }\n\n  renderQualityGateLink() {\n    if (!this.getConfiguration().showQualityGates) {\n      return null;\n    }\n    return (\n      <li key=\"quality_gate\">\n        <Link\n          activeClassName=\"active\"\n          to={{ pathname: '/project/quality_gate', query: { id: this.props.component.key } }}>\n          {translate('project_quality_gate.page')}\n        </Link>\n      </li>\n    );\n  }\n\n  renderCustomMeasuresLink() {\n    if (isSonarCloud() || !this.getConfiguration().showManualMeasures) {\n      return null;\n    }\n    return (\n      <li key=\"custom_measures\">\n        <Link\n          activeClassName=\"active\"\n          to={{ pathname: '/custom_measures', query: { id: this.props.component.key } }}>\n          {translate('custom_measures.page')}\n        </Link>\n      </li>\n    );\n  }\n\n  renderLinksLink() {\n    if (!this.getConfiguration().showLinks) {\n      return null;\n    }\n    return (\n      <li key=\"links\">\n        <Link\n          activeClassName=\"active\"\n          to={{ pathname: '/project/links', query: { id: this.props.component.key } }}>\n          {translate('project_links.page')}\n        </Link>\n      </li>\n    );\n  }\n\n  renderPermissionsLink() {\n    if (!this.getConfiguration().showPermissions) {\n      return null;\n    }\n    return (\n      <li key=\"permissions\">\n        <Link\n          activeClassName=\"active\"\n          to={{ pathname: '/project_roles', query: { id: this.props.component.key } }}>\n          {translate('permissions.page')}\n        </Link>\n      </li>\n    );\n  }\n\n  renderBackgroundTasksLink() {\n    if (!this.getConfiguration().showBackgroundTasks) {\n      return null;\n    }\n    return (\n      <li key=\"background_tasks\">\n        <Link\n          activeClassName=\"active\"\n          to={{ pathname: '/project/background_tasks', query: { id: this.props.component.key } }}>\n          {translate('background_tasks.page')}\n        </Link>\n      </li>\n    );\n  }\n\n  renderUpdateKeyLink() {\n    if (!this.getConfiguration().showUpdateKey) {\n      return null;\n    }\n    return (\n      <li key=\"update_key\">\n        <Link\n          activeClassName=\"active\"\n          to={{ pathname: '/project/key', query: { id: this.props.component.key } }}>\n          {translate('update_key.page')}\n        </Link>\n      </li>\n    );\n  }\n\n  renderWebhooksLink() {\n    if (!this.getConfiguration().showSettings || !this.isProject()) {\n      return null;\n    }\n    return (\n      <li key=\"webhooks\">\n        <Link\n          activeClassName=\"active\"\n          to={{ pathname: '/project/webhooks', query: { id: this.props.component.key } }}>\n          {translate('webhooks.page')}\n        </Link>\n      </li>\n    );\n  }\n\n  renderDeletionLink() {\n    const { qualifier } = this.props.component;\n\n    if (!this.getConfiguration().showSettings) {\n      return null;\n    }\n\n    if (qualifier !== 'TRK' && qualifier !== 'VW' && qualifier !== 'APP') {\n      return null;\n    }\n\n    return (\n      <li key=\"project_delete\">\n        <Link\n          activeClassName=\"active\"\n          to={{ pathname: '/project/deletion', query: { id: this.props.component.key } }}>\n          {translate('deletion.page')}\n        </Link>\n      </li>\n    );\n  }\n\n  renderExtension = ({ key, name }: T.Extension, isAdmin: boolean) => {\n    const pathname = isAdmin ? `/project/admin/extension/${key}` : `/project/extension/${key}`;\n    const query = { id: this.props.component.key, qualifier: this.props.component.qualifier };\n    return (\n      <li key={key}>\n        <Link activeClassName=\"active\" to={{ pathname, query }}>\n          {name}\n        </Link>\n      </li>\n    );\n  };\n\n  renderAdminExtensions() {\n    if (this.props.branchLike && !isMainBranch(this.props.branchLike)) {\n      return [];\n    }\n    const extensions = this.getConfiguration().extensions || [];\n    return extensions.map(e => this.renderExtension(e, true));\n  }\n\n  renderExtensions() {\n    const extensions = this.props.component.extensions || [];\n    const withoutSecurityExtension = extensions.filter(\n      extension => !extension.key.startsWith('securityreport/')\n    );\n    if (\n      withoutSecurityExtension.length === 0 ||\n      (this.props.branchLike && !isMainBranch(this.props.branchLike))\n    ) {\n      return null;\n    }\n\n    return (\n      <Dropdown\n        data-test=\"extensions\"\n        overlay={\n          <ul className=\"menu\">\n            {withoutSecurityExtension.map(e => this.renderExtension(e, false))}\n          </ul>\n        }\n        tagName=\"li\">\n        {({ onToggleClick, open }) => (\n          <a\n            aria-expanded={open}\n            aria-haspopup=\"true\"\n            className={classNames('dropdown-toggle', { active: open })}\n            href=\"#\"\n            id=\"component-navigation-more\"\n            onClick={onToggleClick}>\n            {translate('more')}\n            <DropdownIcon className=\"little-spacer-left\" />\n          </a>\n        )}\n      </Dropdown>\n    );\n  }\n\n  render() {\n    return (\n      <NavBarTabs>\n        {this.renderDashboardLink()}\n        {this.renderIssuesLink()}\n        {this.renderSecurityReports()}\n        {this.renderComponentMeasuresLink()}\n        {this.renderCodeLink()}\n        {this.renderActivityLink()}\n        {this.renderAdministration()}\n        {this.renderExtensions()}\n      </NavBarTabs>\n    );\n  }\n}\n\nexport default withAppState(ComponentNavMenu);\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { Link } from 'react-router';\nimport { translate } from '../../../../helpers/l10n';\nimport { isValidLicense } from '../../../../api/marketplace';\nimport { withAppState } from '../../../../components/hoc/withAppState';\nimport { Alert } from '../../../../components/ui/Alert';\n\ninterface Props {\n  appState: Pick<T.AppState, 'canAdmin'>;\n  currentTask?: T.Task;\n}\n\ninterface State {\n  isValidLicense?: boolean;\n  loading: boolean;\n}\n\nexport class ComponentNavLicenseNotif extends React.PureComponent<Props, State> {\n  mounted = false;\n  state: State = { loading: false };\n\n  componentDidMount() {\n    this.mounted = true;\n    this.fetchIsValidLicense();\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  fetchIsValidLicense = () => {\n    this.setState({ loading: true });\n    isValidLicense().then(\n      ({ isValidLicense }) => {\n        if (this.mounted) {\n          this.setState({ isValidLicense, loading: false });\n        }\n      },\n      () => {\n        if (this.mounted) {\n          this.setState({ loading: false });\n        }\n      }\n    );\n  };\n\n  render() {\n    const { currentTask } = this.props;\n    const { isValidLicense, loading } = this.state;\n\n    if (loading || !currentTask || !currentTask.errorType) {\n      return null;\n    }\n\n    if (isValidLicense && currentTask.errorType !== 'LICENSING_LOC') {\n      return (\n        <Alert display=\"banner\" variant=\"error\">\n          {translate('component_navigation.status.last_blocked_due_to_bad_license')}\n        </Alert>\n      );\n    }\n\n    return (\n      <Alert display=\"banner\" variant=\"error\">\n        <span className=\"little-spacer-right\">{currentTask.errorMessage}</span>\n        {this.props.appState.canAdmin ? (\n          <Link to=\"/admin/extension/license/app\">\n            {translate('license.component_navigation.button', currentTask.errorType)}.\n          </Link>\n        ) : (\n          translate('please_contact_administrator')\n        )}\n      </Alert>\n    );\n  }\n}\n\nexport default withAppState(ComponentNavLicenseNotif);\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { Link } from 'react-router';\nimport { FormattedMessage } from 'react-intl';\nimport ComponentNavLicenseNotif from './ComponentNavLicenseNotif';\nimport { STATUSES } from '../../../../apps/background-tasks/constants';\nimport { getComponentBackgroundTaskUrl } from '../../../../helpers/urls';\nimport { hasMessage, translate } from '../../../../helpers/l10n';\nimport { Alert } from '../../../../components/ui/Alert';\n\ninterface Props {\n  component: T.Component;\n  currentTask?: T.Task;\n  currentTaskOnSameBranch?: boolean;\n  isInProgress?: boolean;\n  isPending?: boolean;\n}\n\nexport default class ComponentNavBgTaskNotif extends React.PureComponent<Props> {\n  renderMessage(messageKey: string, status?: string, branch?: string) {\n    const { component } = this.props;\n    const canSeeBackgroundTasks =\n      component.configuration && component.configuration.showBackgroundTasks;\n\n    let url;\n    if (canSeeBackgroundTasks) {\n      messageKey += '.admin';\n      url = (\n        <Link to={getComponentBackgroundTaskUrl(component.key, status)}>\n          {translate('background_tasks.page')}\n        </Link>\n      );\n    }\n\n    return (\n      <FormattedMessage\n        defaultMessage={translate(messageKey)}\n        id={messageKey}\n        values={{ branch, url }}\n      />\n    );\n  }\n\n  render() {\n    const { currentTask, currentTaskOnSameBranch, isInProgress, isPending } = this.props;\n    if (isInProgress) {\n      return (\n        <Alert display=\"banner\" variant=\"info\">\n          {this.renderMessage('component_navigation.status.in_progress')}\n        </Alert>\n      );\n    } else if (isPending) {\n      return (\n        <Alert display=\"banner\" variant=\"info\">\n          {this.renderMessage('component_navigation.status.pending', STATUSES.ALL)}\n        </Alert>\n      );\n    } else if (currentTask && currentTask.status === STATUSES.FAILED) {\n      if (\n        currentTask.errorType &&\n        hasMessage('license.component_navigation.button', currentTask.errorType)\n      ) {\n        return <ComponentNavLicenseNotif currentTask={currentTask} />;\n      }\n      const branch =\n        currentTask.branch ||\n        `${currentTask.pullRequest}${\n          currentTask.pullRequestTitle ? ' - ' + currentTask.pullRequestTitle : ''\n        }`;\n      let message;\n      if (currentTaskOnSameBranch === false && branch) {\n        message = this.renderMessage(\n          'component_navigation.status.failed_branch',\n          undefined,\n          branch\n        );\n      } else {\n        message = this.renderMessage('component_navigation.status.failed');\n      }\n\n      return (\n        <Alert display=\"banner\" variant=\"error\">\n          {message}\n        </Alert>\n      );\n    }\n    return null;\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport ComponentNavHeader from './ComponentNavHeader';\nimport ComponentNavMeta from './ComponentNavMeta';\nimport ComponentNavMenu from './ComponentNavMenu';\nimport ComponentNavBgTaskNotif from './ComponentNavBgTaskNotif';\nimport RecentHistory from '../../RecentHistory';\nimport * as theme from '../../../theme';\nimport ContextNavBar from '../../../../components/nav/ContextNavBar';\nimport { STATUSES } from '../../../../apps/background-tasks/constants';\nimport './ComponentNav.css';\n\ninterface Props {\n  branchLikes: T.BranchLike[];\n  currentBranchLike: T.BranchLike | undefined;\n  component: T.Component;\n  currentTask?: T.Task;\n  currentTaskOnSameBranch?: boolean;\n  isInProgress?: boolean;\n  isPending?: boolean;\n  location: {};\n  warnings: string[];\n}\n\nexport default class ComponentNav extends React.PureComponent<Props> {\n  mounted = false;\n\n  componentDidMount() {\n    this.populateRecentHistory();\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    if (this.props.component.key !== prevProps.component.key) {\n      this.populateRecentHistory();\n    }\n  }\n\n  populateRecentHistory = () => {\n    const { breadcrumbs } = this.props.component;\n    const { qualifier } = breadcrumbs[breadcrumbs.length - 1];\n    if (['TRK', 'VW', 'APP', 'DEV'].indexOf(qualifier) !== -1) {\n      RecentHistory.add(\n        this.props.component.key,\n        this.props.component.name,\n        qualifier.toLowerCase(),\n        this.props.component.organization\n      );\n    }\n  };\n\n  render() {\n    const { component, currentBranchLike, currentTask, isInProgress, isPending } = this.props;\n    let notifComponent;\n    if (isInProgress || isPending || (currentTask && currentTask.status === STATUSES.FAILED)) {\n      notifComponent = (\n        <ComponentNavBgTaskNotif\n          component={component}\n          currentTask={currentTask}\n          currentTaskOnSameBranch={this.props.currentTaskOnSameBranch}\n          isInProgress={isInProgress}\n          isPending={isPending}\n        />\n      );\n    }\n    return (\n      <ContextNavBar\n        height={notifComponent ? theme.contextNavHeightRaw + 30 : theme.contextNavHeightRaw}\n        id=\"context-navigation\"\n        notif={notifComponent}>\n        <div className=\"navbar-context-justified\">\n          <ComponentNavHeader\n            branchLikes={this.props.branchLikes}\n            component={component}\n            currentBranchLike={currentBranchLike}\n            // to close dropdown on any location change\n            location={this.props.location}\n          />\n          <ComponentNavMeta\n            branchLike={currentBranchLike}\n            component={component}\n            warnings={this.props.warnings}\n          />\n        </div>\n        <ComponentNavMenu\n          branchLike={currentBranchLike}\n          component={component}\n          // to re-render selected menu item\n          location={this.props.location}\n        />\n      </ContextNavBar>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { connect } from 'react-redux';\nimport { differenceBy } from 'lodash';\nimport { ComponentContext } from './ComponentContext';\nimport ComponentContainerNotFound from './ComponentContainerNotFound';\nimport ComponentNav from './nav/component/ComponentNav';\nimport { getBranches, getPullRequests } from '../../api/branches';\nimport { getTasksForComponent, getAnalysisStatus } from '../../api/ce';\nimport { getComponentData } from '../../api/components';\nimport { getComponentNavigation } from '../../api/nav';\nimport {\n  fetchOrganization,\n  requireAuthorization,\n  registerBranchStatus\n} from '../../store/rootActions';\nimport { STATUSES } from '../../apps/background-tasks/constants';\nimport {\n  isPullRequest,\n  isBranch,\n  isMainBranch,\n  isLongLivingBranch,\n  isShortLivingBranch,\n  getBranchLikeQuery\n} from '../../helpers/branches';\nimport { isSonarCloud } from '../../helpers/system';\nimport { withRouter, Router, Location } from '../../components/hoc/withRouter';\n\ninterface Props {\n  children: React.ReactElement;\n  fetchOrganization: (organization: string) => void;\n  location: Pick<Location, 'query'>;\n  registerBranchStatus: (branchLike: T.BranchLike, component: string, status: T.Status) => void;\n  requireAuthorization: (router: Pick<Router, 'replace'>) => void;\n  router: Pick<Router, 'replace'>;\n}\n\ninterface State {\n  branchLike?: T.BranchLike;\n  branchLikes: T.BranchLike[];\n  component?: T.Component;\n  currentTask?: T.Task;\n  isPending: boolean;\n  loading: boolean;\n  tasksInProgress?: T.Task[];\n  warnings: string[];\n}\n\nconst FETCH_STATUS_WAIT_TIME = 3000;\n\nexport class ComponentContainer extends React.PureComponent<Props, State> {\n  watchStatusTimer?: number;\n  mounted = false;\n  state: State = { branchLikes: [], isPending: false, loading: true, warnings: [] };\n\n  componentDidMount() {\n    this.mounted = true;\n    this.fetchComponent();\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    if (\n      prevProps.location.query.id !== this.props.location.query.id ||\n      prevProps.location.query.branch !== this.props.location.query.branch ||\n      prevProps.location.query.pullRequest !== this.props.location.query.pullRequest\n    ) {\n      this.fetchComponent();\n    }\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n    window.clearTimeout(this.watchStatusTimer);\n  }\n\n  addQualifier = (component: T.Component) => ({\n    ...component,\n    qualifier: component.breadcrumbs[component.breadcrumbs.length - 1].qualifier\n  });\n\n  fetchComponent() {\n    const { branch, id: key, pullRequest } = this.props.location.query;\n    this.setState({ loading: true });\n\n    const onError = (param?: any) => {\n      if (this.mounted) {\n        let response: Response;\n\n        if (param && param.response) {\n          response = param.response;\n        } else {\n          response = param;\n        }\n\n        if (response && response.status === 403) {\n          this.props.requireAuthorization(this.props.router);\n        } else {\n          this.setState({ component: undefined, loading: false });\n        }\n      }\n    };\n\n    Promise.all([\n      getComponentNavigation({ component: key, branch, pullRequest }),\n      getComponentData({ component: key, branch, pullRequest })\n    ])\n      .then(([nav, { component }]) => {\n        const componentWithQualifier = this.addQualifier({ ...nav, ...component });\n\n        if (isSonarCloud()) {\n          this.props.fetchOrganization(componentWithQualifier.organization);\n        }\n        return componentWithQualifier;\n      }, onError)\n      .then(this.fetchBranches)\n      .then(\n        ({ branchLike, branchLikes, component }) => {\n          if (this.mounted) {\n            this.setState({\n              branchLike,\n              branchLikes,\n              component,\n              loading: false\n            });\n            this.fetchStatus(component);\n            this.fetchWarnings(component, branchLike);\n          }\n        },\n        () => {}\n      );\n  }\n\n  fetchBranches = (\n    component: T.Component\n  ): Promise<{\n    branchLike?: T.BranchLike;\n    branchLikes: T.BranchLike[];\n    component: T.Component;\n  }> => {\n    const breadcrumb = component.breadcrumbs.find(({ qualifier }) => {\n      return ['APP', 'TRK'].includes(qualifier);\n    });\n\n    if (breadcrumb) {\n      const { key } = breadcrumb;\n      return Promise.all([\n        getBranches(key),\n        breadcrumb.qualifier === 'APP' ? Promise.resolve([]) : getPullRequests(key)\n      ]).then(([branches, pullRequests]) => {\n        const branchLikes = [...branches, ...pullRequests];\n        const branchLike = this.getCurrentBranchLike(branchLikes);\n\n        this.registerBranchStatuses(branchLikes, component);\n\n        return { branchLike, branchLikes, component };\n      });\n    } else {\n      return Promise.resolve({ branchLikes: [], component });\n    }\n  };\n\n  fetchStatus = (component: T.Component) => {\n    getTasksForComponent(component.key).then(\n      ({ current, queue }) => {\n        if (this.mounted) {\n          let shouldFetchComponent = false;\n          this.setState(\n            ({ branchLike, component, currentTask, tasksInProgress }) => {\n              const newCurrentTask = this.getCurrentTask(current, branchLike);\n              const pendingTasks = this.getPendingTasks(queue, branchLike);\n              const newTasksInProgress = pendingTasks.filter(\n                task => task.status === STATUSES.IN_PROGRESS\n              );\n\n              const currentTaskChanged =\n                currentTask && newCurrentTask && currentTask.id !== newCurrentTask.id;\n              const progressChanged =\n                tasksInProgress &&\n                (newTasksInProgress.length !== tasksInProgress.length ||\n                  differenceBy(newTasksInProgress, tasksInProgress, 'id').length > 0);\n\n              shouldFetchComponent = Boolean(currentTaskChanged || progressChanged);\n              if (\n                !shouldFetchComponent &&\n                component &&\n                (newTasksInProgress.length > 0 || !component.analysisDate)\n              ) {\n                // Refresh the status as long as there is tasks in progress or no analysis\n                window.clearTimeout(this.watchStatusTimer);\n                this.watchStatusTimer = window.setTimeout(\n                  () => this.fetchStatus(component),\n                  FETCH_STATUS_WAIT_TIME\n                );\n              }\n\n              const isPending = pendingTasks.some(task => task.status === STATUSES.PENDING);\n              return {\n                currentTask: newCurrentTask,\n                isPending,\n                tasksInProgress: newTasksInProgress\n              };\n            },\n            () => {\n              if (shouldFetchComponent) {\n                this.fetchComponent();\n              }\n            }\n          );\n        }\n      },\n      () => {}\n    );\n  };\n\n  fetchWarnings = (component: T.Component, branchLike?: T.BranchLike) => {\n    if (component.qualifier === 'TRK') {\n      getAnalysisStatus({\n        component: component.key,\n        ...getBranchLikeQuery(branchLike)\n      }).then(\n        ({ component }) => {\n          this.setState({ warnings: component.warnings });\n        },\n        () => {}\n      );\n    }\n  };\n\n  getCurrentBranchLike = (branchLikes: T.BranchLike[]) => {\n    const { query } = this.props.location;\n    return query.pullRequest\n      ? branchLikes.find(b => isPullRequest(b) && b.key === query.pullRequest)\n      : branchLikes.find(b => isBranch(b) && (query.branch ? b.name === query.branch : b.isMain));\n  };\n\n  getCurrentTask = (current: T.Task, branchLike?: T.BranchLike) => {\n    if (!current) {\n      return undefined;\n    }\n\n    return current.status === STATUSES.FAILED || this.isSameBranch(current, branchLike)\n      ? current\n      : undefined;\n  };\n\n  getPendingTasks = (pendingTasks: T.Task[], branchLike?: T.BranchLike) => {\n    return pendingTasks.filter(task => this.isSameBranch(task, branchLike));\n  };\n\n  isSameBranch = (\n    task: Pick<T.Task, 'branch' | 'branchType' | 'pullRequest'>,\n    branchLike?: T.BranchLike\n  ) => {\n    if (branchLike && !isMainBranch(branchLike)) {\n      if (isPullRequest(branchLike)) {\n        return branchLike.key === task.pullRequest;\n      }\n      if (isShortLivingBranch(branchLike) || isLongLivingBranch(branchLike)) {\n        return branchLike.type === task.branchType && branchLike.name === task.branch;\n      }\n    }\n    return !task.branch && !task.pullRequest;\n  };\n\n  registerBranchStatuses = (branchLikes: T.BranchLike[], component: T.Component) => {\n    branchLikes.forEach(branchLike => {\n      if (branchLike.status) {\n        this.props.registerBranchStatus(\n          branchLike,\n          component.key,\n          branchLike.status.qualityGateStatus\n        );\n      }\n    });\n  };\n\n  handleComponentChange = (changes: Partial<T.Component>) => {\n    if (this.mounted) {\n      this.setState(state => {\n        if (state.component) {\n          const newComponent: T.Component = { ...state.component, ...changes };\n          return { component: newComponent };\n        }\n        return null;\n      });\n    }\n  };\n\n  handleBranchesChange = () => {\n    if (this.mounted && this.state.component) {\n      this.fetchBranches(this.state.component).then(\n        ({ branchLike, branchLikes }) => {\n          if (this.mounted) {\n            this.setState({ branchLike, branchLikes });\n          }\n        },\n        () => {}\n      );\n    }\n  };\n\n  render() {\n    const { component, loading } = this.state;\n\n    if (!loading && !component) {\n      return <ComponentContainerNotFound />;\n    }\n\n    const { branchLike, branchLikes, currentTask, isPending, tasksInProgress } = this.state;\n    const isInProgress = tasksInProgress && tasksInProgress.length > 0;\n\n    return (\n      <div>\n        {component && !['FIL', 'UTS'].includes(component.qualifier) && (\n          <ComponentNav\n            branchLikes={branchLikes}\n            component={component}\n            currentBranchLike={branchLike}\n            currentTask={currentTask}\n            currentTaskOnSameBranch={currentTask && this.isSameBranch(currentTask, branchLike)}\n            isInProgress={isInProgress}\n            isPending={isPending}\n            location={this.props.location}\n            warnings={this.state.warnings}\n          />\n        )}\n        {loading ? (\n          <div className=\"page page-limited\">\n            <i className=\"spinner\" />\n          </div>\n        ) : (\n          <ComponentContext.Provider value={{ branchLike, component }}>\n            {React.cloneElement(this.props.children, {\n              branchLike,\n              branchLikes,\n              component,\n              isInProgress,\n              isPending,\n              onBranchesChange: this.handleBranchesChange,\n              onComponentChange: this.handleComponentChange\n            })}\n          </ComponentContext.Provider>\n        )}\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = { fetchOrganization, registerBranchStatus, requireAuthorization };\n\nexport default withRouter(\n  connect(\n    null,\n    mapDispatchToProps\n  )(ComponentContainer)\n);\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport HelpTooltip from '../controls/HelpTooltip';\nimport { lazyLoad } from '../lazyLoad';\n\nconst DocMarkdownBlock = lazyLoad(() => import('./DocMarkdownBlock'));\n\ninterface Props {\n  className?: string;\n  children?: React.ReactNode;\n  // Use as `import(/* webpackMode: \"eager\" */ 'Docs/tooltips/foo/bar.md')`\n  doc: Promise<{ default: string }>;\n  overlayProps?: T.Dict<string>;\n}\n\ninterface State {\n  content?: string;\n  open: boolean;\n}\n\nexport default class DocTooltip extends React.PureComponent<Props, State> {\n  mounted = false;\n  state: State = { open: false };\n\n  componentDidMount() {\n    this.mounted = true;\n    this.props.doc.then(\n      ({ default: content }) => {\n        if (this.mounted) {\n          this.setState({ content });\n        }\n      },\n      () => {}\n    );\n    document.addEventListener('scroll', this.close, true);\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n    document.removeEventListener('scroll', this.close, true);\n  }\n\n  close = () => {\n    if (this.mounted) {\n      this.setState({ open: false });\n    }\n  };\n\n  render() {\n    return this.state.content ? (\n      <HelpTooltip\n        className={this.props.className}\n        overlay={\n          <div className=\"abs-width-300\">\n            <DocMarkdownBlock\n              childProps={this.props.overlayProps}\n              className=\"cut-margins\"\n              content={this.state.content}\n              isTooltip={true}\n            />\n          </div>\n        }>\n        {this.props.children}\n      </HelpTooltip>\n    ) : (\n      this.props.children || null\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { isLoggedIn } from './users';\n\nexport function getAlmMembersUrl(key: string, url: string): string {\n  if (!url.endsWith('/')) {\n    url += '/';\n  }\n  if (isGithub(key)) {\n    return url.replace('github.com/', 'github.com/orgs/') + 'people';\n  }\n  return url + 'profile/members';\n}\n\nexport function getUserAlmKey(user: T.CurrentUser) {\n  return isLoggedIn(user) && user.externalProvider\n    ? sanitizeAlmId(user.externalProvider)\n    : undefined;\n}\n\nexport function hasAdvancedALMIntegration(user: T.CurrentUser) {\n  return (\n    isLoggedIn(user) && (isBitbucket(user.externalProvider) || isGithub(user.externalProvider))\n  );\n}\n\nexport function isBitbucket(almKey?: string): boolean {\n  return almKey ? almKey.startsWith('bitbucket') : false;\n}\n\nexport function isGithub(almKey?: string): boolean {\n  return almKey === 'github';\n}\n\nexport function isVSTS(almKey?: string): boolean {\n  return almKey === 'microsoft';\n}\n\nexport function isPersonal(organization?: T.AlmOrganization) {\n  return Boolean(organization && organization.personal);\n}\n\nexport function sanitizeAlmId(almKey: string) {\n  if (isBitbucket(almKey)) {\n    return 'bitbucket';\n  }\n  return almKey;\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { connect } from 'react-redux';\nimport { getWrappedDisplayName } from './utils';\nimport { Store, getAppState } from '../../store/rootReducer';\n\nexport function withAppState<P>(\n  WrappedComponent: React.ComponentClass<P & { appState: Partial<T.AppState> }>\n) {\n  class Wrapper extends React.Component<P & { appState: T.AppState }> {\n    static displayName = getWrappedDisplayName(WrappedComponent, 'withAppState');\n\n    render() {\n      return <WrappedComponent {...this.props} />;\n    }\n  }\n\n  function mapStateToProps(state: Store) {\n    return { appState: getAppState(state) };\n  }\n\n  return connect(mapStateToProps)(Wrapper);\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { Query } from './utils';\n\nexport const STATUSES = {\n  ALL: '__ALL__',\n  ALL_EXCEPT_PENDING: '__ALL_EXCEPT_PENDING__',\n  PENDING: 'PENDING',\n  IN_PROGRESS: 'IN_PROGRESS',\n  SUCCESS: 'SUCCESS',\n  FAILED: 'FAILED',\n  CANCELED: 'CANCELED'\n};\n\nexport const ALL_TYPES = 'ALL_TYPES';\n\nexport const CURRENTS = {\n  ALL: '__ALL__',\n  ONLY_CURRENTS: 'CURRENTS'\n};\n\nexport const DATE = {\n  ANY: 'ANY',\n  TODAY: 'TODAY',\n  CUSTOM: 'CUSTOM'\n};\n\nexport const DEFAULT_FILTERS: Query = {\n  status: STATUSES.ALL_EXCEPT_PENDING,\n  taskType: ALL_TYPES,\n  currents: CURRENTS.ALL,\n  minSubmittedAt: undefined,\n  maxExecutedAt: undefined,\n  query: ''\n};\n\nexport const DATE_FORMAT = 'YYYY-MM-DD';\n\nexport const DEBOUNCE_DELAY = 250;\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { getJSON, post, RequestData } from '../helpers/request';\nimport throwGlobalError from '../app/utils/throwGlobalError';\n\nexport function getAnalysisStatus(data: {\n  component: string;\n  branch?: string;\n  pullRequest?: string;\n}): Promise<{\n  component: {\n    branch?: string;\n    key: string;\n    name: string;\n    organization?: string;\n    pullRequest?: string;\n    warnings: string[];\n  };\n}> {\n  return getJSON('/api/ce/analysis_status', data).catch(throwGlobalError);\n}\n\nexport function getActivity(data: RequestData): Promise<{ tasks: T.Task[] }> {\n  return getJSON('/api/ce/activity', data);\n}\n\nexport function getStatus(\n  componentId?: string\n): Promise<{ failing: number; inProgress: number; pending: number; pendingTime?: number }> {\n  const data = {};\n  if (componentId) {\n    Object.assign(data, { componentId });\n  }\n  return getJSON('/api/ce/activity_status', data);\n}\n\nexport function getTask(id: string, additionalFields?: string[]): Promise<T.Task> {\n  return getJSON('/api/ce/task', { id, additionalFields }).then(r => r.task);\n}\n\nexport function cancelTask(id: string): Promise<any> {\n  return post('/api/ce/cancel', { id }).then(() => getTask(id), () => getTask(id));\n}\n\nexport function cancelAllTasks(): Promise<any> {\n  return post('/api/ce/cancel_all');\n}\n\nexport function getTasksForComponent(\n  component: string\n): Promise<{ queue: T.Task[]; current: T.Task }> {\n  return getJSON('/api/ce/component', { component }).catch(throwGlobalError);\n}\n\nexport function getTypes(): Promise<string[]> {\n  return getJSON('/api/ce/task_types').then(r => r.taskTypes);\n}\n\nexport function getWorkers(): Promise<{ canSetWorkerCount: boolean; value: number }> {\n  return getJSON('/api/ce/worker_count').catch(throwGlobalError);\n}\n\nexport function setWorkerCount(count: number): Promise<void | Response> {\n  return post('/api/ce/set_worker_count', { count }).catch(throwGlobalError);\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { getJSON } from '../helpers/request';\nimport throwGlobalError from '../app/utils/throwGlobalError';\n\nexport function getGlobalNavigation(): Promise<T.AppState> {\n  return getJSON('/api/navigation/global');\n}\n\nexport function getComponentNavigation(\n  data: { component: string } & T.BranchParameters\n): Promise<any> {\n  return getJSON('/api/navigation/component', data).catch(throwGlobalError);\n}\n\nexport function getMarketplaceNavigation(): Promise<{ serverId: string; ncloc: number }> {\n  return getJSON('/api/navigation/marketplace').catch(throwGlobalError);\n}\n\nexport function getSettingsNavigation(): Promise<any> {\n  return getJSON('/api/navigation/settings').catch(throwGlobalError);\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport Helmet from 'react-helmet';\n\ninterface Props {\n  organization?: { name: string };\n  title: string;\n}\n\nexport default function OrganizationHelmet({ title, organization }: Props) {\n  const defaultTitle = title + (organization ? ' - ' + organization.name : '');\n  return <Helmet defaultTitle={defaultTitle} titleTemplate={'%s - ' + defaultTitle} />;\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { connect } from 'react-redux';\nimport Level from '../ui/Level';\nimport { Store, getBranchStatusByBranchLike } from '../../store/rootReducer';\n\ninterface Props {\n  branchLike: T.BranchLike;\n  component: string;\n  status?: string;\n}\n\nexport function BranchStatus({ status }: Props) {\n  if (!status) {\n    return null;\n  }\n\n  return <Level level={status} small={true} />;\n}\n\nconst mapStateToProps = (state: Store, { branchLike, component }: Props) => {\n  const { status } = getBranchStatusByBranchLike(state, component, branchLike);\n  return { status };\n};\n\nexport default connect(mapStateToProps)(BranchStatus);\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport Icon, { IconProps } from './Icon';\nimport * as theme from '../../app/theme';\n\nexport default function WarningIcon({ className, fill = theme.warningIconColor, size }: IconProps) {\n  return (\n    <Icon className={className} size={size}>\n      <path\n        d=\"M9 12.242v-1.484c0-.14-.11-.258-.25-.258h-1.5c-.14 0-.25.117-.25.258v1.484c0 .14.11.258.25.258h1.5c.14 0 .25-.117.25-.258zM8.984 9.32l.141-3.586a.189.189 0 0 0-.078-.148C9 5.546 8.93 5.5 8.859 5.5H7.141c-.07 0-.141.047-.188.086-.055.039-.078.117-.078.164l.133 3.57c0 .102.117.18.265.18H8.72c.14 0 .258-.078.265-.18zm-.109-7.297l6 11A1 1 0 0 1 14 14.5H2a1 1 0 0 1-.875-1.477l6-11a.994.994 0 0 1 1.75 0z\"\n        style={{ fill }}\n      />\n    </Icon>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { getJSON, post } from '../helpers/request';\nimport throwGlobalError from '../app/utils/throwGlobalError';\n\nexport function getBranches(project: string): Promise<T.Branch[]> {\n  return getJSON('/api/project_branches/list', { project }).then(r => r.branches, throwGlobalError);\n}\n\nexport function getPullRequests(project: string): Promise<T.PullRequest[]> {\n  return getJSON('/api/project_pull_requests/list', { project }).then(\n    r => r.pullRequests,\n    throwGlobalError\n  );\n}\n\nexport function deleteBranch(data: { branch: string; project: string }) {\n  return post('/api/project_branches/delete', data).catch(throwGlobalError);\n}\n\nexport function deletePullRequest(data: { project: string; pullRequest: string }) {\n  return post('/api/project_pull_requests/delete', data).catch(throwGlobalError);\n}\n\nexport function renameBranch(project: string, name: string) {\n  return post('/api/project_branches/rename', { project, name }).catch(throwGlobalError);\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\n\ninterface ComponentContextType {\n  branchLike: T.BranchLike | undefined;\n  component: T.Component | undefined;\n}\n\nexport const ComponentContext = React.createContext<ComponentContextType>({\n  branchLike: undefined,\n  component: undefined\n});\n"],"sourceRoot":""}