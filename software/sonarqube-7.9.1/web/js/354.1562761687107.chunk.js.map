{"version":3,"sources":["webpack:///./src/main/js/apps/portfolio/components/CreateFormShim.tsx","webpack:///./src/main/js/components/icons-components/PlusIcon.tsx","webpack:///./src/main/js/app/components/nav/global/GlobalNavPlus.tsx","webpack:///./src/main/js/helpers/extensions.ts","webpack:///./src/main/js/api/nav.ts"],"names":["_super","CreateFormShim","__extends","prototype","render","CreateForm","window","SonarGovernance","index_js_exposed","__assign","this","props","PlusIcon","_a","className","_b","fill","size","Icon","d","style","GlobalNavPlus_GlobalNavPlus","GlobalNavPlus","_this","apply","arguments","mounted","state","createPortfolio","governanceReady","handleNewProjectClick","event","preventDefault","openProjectOnboarding","openCreatePortfolioForm","setState","closeCreatePortfolioForm","handleNewPortfolioClick","currentTarget","blur","handleCreatePortfolio","key","qualifier","Object","nav","component","then","data","configuration","extensions","find","item","router","push","urls","GlobalNavPlus_extends","componentDidMount","appState","qualifiers","includes","componentWillUnmount","renderCreateProject","canCreateProject","href","onClick","system","l10n","renderCreateOrganization","canCreateOrg","es","to","renderCreatePortfolio","showGovernanceEntry","defaultQualifier","currentUser","canCreateApplication","users","canCreatePortfolio","Dropdown","overlay","tagName","title","components_CreateFormShim","onClose","onCreate","__webpack_exports__","librariesExposed","installScript","url","target","Promise","resolve","scriptTag","document","createElement","src","_urls__WEBPACK_IMPORTED_MODULE_0__","onload","getElementsByTagName","appendChild","getExtensionStart","fromCache","_extensionsHandler__WEBPACK_IMPORTED_MODULE_1__","all","__webpack_require__","e","bind","exposeLibraries","sent","default","start","reject","getComponentNavigation","getMarketplaceNavigation","getSettingsNavigation","_helpers_request__WEBPACK_IMPORTED_MODULE_0__","_app_utils_throwGlobalError__WEBPACK_IMPORTED_MODULE_1__","catch"],"mappings":"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","file":"js/354.1562761687107.chunk.js","sourcesContent":["/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\n\ninterface Props {\n  defaultQualifier?: string;\n  onClose: () => void;\n  onCreate: (portfolio: { key: string; qualifier: string }) => void;\n}\n\nexport default class CreateFormShim extends React.Component<Props> {\n  render() {\n    const { CreateForm } = (window as any).SonarGovernance;\n    return <CreateForm {...this.props} />;\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport Icon, { IconProps } from './Icon';\n\nexport default function PlusIcon({ className, fill = 'currentColor', size }: IconProps) {\n  return (\n    <Icon className={className} size={size}>\n      <path d=\"M1,7L7,7L7,1L9,1L9,7L15,7L15,9L9,9L9,15L7,15L7,9L1,9L1,7Z\" style={{ fill }} />\n    </Icon>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { Link, withRouter, WithRouterProps } from 'react-router';\nimport CreateFormShim from '../../../../apps/portfolio/components/CreateFormShim';\nimport Dropdown from '../../../../components/controls/Dropdown';\nimport PlusIcon from '../../../../components/icons-components/PlusIcon';\nimport { OnboardingContextShape } from '../../OnboardingContext';\nimport { getComponentNavigation } from '../../../../api/nav';\nimport { getExtensionStart } from '../../../../helpers/extensions';\nimport { translate } from '../../../../helpers/l10n';\nimport { isSonarCloud } from '../../../../helpers/system';\nimport { getPortfolioAdminUrl, getPortfolioUrl } from '../../../../helpers/urls';\nimport { hasGlobalPermission } from '../../../../helpers/users';\n\ninterface Props {\n  appState: Pick<T.AppState, 'qualifiers'>;\n  currentUser: T.LoggedInUser;\n  openProjectOnboarding: OnboardingContextShape;\n}\n\ninterface State {\n  createPortfolio: boolean;\n  governanceReady: boolean;\n}\n\nexport class GlobalNavPlus extends React.PureComponent<Props & WithRouterProps, State> {\n  mounted = false;\n  state: State = { createPortfolio: false, governanceReady: false };\n\n  componentDidMount() {\n    this.mounted = true;\n    if (this.props.appState.qualifiers.includes('VW')) {\n      getExtensionStart('governance/console').then(\n        () => {\n          if (this.mounted) {\n            this.setState({ governanceReady: true });\n          }\n        },\n        () => {}\n      );\n    }\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  handleNewProjectClick = (event: React.MouseEvent<HTMLAnchorElement>) => {\n    event.preventDefault();\n    this.props.openProjectOnboarding();\n  };\n\n  openCreatePortfolioForm = () => {\n    this.setState({ createPortfolio: true });\n  };\n\n  closeCreatePortfolioForm = () => {\n    this.setState({ createPortfolio: false });\n  };\n\n  handleNewPortfolioClick = (event: React.MouseEvent<HTMLAnchorElement>) => {\n    event.preventDefault();\n    event.currentTarget.blur();\n    this.openCreatePortfolioForm();\n  };\n\n  handleCreatePortfolio = ({ key, qualifier }: { key: string; qualifier: string }) => {\n    return getComponentNavigation({ component: key }).then(data => {\n      if (\n        data.configuration &&\n        data.configuration.extensions &&\n        data.configuration.extensions.find(\n          (item: { key: string; name: string }) => item.key === 'governance/console'\n        )\n      ) {\n        this.props.router.push(getPortfolioAdminUrl(key, qualifier));\n      } else {\n        this.props.router.push(getPortfolioUrl(key));\n      }\n      this.closeCreatePortfolioForm();\n    });\n  };\n\n  renderCreateProject(canCreateProject: boolean) {\n    if (!canCreateProject) {\n      return null;\n    }\n    return (\n      <li>\n        <a className=\"js-new-project\" href=\"#\" onClick={this.handleNewProjectClick}>\n          {isSonarCloud()\n            ? translate('provisioning.analyze_new_project')\n            : translate('my_account.create_new.TRK')}\n        </a>\n      </li>\n    );\n  }\n\n  renderCreateOrganization(canCreateOrg: boolean) {\n    if (!canCreateOrg) {\n      return null;\n    }\n\n    return (\n      <li>\n        <Link className=\"js-new-organization\" to=\"/create-organization\">\n          {translate('my_account.create_new_organization')}\n        </Link>\n      </li>\n    );\n  }\n\n  renderCreatePortfolio(showGovernanceEntry: boolean, defaultQualifier?: string) {\n    const governanceInstalled = this.props.appState.qualifiers.includes('VW');\n    if (!governanceInstalled || !showGovernanceEntry) {\n      return null;\n    }\n\n    return (\n      <li>\n        <a className=\"js-new-portfolio\" href=\"#\" onClick={this.handleNewPortfolioClick}>\n          {defaultQualifier\n            ? translate('my_account.create_new', defaultQualifier)\n            : translate('my_account.create_new_portfolio_application')}\n        </a>\n      </li>\n    );\n  }\n\n  render() {\n    const { currentUser } = this.props;\n    const canCreateApplication = hasGlobalPermission(currentUser, 'applicationcreator');\n    const canCreateOrg = isSonarCloud();\n    const canCreatePortfolio = hasGlobalPermission(currentUser, 'portfoliocreator');\n    const canCreateProject = isSonarCloud() || hasGlobalPermission(currentUser, 'provisioning');\n\n    if (!canCreateProject && !canCreateApplication && !canCreatePortfolio && !canCreateOrg) {\n      return null;\n    }\n\n    let defaultQualifier: string | undefined;\n    if (!canCreateApplication) {\n      defaultQualifier = 'VW';\n    } else if (!canCreatePortfolio) {\n      defaultQualifier = 'APP';\n    }\n\n    return (\n      <>\n        <Dropdown\n          overlay={\n            <ul className=\"menu\">\n              {this.renderCreateProject(canCreateProject)}\n              {this.renderCreateOrganization(canCreateOrg)}\n              {this.renderCreatePortfolio(\n                canCreateApplication || canCreatePortfolio,\n                defaultQualifier\n              )}\n            </ul>\n          }\n          tagName=\"li\">\n          <a\n            className=\"navbar-icon navbar-plus\"\n            href=\"#\"\n            title={\n              isSonarCloud()\n                ? translate('my_account.create_new_project_or_organization')\n                : translate('my_account.create_new_project_portfolio_or_application')\n            }>\n            <PlusIcon />\n          </a>\n        </Dropdown>\n        {this.state.governanceReady && this.state.createPortfolio && (\n          <CreateFormShim\n            defaultQualifier={defaultQualifier}\n            onClose={this.closeCreatePortfolioForm}\n            onCreate={this.handleCreatePortfolio}\n          />\n        )}\n      </>\n    );\n  }\n}\n\nexport default withRouter(GlobalNavPlus);\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { getBaseUrl } from './urls';\nimport { getExtensionFromCache } from './extensionsHandler';\n\nlet librariesExposed = false;\n\nexport function installScript(url: string, target: 'body' | 'head' = 'body'): Promise<any> {\n  return new Promise(resolve => {\n    const scriptTag = document.createElement('script');\n    scriptTag.src = `${getBaseUrl()}${url}`;\n    scriptTag.onload = resolve;\n    document.getElementsByTagName(target)[0].appendChild(scriptTag);\n  });\n}\n\nexport async function getExtensionStart(key: string) {\n  const fromCache = getExtensionFromCache(key);\n  if (fromCache) {\n    return Promise.resolve(fromCache);\n  }\n\n  if (!librariesExposed) {\n    // Async import allows to reduce initial vendor bundle size\n    const exposeLibraries = (await import('../app/components/extensions/exposeLibraries')).default;\n    exposeLibraries();\n    librariesExposed = true;\n  }\n\n  await installScript(`/static/${key}.js`);\n\n  const start = getExtensionFromCache(key);\n  if (start) {\n    return start;\n  }\n  return Promise.reject();\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { getJSON } from '../helpers/request';\nimport throwGlobalError from '../app/utils/throwGlobalError';\n\nexport function getGlobalNavigation(): Promise<T.AppState> {\n  return getJSON('/api/navigation/global');\n}\n\nexport function getComponentNavigation(\n  data: { component: string } & T.BranchParameters\n): Promise<any> {\n  return getJSON('/api/navigation/component', data).catch(throwGlobalError);\n}\n\nexport function getMarketplaceNavigation(): Promise<{ serverId: string; ncloc: number }> {\n  return getJSON('/api/navigation/marketplace').catch(throwGlobalError);\n}\n\nexport function getSettingsNavigation(): Promise<any> {\n  return getJSON('/api/navigation/settings').catch(throwGlobalError);\n}\n"],"sourceRoot":""}