{"version":3,"sources":["webpack:///./src/main/js/components/common/StatusIndicator.css?1954","webpack:///./src/main/js/components/common/StatusIndicator.css","webpack:///./src/main/js/apps/system/styles.css?d742","webpack:///./src/main/js/apps/system/styles.css","webpack:///./src/main/js/apps/system/components/info-items/HealthCauseItem.tsx","webpack:///./src/main/js/components/common/StatusIndicator.tsx","webpack:///./src/main/js/apps/system/components/info-items/HealthItem.tsx","webpack:///./src/main/js/apps/system/utils.ts","webpack:///./src/main/js/apps/system/components/info-items/SysInfoItem.tsx","webpack:///./src/main/js/apps/system/components/info-items/Section.tsx","webpack:///./src/main/js/apps/system/components/info-items/HealthCard.tsx","webpack:///./src/main/js/apps/system/components/ClusterSysInfos.tsx","webpack:///./src/main/js/apps/system/components/ChangeLogLevelForm.tsx","webpack:///./src/main/js/apps/system/components/PageActions.tsx","webpack:///./src/main/js/apps/system/components/PageHeader.tsx","webpack:///./src/main/js/apps/system/components/StandaloneSysInfos.tsx","webpack:///./src/main/js/apps/system/components/system-upgrade/SystemUpgradeIntermediate.tsx","webpack:///./src/main/js/apps/system/components/system-upgrade/SystemUpgradeItem.tsx","webpack:///./src/main/js/apps/system/components/system-upgrade/SystemUpgradeForm.tsx","webpack:///./src/main/js/apps/system/components/system-upgrade/SystemUpgradeNotif.tsx","webpack:///./src/main/js/apps/system/components/App.tsx","webpack:///./src/main/js/components/controls/Modal.tsx","webpack:///./src/main/js/components/controls/SimpleModal.tsx","webpack:///./src/main/js/app/components/embed-docs-modal/Suggestions.tsx","webpack:///./src/main/js/components/controls/ConfirmModal.tsx","webpack:///./src/main/js/components/intl/DateFormatter.tsx","webpack:///./src/main/js/components/controls/ConfirmButton.tsx","webpack:///./src/main/js/components/controls/ModalButton.tsx","webpack:///./src/main/js/components/icons-components/ChevronDownIcon.tsx","webpack:///./src/main/js/components/controls/ClipboardButton.tsx","webpack:///./src/main/js/components/icons-components/OpenCloseIcon.tsx","webpack:///./src/main/js/api/system.ts","webpack:///./src/main/js/app/components/AdminContext.tsx","webpack:///./src/main/js/components/common/RestartButton.tsx","webpack:///./src/main/js/components/controls/BoxedGroupAccordion.tsx"],"names":["content","__webpack_require__","module","i","options","hmr","transform","insertInto","undefined","locals","exports","push","HealthCauseItem","_ref","className","health","healthCause","index_js_exposed","Alert","classnames","display","variant","StatusIndicator_StatusIndicator","color","size","small-status-indicator","big-status-indicator","HealthItem","biggerHealth","name","healthCauses","hasHealthCauses","length","statusIndicator","toLowerCase","map","cause","idx","key","Tooltip","overlay","Object","l10n","LOGS_LEVELS","DEFAULT_LOG_LEVEL","APP_NODES_FIELD","CE_FIELD_PREFIX","CE_LOGGING_FIELD","HA_FIELD","HEALTH_CAUSES_FIELD","HEALTH_FIELD","LOGS_LEVEL_FIELD","NAME_FIELD","NCLOC_FIELD","PLUGINS_FIELD","SEARCH_NODES_FIELD","SEARCH_PREFIX","SERVER_ID_FIELD","SETTINGS_FIELD","STATE_FIELD","STATS_FIELD","SYSTEM_FIELD","VERSION_FIELD","WEB_LOGGING_FIELD","WEB_PREFIX","ignoreInfoFields","sysInfoObject","omit_default","getHealth","getHealthCauses","getLogsLevel","isLogInfoBlock","Boolean","hasLoggingInfo","sortBy_default","logLevel","indexOf","getAppNodes","sysInfoData","utils_isCluster","getServerId","getVersion","getClusterVersion","appNodes","getSystemLogsLevel","logLevels","getNodeName","nodeInfo","getSystemData","statData","statistics","measures","assign","getClusterMainCardSection","getStandaloneMainSections","omitBy_default","value","includes","startsWith","getFileNameSuffix","suffix","now","Date","concat","getFullYear","getMonth","getDate","getHours","getMinutes","parseQuery","memoize_default","urlQuery","expandedCards","helpers_query","expand","serializeQuery","query","sortUpgrades","upgrades","upgrade","Number","version","split","groupUpgrades","groupedVersions","groupBy_default","keys","SysInfoItem","Array","JSON","stringify","BooleanItem","ObjectItem","_ref2","AlertSuccessIcon","AlertErrorIcon","_ref3","map_default","Section","items","id","style","wordBreak","HealthCard","onClick","open","_groupSections","mainSection","sections","each_default","item","groupSections","showFields","showSections","showLogLevelWarning","BoxedGroupAccordion","data","renderHeader","title","section","ClusterSysInfos","toggleCard","node","getSearchNodes","ChangeLogLevelForm_ChangeLogLevelForm","[object Object]","props","super","this","handleFormSubmit","event","preventDefault","newLevel","state","updating","setState","system","then","onChange","handleLevelChange","currentTarget","_this$state","header","Modal","contentLabel","onRequestClose","onClose","onSubmit","level","checked","type","htmlFor","infoMsg","buttons","disabled","PageActions_PageActions","handleLogsLevelOpen","openLogsLevelForm","handleLogsLevelChange","onLogLevelChange","handleLogsLevelClose","removeElementFocus","blur","nextProps","infoUrl","urls","logsUrl","canDownloadLogs","Dropdown","download","href","rel","target","DropdownIcon","serverId","canRestart","AdminContext","Consumer","fetchSystemStatus","systemStatus","RestartButton","cluster","PageHeader","isCluster","loading","showActions","ClipboardButton","copyValue","dates","label","StandAloneSysInfos","Web","pickBy_default","_","Compute Engine","Search Engine","getStandaloneSecondarySections","SystemUpgradeIntermediate_SystemUpgradeIntermediate","showMore","toggleIntermediatVersions","turned","DateFormatter","date","releaseDate","long","formattedDate","changeLogUrl","description","SystemUpgradeItem","systemUpgrades","lastUpgrade","index_es","defaultMessage","values","slice","downloadUrl","SystemUpgradeForm_SystemUpgradeForm","upgrading","SystemUpgradeNotif_SystemUpgradeNotif","mounted","openSystemUpgradeForm","fetchSystemUpgrade","handleOpenSystemUpgradeForm","handleCloseSystemUpgradeForm","__webpack_exports__","es","fetchSysInfo","toggleSysInfoCards","toggledCard","location","filter","card","updateQuery","newQuery","router","replace","pathname","Suggestions","suggestions","Helmet_default","a","renderSysInfo","d","react__WEBPACK_IMPORTED_MODULE_0__","react_modal__WEBPACK_IMPORTED_MODULE_1__","classnames__WEBPACK_IMPORTED_MODULE_2__","modal-small","modal-medium","modal-large","isOpen","overlayClassName","modal-no-backdrop","noBackdrop","SimpleModal","submitting","stopSubmitting","handleCloseClick","submit","handleSubmitClick","result","_a","children","modalProps","__rest","_Modal__WEBPACK_IMPORTED_MODULE_1__","onCloseClick","onFormSubmit","onSubmitClick","_SuggestionsContext__WEBPACK_IMPORTED_MODULE_1__","addSuggestions","removeSuggestions","SuggestionsInner","prevProps","ConfirmModal","_SimpleModal__WEBPACK_IMPORTED_MODULE_1__","_common_DeferredSpinner__WEBPACK_IMPORTED_MODULE_2__","_ui_buttons__WEBPACK_IMPORTED_MODULE_3__","_helpers_l10n__WEBPACK_IMPORTED_MODULE_4__","handleSubmit","onConfirm","confirmData","renderModalContent","_this$props","confirmButtonText","confirmDisable","headerDescription","isDestructive","_this$props$cancelBut","cancelButtonText","autoFocus","_this$props2","longFormatterOption","react_intl__WEBPACK_IMPORTED_MODULE_1__","_helpers_dates__WEBPACK_IMPORTED_MODULE_2__","formatterOption","year","month","day","ConfirmButton","renderConfirmModal","modalBody","modalHeader","modalHeaderDescription","confirmModalProps","_ConfirmModal__WEBPACK_IMPORTED_MODULE_1__","_ModalButton__WEBPACK_IMPORTED_MODULE_2__","modal","ModalButton","handleButtonClick","handleCloseModal","ChevronDownIcon","_Icon__WEBPACK_IMPORTED_MODULE_1__","_ref$fill","fill","classnames__WEBPACK_IMPORTED_MODULE_1__","clipboard__WEBPACK_IMPORTED_MODULE_2__","_Tooltip__WEBPACK_IMPORTED_MODULE_3__","_ui_buttons__WEBPACK_IMPORTED_MODULE_4__","_helpers_l10n__WEBPACK_IMPORTED_MODULE_5__","tooltipShown","showTooltip","setTimeout","copyButton","clipboard","on","destroy","visible","data-clipboard-text","innerRef","OpenCloseIcon","_ChevronDownIcon__WEBPACK_IMPORTED_MODULE_1__","_ChevronRightcon__WEBPACK_IMPORTED_MODULE_2__","setLogLevel","getSystemInfo","getSystemStatus","getSystemUpgrades","getMigrationStatus","migrateDatabase","restart","waitSystemUPStatus","_helpers_request__WEBPACK_IMPORTED_MODULE_0__","_app_utils_throwGlobalError__WEBPACK_IMPORTED_MODULE_1__","catch","max","slowThreshold","status","defaultPendingPlugins","defaultSystemStatus","installing","removing","fetchPendingPlugins","pendingPlugins","_controls_ConfirmButton__WEBPACK_IMPORTED_MODULE_2__","_helpers_l10n__WEBPACK_IMPORTED_MODULE_3__","_api_system__WEBPACK_IMPORTED_MODULE_4__","_ui_buttons__WEBPACK_IMPORTED_MODULE_5__","handleConfirm","_icons_components_OpenCloseIcon__WEBPACK_IMPORTED_MODULE_2__","hoveringInner","handleClick","onDetailEnter","onDetailLeave","no-hover","role","onMouseEnter","onMouseLeave"],"mappings":"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","file":"js/293.m.65dd2bbd.chunk.js","sourcesContent":["\nvar content = require(\"!!../../../../../node_modules/css-loader/dist/cjs.js??ref--6-1!../../../../../node_modules/postcss-loader/src/index.js??postcss!./StatusIndicator.css\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../../../node_modules/css-loader/dist/cjs.js??ref--6-1!../../../../../node_modules/postcss-loader/src/index.js??postcss!./StatusIndicator.css\", function() {\n\t\tvar newContent = require(\"!!../../../../../node_modules/css-loader/dist/cjs.js??ref--6-1!../../../../../node_modules/postcss-loader/src/index.js??postcss!./StatusIndicator.css\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","exports = module.exports = require(\"../../../../../node_modules/css-loader/dist/runtime/api.js\")(false);\n// Module\nexports.push([module.id, \".status-indicator{display:inline-block;box-sizing:border-box;width:16px;height:16px;border-radius:16px;margin:4px}.status-indicator.small-status-indicator{width:8px;height:8px;border-radius:8px;margin:8px}.status-indicator.big-status-indicator{width:24px;height:24px;border-radius:24px;margin:0}.status-indicator.red{position:relative;z-index:2;background-color:#d4333f}.status-indicator.red:after{position:absolute;z-index:3;display:block;width:6px;height:2px;top:3px;left:1px;background-color:#fff;content:\\\"\\\"}.status-indicator.yellow{background-color:#eabe06}.status-indicator.green{background-color:#0a0}.status-indicator.orange{background-color:#ed7d20}.status-indicator.gray{background-color:#b4b4b4}\", \"\"]);\n\n","\nvar content = require(\"!!../../../../../node_modules/css-loader/dist/cjs.js??ref--6-1!../../../../../node_modules/postcss-loader/src/index.js??postcss!./styles.css\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../../../node_modules/css-loader/dist/cjs.js??ref--6-1!../../../../../node_modules/postcss-loader/src/index.js??postcss!./styles.css\", function() {\n\t\tvar newContent = require(\"!!../../../../../node_modules/css-loader/dist/cjs.js??ref--6-1!../../../../../node_modules/postcss-loader/src/index.js??postcss!./styles.css\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","exports = module.exports = require(\"../../../../../node_modules/css-loader/dist/runtime/api.js\")(false);\n// Module\nexports.push([module.id, \".system-info-health-title{margin-top:24px;margin-bottom:16px}.system-info-health-info{margin-top:-12px}.system-info-copy-paste-id-info{max-width:550px;padding:8px 16px;clear:both;line-height:1.8}.system-info-health-info .status-indicator{position:relative;top:8px}.system-info-health-info.no-margin .status-indicator{margin:0}.system-info-section~.system-info-section{margin-top:16px}.system-info-section-item-name{width:25vw;overflow:hidden;text-overflow:ellipsis}.system-upgrade-version{padding:8px}.system-upgrade-version~.system-upgrade-version{margin-top:10px;padding-top:18px;border-top:1px solid #e6e6e6}.system-upgrade-intermediate{padding:6px 10px}\", \"\"]);\n\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport * as classNames from 'classnames';\nimport { Alert } from '../../../../components/ui/Alert';\n\ninterface Props {\n  className?: string;\n  health: T.HealthType;\n  healthCause: string;\n}\n\nexport default function HealthCauseItem({ className, health, healthCause }: Props) {\n  return (\n    <Alert\n      className={classNames('boxed-group-accordion-alert', className)}\n      display=\"inline\"\n      variant={health === 'RED' ? 'error' : 'warning'}>\n      {healthCause}\n    </Alert>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport * as classNames from 'classnames';\nimport './StatusIndicator.css';\n\ninterface Props {\n  className?: string;\n  color?: string;\n  size?: string;\n}\n\nexport default function StatusIndicator({ className, color, size }: Props) {\n  return (\n    <i\n      className={classNames(\n        'status-indicator',\n        color,\n        {\n          'small-status-indicator': size === 'small',\n          'big-status-indicator': size === 'big'\n        },\n        className\n      )}\n    />\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport * as classNames from 'classnames';\nimport HealthCauseItem from './HealthCauseItem';\nimport StatusIndicator from '../../../../components/common/StatusIndicator';\nimport Tooltip from '../../../../components/controls/Tooltip';\nimport { translateWithParameters } from '../../../../helpers/l10n';\n\ninterface Props {\n  biggerHealth?: boolean;\n  name?: string;\n  className?: string;\n  health: T.HealthType;\n  healthCauses?: string[];\n}\n\nexport default function HealthItem({ biggerHealth, className, name, health, healthCauses }: Props) {\n  const hasHealthCauses = healthCauses && healthCauses.length > 0 && health !== 'GREEN';\n  const statusIndicator = (\n    <StatusIndicator color={health.toLowerCase()} size={biggerHealth ? 'big' : undefined} />\n  );\n  return (\n    <div className={classNames('system-info-health-info', className)}>\n      {hasHealthCauses &&\n        healthCauses!.map((cause, idx) => (\n          <HealthCauseItem className=\"spacer-right\" health={health} healthCause={cause} key={idx} />\n        ))}\n      {name ? (\n        <Tooltip overlay={translateWithParameters('system.current_health_of_x', name)}>\n          <span>{statusIndicator}</span>\n        </Tooltip>\n      ) : (\n        statusIndicator\n      )}\n    </div>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { each, groupBy, memoize, omit, omitBy, pickBy, sortBy } from 'lodash';\nimport {\n  cleanQuery,\n  parseAsArray,\n  parseAsString,\n  RawQuery,\n  serializeStringArray\n} from '../../helpers/query';\nimport { formatMeasure } from '../../helpers/measures';\n\nexport interface Query {\n  expandedCards: string[];\n}\n\nexport const LOGS_LEVELS = ['INFO', 'DEBUG', 'TRACE'];\nconst DEFAULT_LOG_LEVEL = LOGS_LEVELS[0];\n\nexport const APP_NODES_FIELD = 'Application Nodes';\nexport const CE_FIELD_PREFIX = 'Compute Engine';\nexport const CE_LOGGING_FIELD = 'Compute Engine Logging';\nexport const HA_FIELD = 'High Availability';\nexport const HEALTH_CAUSES_FIELD = 'Health Causes';\nexport const HEALTH_FIELD = 'Health';\nexport const LOGS_LEVEL_FIELD = 'Logs Level';\nexport const NAME_FIELD = 'Name';\nexport const NCLOC_FIELD = 'ncloc';\nexport const PLUGINS_FIELD = 'Plugins';\nexport const SEARCH_NODES_FIELD = 'Search Nodes';\nexport const SEARCH_PREFIX = 'Search';\nexport const SERVER_ID_FIELD = 'Server ID';\nexport const SETTINGS_FIELD = 'Settings';\nexport const STATE_FIELD = 'State';\nexport const STATS_FIELD = 'Statistics';\nexport const SYSTEM_FIELD = 'System';\nexport const VERSION_FIELD = 'Version';\nexport const WEB_LOGGING_FIELD = 'Web Logging';\nexport const WEB_PREFIX = 'Web';\n\nexport function ignoreInfoFields(sysInfoObject: T.SysInfoValueObject) {\n  return omit(sysInfoObject, [\n    HEALTH_FIELD,\n    HEALTH_CAUSES_FIELD,\n    NAME_FIELD,\n    PLUGINS_FIELD,\n    SETTINGS_FIELD,\n    SERVER_ID_FIELD,\n    VERSION_FIELD\n  ]);\n}\n\nexport function getHealth(sysInfoObject: T.SysInfoBase) {\n  return sysInfoObject[HEALTH_FIELD];\n}\n\nexport function getHealthCauses(sysInfoObject: T.SysInfoBase) {\n  return sysInfoObject[HEALTH_CAUSES_FIELD];\n}\n\nexport function getLogsLevel(sysInfoObject?: T.SysInfoValueObject): string {\n  if (sysInfoObject !== undefined) {\n    if (isLogInfoBlock(sysInfoObject)) {\n      return sysInfoObject[LOGS_LEVEL_FIELD];\n    } else if (hasLoggingInfo(sysInfoObject)) {\n      return sortBy(\n        [\n          getLogsLevel(sysInfoObject[WEB_LOGGING_FIELD]),\n          getLogsLevel(sysInfoObject[CE_LOGGING_FIELD])\n        ],\n        logLevel => LOGS_LEVELS.indexOf(logLevel)\n      )[1];\n    }\n  }\n  return DEFAULT_LOG_LEVEL;\n}\n\nexport function getAppNodes(sysInfoData: T.SysInfoCluster): T.SysInfoAppNode[] {\n  return sysInfoData[APP_NODES_FIELD];\n}\n\nexport function getSearchNodes(sysInfoData: T.SysInfoCluster): T.SysInfoSearchNode[] {\n  return sysInfoData[SEARCH_NODES_FIELD];\n}\n\nexport function isCluster(\n  sysInfoData: T.SysInfoCluster | T.SysInfoStandalone\n): sysInfoData is T.SysInfoCluster {\n  return sysInfoData[SYSTEM_FIELD] && sysInfoData[SYSTEM_FIELD][HA_FIELD] === true;\n}\n\nexport function isLogInfoBlock(\n  sysInfoObject: T.SysInfoValueObject\n): sysInfoObject is T.SysInfoLogging {\n  return sysInfoObject[LOGS_LEVEL_FIELD] !== undefined;\n}\n\nexport function hasLoggingInfo(\n  sysInfoObject: T.SysInfoValueObject\n): sysInfoObject is T.SysInfoStandalone | T.SysInfoAppNode {\n  return Boolean(sysInfoObject[WEB_LOGGING_FIELD] || sysInfoObject[CE_LOGGING_FIELD]);\n}\n\nexport function getServerId(sysInfoData: T.SysInfoCluster | T.SysInfoStandalone): string {\n  return sysInfoData && sysInfoData[SYSTEM_FIELD][SERVER_ID_FIELD];\n}\n\nexport function getVersion(sysInfoData: T.SysInfoStandalone): string | undefined {\n  return sysInfoData && sysInfoData[SYSTEM_FIELD][VERSION_FIELD];\n}\n\nexport function getClusterVersion(sysInfoData: T.SysInfoCluster): string | undefined {\n  const appNodes = getAppNodes(sysInfoData);\n  return appNodes.length > 0 ? appNodes[0][SYSTEM_FIELD][VERSION_FIELD] : undefined;\n}\n\nexport function getSystemLogsLevel(sysInfoData: T.SysInfoCluster | T.SysInfoStandalone): string {\n  if (isCluster(sysInfoData)) {\n    const logLevels = sortBy(getAppNodes(sysInfoData).map(getLogsLevel), logLevel =>\n      LOGS_LEVELS.indexOf(logLevel)\n    );\n    return logLevels.length > 0 ? logLevels[logLevels.length - 1] : DEFAULT_LOG_LEVEL;\n  } else {\n    return getLogsLevel(sysInfoData);\n  }\n}\n\nexport function getNodeName(nodeInfo: T.SysInfoAppNode | T.SysInfoSearchNode): string {\n  return nodeInfo[NAME_FIELD];\n}\n\nfunction getSystemData(sysInfoData: T.SysInfoBase): T.SysInfoValueObject {\n  const statData: T.SysInfoValueObject = {};\n  const statistics = sysInfoData[STATS_FIELD] as T.SysInfoValueObject; // TODO\n  if (statistics) {\n    statData['Lines of Code'] = formatMeasure(statistics[NCLOC_FIELD] as number, 'INT');\n  }\n  return { ...sysInfoData[SYSTEM_FIELD], ...statData };\n}\n\nexport function getClusterMainCardSection(sysInfoData: T.SysInfoCluster): T.SysInfoValueObject {\n  return {\n    ...getSystemData(sysInfoData),\n    ...omit(sysInfoData, [\n      APP_NODES_FIELD,\n      PLUGINS_FIELD,\n      SEARCH_NODES_FIELD,\n      SETTINGS_FIELD,\n      STATS_FIELD,\n      SYSTEM_FIELD\n    ])\n  };\n}\n\nexport function getStandaloneMainSections(sysInfoData: T.SysInfoBase): T.SysInfoValueObject {\n  return {\n    ...getSystemData(sysInfoData),\n    ...(omitBy(\n      sysInfoData,\n      (value, key) =>\n        value == null ||\n        [PLUGINS_FIELD, SETTINGS_FIELD, STATS_FIELD, SYSTEM_FIELD].includes(key) ||\n        key.startsWith(CE_FIELD_PREFIX) ||\n        key.startsWith(SEARCH_PREFIX) ||\n        key.startsWith(WEB_PREFIX)\n    ) as T.SysInfoValueObject)\n  };\n}\n\nexport function getStandaloneSecondarySections(sysInfoData: T.SysInfoBase): T.SysInfoSection {\n  return {\n    Web: pickBy(sysInfoData, (_, key) => key.startsWith(WEB_PREFIX)) as T.SysInfoValueObject,\n    'Compute Engine': pickBy(sysInfoData, (_, key) =>\n      key.startsWith(CE_FIELD_PREFIX)\n    ) as T.SysInfoValueObject,\n    'Search Engine': pickBy(sysInfoData, (_, key) =>\n      key.startsWith(SEARCH_PREFIX)\n    ) as T.SysInfoValueObject\n  };\n}\n\nexport function getFileNameSuffix(suffix?: string) {\n  const now = new Date();\n  return (\n    `${suffix ? suffix + '-' : ''}` +\n    `${now.getFullYear()}-${now.getMonth() + 1}-` +\n    `${now.getDate()}-${now.getHours()}-${now.getMinutes()}`\n  );\n}\n\nexport function groupSections(sysInfoData: T.SysInfoValueObject) {\n  const mainSection: T.SysInfoValueObject = {};\n  const sections: T.SysInfoSection = {};\n  each(sysInfoData, (item, key) => {\n    if (typeof item !== 'object' || item instanceof Array) {\n      mainSection[key] = item;\n    } else {\n      sections[key] = item;\n    }\n  });\n  return { mainSection, sections };\n}\n\nexport const parseQuery = memoize(\n  (urlQuery: RawQuery): Query => ({\n    expandedCards: parseAsArray(urlQuery.expand, parseAsString)\n  })\n);\n\nexport const serializeQuery = memoize(\n  (query: Query): RawQuery =>\n    cleanQuery({\n      expand: serializeStringArray(query.expandedCards)\n    })\n);\n\nexport function sortUpgrades(upgrades: T.SystemUpgrade[]): T.SystemUpgrade[] {\n  return sortBy(upgrades, [\n    (upgrade: T.SystemUpgrade) => -Number(upgrade.version.split('.')[0]),\n    (upgrade: T.SystemUpgrade) => -Number(upgrade.version.split('.')[1] || 0),\n    (upgrade: T.SystemUpgrade) => -Number(upgrade.version.split('.')[2] || 0)\n  ]);\n}\n\nexport function groupUpgrades(upgrades: T.SystemUpgrade[]): T.SystemUpgrade[][] {\n  const groupedVersions = groupBy(upgrades, upgrade => upgrade.version.split('.')[0]);\n  const sortedMajor = sortBy(Object.keys(groupedVersions), key => -Number(key));\n  return sortedMajor.map(key => groupedVersions[key]);\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { map } from 'lodash';\nimport HealthItem from './HealthItem';\nimport AlertErrorIcon from '../../../../components/icons-components/AlertErrorIcon';\nimport AlertSuccessIcon from '../../../../components/icons-components/AlertSuccessIcon';\nimport { HEALTH_FIELD, STATE_FIELD } from '../../utils';\n\nexport interface Props {\n  name: string;\n  value: T.SysInfoValue;\n}\n\nexport default function SysInfoItem({ name, value }: Props): JSX.Element {\n  if (name === HEALTH_FIELD || name === STATE_FIELD) {\n    return <HealthItem className=\"no-margin\" health={value as T.HealthType} />;\n  }\n  if (value instanceof Array) {\n    return <code>{JSON.stringify(value)}</code>;\n  }\n  switch (typeof value) {\n    case 'boolean':\n      return <BooleanItem value={value} />;\n    case 'object':\n      return <ObjectItem value={value} />;\n    default:\n      return <code>{value}</code>;\n  }\n}\n\nfunction BooleanItem({ value }: { value: boolean }) {\n  if (value) {\n    return <AlertSuccessIcon />;\n  } else {\n    return <AlertErrorIcon />;\n  }\n}\n\nfunction ObjectItem({ value }: { value: T.SysInfoValueObject }) {\n  return (\n    <table className=\"data\">\n      <tbody>\n        {map(value, (value, name) => (\n          <tr key={name}>\n            <td className=\"thin nowrap\">{name}</td>\n            <td>\n              <SysInfoItem name={name} value={value} />\n            </td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { map } from 'lodash';\nimport SysInfoItem from './SysInfoItem';\n\ninterface Props {\n  name?: string;\n  items: T.SysInfoValueObject;\n}\n\nexport default function Section({ name, items }: Props) {\n  return (\n    <div className=\"system-info-section\">\n      {name && <h4 className=\"spacer-bottom\">{name}</h4>}\n      <table className=\"data zebra\" id={name}>\n        <tbody>\n          {map(items, (value, name) => {\n            return (\n              <tr key={name}>\n                <td className=\"thin\">\n                  <div className=\"system-info-section-item-name\">{name}</div>\n                </td>\n                <td style={{ wordBreak: 'break-all' }}>\n                  <SysInfoItem name={name} value={value} />\n                </td>\n              </tr>\n            );\n          })}\n        </tbody>\n      </table>\n    </div>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { map } from 'lodash';\nimport HealthItem from './HealthItem';\nimport Section from './Section';\nimport { Alert } from '../../../../components/ui/Alert';\nimport BoxedGroupAccordion from '../../../../components/controls/BoxedGroupAccordion';\nimport { LOGS_LEVELS, groupSections, getLogsLevel } from '../../utils';\nimport { translate } from '../../../../helpers/l10n';\n\ninterface Props {\n  biggerHealth?: boolean;\n  health?: T.HealthType;\n  healthCauses?: string[];\n  onClick: (toggledCard: string) => void;\n  open: boolean;\n  name: string;\n  sysInfoData: T.SysInfoValueObject;\n}\n\nexport default function HealthCard({\n  biggerHealth,\n  health,\n  healthCauses,\n  onClick,\n  open,\n  name,\n  sysInfoData\n}: Props) {\n  const { mainSection, sections } = groupSections(sysInfoData);\n  const showFields = open && mainSection && Object.keys(mainSection).length > 0;\n  const showSections = open && sections;\n  const logLevel = getLogsLevel(sysInfoData);\n  const showLogLevelWarning = logLevel && logLevel !== LOGS_LEVELS[0];\n  return (\n    <BoxedGroupAccordion\n      data={name}\n      onClick={onClick}\n      open={open}\n      renderHeader={() => (\n        <>\n          {showLogLevelWarning && (\n            <Alert\n              className=\"boxed-group-accordion-alert spacer-left\"\n              display=\"inline\"\n              variant=\"warning\">\n              {translate('system.log_level.warning.short')}\n            </Alert>\n          )}\n          {health && (\n            <HealthItem\n              biggerHealth={biggerHealth}\n              className=\"pull-right\"\n              health={health}\n              healthCauses={healthCauses}\n              name={name}\n            />\n          )}\n        </>\n      )}\n      title={name}>\n      {showFields && <Section items={mainSection} />}\n      {showSections &&\n        map(sections, (section, name) => <Section items={section} key={name} name={name} />)}\n    </BoxedGroupAccordion>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { sortBy } from 'lodash';\nimport HealthCard from './info-items/HealthCard';\nimport { translate } from '../../../helpers/l10n';\nimport {\n  getAppNodes,\n  getHealth,\n  getHealthCauses,\n  getClusterMainCardSection,\n  getNodeName,\n  getSearchNodes,\n  ignoreInfoFields\n} from '../utils';\n\ninterface Props {\n  expandedCards: string[];\n  sysInfoData: T.SysInfoCluster;\n  toggleCard: (toggledCard: string) => void;\n}\n\nexport default function ClusterSysInfos({ expandedCards, sysInfoData, toggleCard }: Props) {\n  const mainCardName = 'System';\n  return (\n    <>\n      <HealthCard\n        biggerHealth={true}\n        health={getHealth(sysInfoData)}\n        healthCauses={getHealthCauses(sysInfoData)}\n        name={mainCardName}\n        onClick={toggleCard}\n        open={expandedCards.includes(mainCardName)}\n        sysInfoData={ignoreInfoFields(getClusterMainCardSection(sysInfoData))}\n      />\n      <li className=\"note system-info-health-title\">\n        {translate('system.application_nodes_title')}\n      </li>\n      {sortBy(getAppNodes(sysInfoData), getNodeName).map((node: T.SysInfoAppNode) => (\n        <HealthCard\n          health={getHealth(node)}\n          healthCauses={getHealthCauses(node)}\n          key={getNodeName(node)}\n          name={getNodeName(node)}\n          onClick={toggleCard}\n          open={expandedCards.includes(getNodeName(node))}\n          sysInfoData={ignoreInfoFields(node)}\n        />\n      ))}\n      <li className=\"note system-info-health-title\">{translate('system.search_nodes_title')}</li>\n      {sortBy(getSearchNodes(sysInfoData), getNodeName).map((node: T.SysInfoSearchNode) => (\n        <HealthCard\n          key={getNodeName(node)}\n          name={getNodeName(node)}\n          onClick={toggleCard}\n          open={expandedCards.includes(getNodeName(node))}\n          sysInfoData={ignoreInfoFields(node)}\n        />\n      ))}\n    </>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { LOGS_LEVELS } from '../utils';\nimport { setLogLevel } from '../../../api/system';\nimport Modal from '../../../components/controls/Modal';\nimport { SubmitButton, ResetButtonLink } from '../../../components/ui/buttons';\nimport { translate } from '../../../helpers/l10n';\nimport { Alert } from '../../../components/ui/Alert';\n\ninterface Props {\n  infoMsg: string;\n  logLevel: string;\n  onChange: (level: string) => void;\n  onClose: () => void;\n}\n\ninterface State {\n  newLevel: string;\n  updating: boolean;\n}\n\nexport default class ChangeLogLevelForm extends React.PureComponent<Props, State> {\n  constructor(props: Props) {\n    super(props);\n    this.state = { newLevel: props.logLevel, updating: false };\n  }\n\n  handleFormSubmit = (event: React.SyntheticEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    const { newLevel } = this.state;\n    if (!this.state.updating) {\n      this.setState({ updating: true });\n      setLogLevel(newLevel).then(\n        () => this.props.onChange(newLevel),\n        () => this.setState({ updating: false })\n      );\n    }\n  };\n\n  handleLevelChange = (event: React.ChangeEvent<HTMLInputElement>) =>\n    this.setState({ newLevel: event.currentTarget.value });\n\n  render() {\n    const { updating, newLevel } = this.state;\n    const header = translate('system.set_log_level');\n    return (\n      <Modal contentLabel={header} onRequestClose={this.props.onClose}>\n        <form id=\"set-log-level-form\" onSubmit={this.handleFormSubmit}>\n          <div className=\"modal-head\">\n            <h2>{header}</h2>\n          </div>\n          <div className=\"modal-body\">\n            {LOGS_LEVELS.map(level => (\n              <p className=\"spacer-bottom\" key={level}>\n                <input\n                  checked={level === newLevel}\n                  className=\"spacer-right text-middle\"\n                  id={`loglevel-${level}`}\n                  name=\"system.log_levels\"\n                  onChange={this.handleLevelChange}\n                  type=\"radio\"\n                  value={level}\n                />\n                <label className=\"text-middle\" htmlFor={`loglevel-${level}`}>\n                  {level}\n                </label>\n              </p>\n            ))}\n            <Alert className=\"spacer-top\" variant=\"info\">\n              {this.props.infoMsg}\n            </Alert>\n            {newLevel !== 'INFO' && (\n              <Alert className=\"spacer-top\" variant=\"warning\">\n                {translate('system.log_level.warning')}\n              </Alert>\n            )}\n          </div>\n          <div className=\"modal-foot\">\n            {updating && <i className=\"spinner spacer-right\" />}\n            <SubmitButton disabled={updating} id=\"set-log-level-submit\">\n              {translate('save')}\n            </SubmitButton>\n            <ResetButtonLink id=\"set-log-level-cancel\" onClick={this.props.onClose}>\n              {translate('cancel')}\n            </ResetButtonLink>\n          </div>\n        </form>\n      </Modal>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport ChangeLogLevelForm from './ChangeLogLevelForm';\nimport AdminContext from '../../../app/components/AdminContext';\nimport Dropdown from '../../../components/controls/Dropdown';\nimport DropdownIcon from '../../../components/icons-components/DropdownIcon';\nimport RestartButton from '../../../components/common/RestartButton';\nimport { EditButton, Button } from '../../../components/ui/buttons';\nimport { getFileNameSuffix } from '../utils';\nimport { getBaseUrl } from '../../../helpers/urls';\nimport { translate } from '../../../helpers/l10n';\n\ninterface Props {\n  canDownloadLogs: boolean;\n  canRestart: boolean;\n  cluster: boolean;\n  logLevel: string;\n  onLogLevelChange: () => void;\n  serverId?: string;\n}\n\ninterface State {\n  logLevel: string;\n  openLogsLevelForm: boolean;\n}\n\nexport default class PageActions extends React.PureComponent<Props, State> {\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      logLevel: props.logLevel,\n      openLogsLevelForm: false\n    };\n  }\n\n  componentWillReceiveProps(nextProps: Props) {\n    if (nextProps.logLevel !== this.state.logLevel) {\n      this.setState({ logLevel: nextProps.logLevel });\n    }\n  }\n\n  handleLogsLevelOpen = () => {\n    this.setState({ openLogsLevelForm: true });\n  };\n\n  handleLogsLevelChange = (logLevel: string) => {\n    this.setState({ logLevel });\n    this.props.onLogLevelChange();\n    this.handleLogsLevelClose();\n  };\n\n  handleLogsLevelClose = () => {\n    this.setState({ openLogsLevelForm: false });\n  };\n\n  removeElementFocus = (event: React.SyntheticEvent<HTMLElement>) => {\n    event.currentTarget.blur();\n  };\n\n  render() {\n    const infoUrl = getBaseUrl() + '/api/system/info';\n    const logsUrl = getBaseUrl() + '/api/system/logs';\n    return (\n      <div className=\"page-actions\">\n        <span>\n          <span className=\"text-middle\">\n            {translate('system.logs_level')}\n            {':'}\n            <strong className=\"little-spacer-left\">{this.state.logLevel}</strong>\n          </span>\n          <EditButton\n            className=\"spacer-left button-small\"\n            id=\"edit-logs-level-button\"\n            onClick={this.handleLogsLevelOpen}\n          />\n        </span>\n        {this.props.canDownloadLogs && (\n          <Dropdown\n            className=\"display-inline-block spacer-left\"\n            overlay={\n              <ul className=\"menu\">\n                <li>\n                  <a\n                    download=\"sonarqube_app.log\"\n                    href={logsUrl + '?process=app'}\n                    id=\"logs-link\"\n                    rel=\"noopener noreferrer\"\n                    target=\"_blank\">\n                    Main Process\n                  </a>\n                </li>\n                <li>\n                  <a\n                    download=\"sonarqube_ce.log\"\n                    href={logsUrl + '?process=ce'}\n                    id=\"ce-logs-link\"\n                    rel=\"noopener noreferrer\"\n                    target=\"_blank\">\n                    Compute Engine\n                  </a>\n                </li>\n                <li>\n                  <a\n                    download=\"sonarqube_es.log\"\n                    href={logsUrl + '?process=es'}\n                    id=\"es-logs-link\"\n                    rel=\"noopener noreferrer\"\n                    target=\"_blank\">\n                    Search Engine\n                  </a>\n                </li>\n                <li>\n                  <a\n                    download=\"sonarqube_web.log\"\n                    href={logsUrl + '?process=web'}\n                    id=\"web-logs-link\"\n                    rel=\"noopener noreferrer\"\n                    target=\"_blank\">\n                    Web Server\n                  </a>\n                </li>\n              </ul>\n            }>\n            <Button>\n              {translate('system.download_logs')}\n              <DropdownIcon className=\"little-spacer-left\" />\n            </Button>\n          </Dropdown>\n        )}\n        <a\n          className=\"button spacer-left\"\n          download={`sonarqube-support-info-${getFileNameSuffix(this.props.serverId)}.json`}\n          href={infoUrl}\n          id=\"download-link\"\n          onClick={this.removeElementFocus}\n          rel=\"noopener noreferrer\"\n          target=\"_blank\">\n          {translate('system.download_system_info')}\n        </a>\n        {this.props.canRestart && (\n          <AdminContext.Consumer>\n            {({ fetchSystemStatus, systemStatus }) => (\n              <RestartButton\n                className=\"spacer-left\"\n                fetchSystemStatus={fetchSystemStatus}\n                systemStatus={systemStatus}\n              />\n            )}\n          </AdminContext.Consumer>\n        )}\n        {this.state.openLogsLevelForm && (\n          <ChangeLogLevelForm\n            infoMsg={translate(\n              this.props.cluster ? 'system.cluster_log_level.info' : 'system.log_level.info'\n            )}\n            logLevel={this.state.logLevel}\n            onChange={this.handleLogsLevelChange}\n            onClose={this.handleLogsLevelClose}\n          />\n        )}\n      </div>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport PageActions from './PageActions';\nimport ClipboardButton from '../../../components/controls/ClipboardButton';\nimport { translate } from '../../../helpers/l10n';\nimport { toShortNotSoISOString } from '../../../helpers/dates';\n\nexport interface Props {\n  isCluster: boolean;\n  loading: boolean;\n  logLevel: string;\n  onLogLevelChange: () => void;\n  serverId?: string;\n  showActions: boolean;\n  version?: string;\n}\n\nexport default function PageHeader(props: Props) {\n  const { isCluster, loading, logLevel, serverId, showActions, version } = props;\n  return (\n    <header className=\"page-header\">\n      <h1 className=\"page-title\">{translate('system_info.page')}</h1>\n      {showActions && (\n        <PageActions\n          canDownloadLogs={!isCluster}\n          canRestart={!isCluster}\n          cluster={isCluster}\n          logLevel={logLevel}\n          onLogLevelChange={props.onLogLevelChange}\n          serverId={serverId}\n        />\n      )}\n      {loading && (\n        <div className=\"page-actions\">\n          <i className=\"spinner\" />\n        </div>\n      )}\n      {serverId && version && (\n        <div className=\"system-info-copy-paste-id-info boxed-group display-flex-center\">\n          <div className=\"flex-1\">\n            <table className=\"width-100\">\n              <tbody>\n                <tr>\n                  <th>\n                    <strong>{translate('system.server_id')}</strong>\n                  </th>\n                  <td>{serverId}</td>\n                </tr>\n                <tr>\n                  <th>\n                    <strong>{translate('system.version')}</strong>\n                  </th>\n                  <td>{version}</td>\n                </tr>\n              </tbody>\n            </table>\n          </div>\n          <ClipboardButton\n            className=\"flex-0\"\n            copyValue={`SonarQube ID information\nServer ID: ${serverId}\nVersion: ${version}\nDate: ${toShortNotSoISOString(Date.now())}\n`}\n            label={translate('system.copy_id_info')}\n          />\n        </div>\n      )}\n    </header>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { map } from 'lodash';\nimport HealthCard from './info-items/HealthCard';\nimport {\n  getHealth,\n  getHealthCauses,\n  getStandaloneMainSections,\n  getStandaloneSecondarySections,\n  ignoreInfoFields\n} from '../utils';\n\ninterface Props {\n  expandedCards: string[];\n  sysInfoData: T.SysInfoStandalone;\n  toggleCard: (toggledCard: string) => void;\n}\n\nexport default function StandAloneSysInfos({ expandedCards, sysInfoData, toggleCard }: Props) {\n  const mainCardName = 'System';\n  return (\n    <>\n      <HealthCard\n        biggerHealth={true}\n        health={getHealth(sysInfoData)}\n        healthCauses={getHealthCauses(sysInfoData)}\n        name={mainCardName}\n        onClick={toggleCard}\n        open={expandedCards.includes(mainCardName)}\n        sysInfoData={ignoreInfoFields(getStandaloneMainSections(sysInfoData))}\n      />\n      {map(getStandaloneSecondarySections(sysInfoData), (section, name) => (\n        <HealthCard\n          key={name}\n          name={name}\n          onClick={toggleCard}\n          open={expandedCards.includes(name)}\n          sysInfoData={ignoreInfoFields(section)}\n        />\n      ))}\n    </>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport DateFormatter from '../../../../components/intl/DateFormatter';\nimport DropdownIcon from '../../../../components/icons-components/DropdownIcon';\nimport { ButtonLink } from '../../../../components/ui/buttons';\nimport { translate } from '../../../../helpers/l10n';\n\ninterface Props {\n  className?: string;\n  upgrades: T.SystemUpgrade[];\n}\n\ninterface State {\n  showMore: boolean;\n}\n\nexport default class SystemUpgradeIntermediate extends React.PureComponent<Props, State> {\n  state: State = { showMore: false };\n\n  toggleIntermediatVersions = () => {\n    this.setState(state => ({ showMore: !state.showMore }));\n  };\n\n  render() {\n    const { showMore } = this.state;\n    const { upgrades } = this.props;\n    if (upgrades.length <= 0) {\n      return null;\n    }\n\n    return (\n      <div className={this.props.className}>\n        <ButtonLink className=\"little-spacer-bottom\" onClick={this.toggleIntermediatVersions}>\n          {showMore\n            ? translate('system.hide_intermediate_versions')\n            : translate('system.show_intermediate_versions')}\n          <DropdownIcon className=\"little-spacer-left\" turned={showMore} />\n        </ButtonLink>\n        {showMore &&\n          upgrades.map(upgrade => (\n            <div className=\"note system-upgrade-intermediate\" key={upgrade.version}>\n              <DateFormatter date={upgrade.releaseDate} long={true}>\n                {formattedDate => (\n                  <p>\n                    <b className=\"little-spacer-right\">SonarQube {upgrade.version}</b>\n                    {formattedDate}\n                    {upgrade.changeLogUrl && (\n                      <a\n                        className=\"spacer-left\"\n                        href={upgrade.changeLogUrl}\n                        rel=\"noopener noreferrer\"\n                        target=\"_blank\">\n                        {translate('system.release_notes')}\n                      </a>\n                    )}\n                  </p>\n                )}\n              </DateFormatter>\n              <p className=\"little-spacer-top\">{upgrade.description}</p>\n            </div>\n          ))}\n      </div>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport SystemUpgradeIntermediate from './SystemUpgradeIntermediate';\nimport DateFormatter from '../../../../components/intl/DateFormatter';\nimport { translate, translateWithParameters } from '../../../../helpers/l10n';\n\ninterface Props {\n  type?: string;\n  systemUpgrades: T.SystemUpgrade[];\n}\n\nexport default function SystemUpgradeItem({ type, systemUpgrades }: Props) {\n  const lastUpgrade = systemUpgrades[0];\n  return (\n    <div className=\"system-upgrade-version\">\n      {type && (\n        <h1 className=\"spacer-bottom\">\n          <strong>{type}</strong>\n        </h1>\n      )}\n      <p>\n        <FormattedMessage\n          defaultMessage={translate('system.version_is_availble')}\n          id=\"system.version_is_availble\"\n          values={{ version: <b>SonarQube {lastUpgrade.version}</b> }}\n        />\n      </p>\n      <p className=\"spacer-top\">{lastUpgrade.description}</p>\n      <div className=\"big-spacer-top\">\n        <DateFormatter date={lastUpgrade.releaseDate} long={true}>\n          {formattedDate => (\n            <span>{translateWithParameters('system.released_x', formattedDate)}</span>\n          )}\n        </DateFormatter>\n        {lastUpgrade.changeLogUrl && (\n          <a\n            className=\"spacer-left\"\n            href={lastUpgrade.changeLogUrl}\n            rel=\"noopener noreferrer\"\n            target=\"_blank\">\n            {translate('system.release_notes')}\n          </a>\n        )}\n      </div>\n      <SystemUpgradeIntermediate className=\"spacer-top\" upgrades={systemUpgrades.slice(1)} />\n      <div className=\"big-spacer-top\">\n        <a\n          className=\"button\"\n          download={`sonarqube-${lastUpgrade.version}.zip`}\n          href={lastUpgrade.downloadUrl}\n          target=\"blank\">\n          {translateWithParameters('system.download_x', lastUpgrade.version)}\n        </a>\n        <a\n          className=\"spacer-left\"\n          href=\"https://redirect.sonarsource.com/doc/upgrading.html\"\n          target=\"_blank\">\n          {translate('system.how_to_upgrade')}\n        </a>\n      </div>\n    </div>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport SystemUpgradeItem from './SystemUpgradeItem';\nimport Modal from '../../../../components/controls/Modal';\nimport { translate } from '../../../../helpers/l10n';\nimport { ResetButtonLink } from '../../../../components/ui/buttons';\n\ninterface Props {\n  systemUpgrades: T.SystemUpgrade[][];\n  onClose: () => void;\n}\n\ninterface State {\n  upgrading: boolean;\n}\n\nexport default class SystemUpgradeForm extends React.PureComponent<Props, State> {\n  state: State = { upgrading: false };\n\n  render() {\n    const { upgrading } = this.state;\n    const { systemUpgrades } = this.props;\n    const header = translate('system.system_upgrade');\n    return (\n      <Modal contentLabel={header} onRequestClose={this.props.onClose}>\n        <div className=\"modal-head\">\n          <h2>{header}</h2>\n        </div>\n        <div className=\"modal-body\">\n          {systemUpgrades.map((upgrades, idx) => (\n            <SystemUpgradeItem\n              key={upgrades[upgrades.length - 1].version}\n              systemUpgrades={upgrades}\n              type={\n                idx === 0 ? translate('system.latest_version') : translate('system.lts_version')\n              }\n            />\n          ))}\n        </div>\n        <div className=\"modal-foot\">\n          {upgrading && <i className=\"spinner spacer-right\" />}\n          <a\n            className=\"pull-left\"\n            href=\"https://www.sonarqube.org/downloads/\"\n            rel=\"noopener noreferrer\"\n            target=\"_blank\">\n            {translate('system.see_sonarqube_downloads')}\n          </a>\n          <ResetButtonLink onClick={this.props.onClose}>{translate('cancel')}</ResetButtonLink>\n        </div>\n      </Modal>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport SystemUpgradeForm from './SystemUpgradeForm';\nimport { sortUpgrades, groupUpgrades } from '../../utils';\nimport { getSystemUpgrades } from '../../../../api/system';\nimport { Button } from '../../../../components/ui/buttons';\nimport { translate } from '../../../../helpers/l10n';\nimport { Alert } from '../../../../components/ui/Alert';\n\ninterface State {\n  systemUpgrades: T.SystemUpgrade[][];\n  openSystemUpgradeForm: boolean;\n}\n\nexport default class SystemUpgradeNotif extends React.PureComponent<{}, State> {\n  mounted = false;\n  state: State = { openSystemUpgradeForm: false, systemUpgrades: [] };\n\n  componentDidMount() {\n    this.mounted = true;\n    this.fetchSystemUpgrade();\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  fetchSystemUpgrade = () =>\n    getSystemUpgrades().then(\n      ({ upgrades }) => {\n        if (this.mounted) {\n          this.setState({ systemUpgrades: groupUpgrades(sortUpgrades(upgrades)) });\n        }\n      },\n      () => {}\n    );\n\n  handleOpenSystemUpgradeForm = () => {\n    this.setState({ openSystemUpgradeForm: true });\n  };\n\n  handleCloseSystemUpgradeForm = () => {\n    this.setState({ openSystemUpgradeForm: false });\n  };\n\n  render() {\n    const { systemUpgrades } = this.state;\n\n    if (systemUpgrades.length <= 0) {\n      return null;\n    }\n\n    return (\n      <div className=\"page-notifs\">\n        <Alert variant=\"info\">\n          {translate('system.new_version_available')}\n          <Button className=\"spacer-left\" onClick={this.handleOpenSystemUpgradeForm}>\n            {translate('learn_more')}\n          </Button>\n        </Alert>\n        {this.state.openSystemUpgradeForm && (\n          <SystemUpgradeForm\n            onClose={this.handleCloseSystemUpgradeForm}\n            systemUpgrades={systemUpgrades}\n          />\n        )}\n      </div>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { withRouter, WithRouterProps } from 'react-router';\nimport Helmet from 'react-helmet';\nimport ClusterSysInfos from './ClusterSysInfos';\nimport PageHeader from './PageHeader';\nimport StandaloneSysInfos from './StandaloneSysInfos';\nimport SystemUpgradeNotif from './system-upgrade/SystemUpgradeNotif';\nimport Suggestions from '../../../app/components/embed-docs-modal/Suggestions';\nimport { translate } from '../../../helpers/l10n';\nimport { getSystemInfo } from '../../../api/system';\nimport {\n  getServerId,\n  getSystemLogsLevel,\n  isCluster,\n  parseQuery,\n  Query,\n  serializeQuery,\n  getVersion,\n  getClusterVersion\n} from '../utils';\nimport '../styles.css';\n\ntype Props = WithRouterProps;\n\ninterface State {\n  loading: boolean;\n  sysInfoData?: T.SysInfoCluster | T.SysInfoStandalone;\n}\n\nclass App extends React.PureComponent<Props, State> {\n  mounted = false;\n  state: State = { loading: true };\n\n  componentDidMount() {\n    this.mounted = true;\n    this.fetchSysInfo();\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  fetchSysInfo = () => {\n    this.setState({ loading: true });\n    getSystemInfo().then(\n      sysInfoData => {\n        if (this.mounted) {\n          this.setState({ loading: false, sysInfoData });\n        }\n      },\n      () => {\n        if (this.mounted) {\n          this.setState({ loading: false });\n        }\n      }\n    );\n  };\n\n  toggleSysInfoCards = (toggledCard: string) => {\n    const query = parseQuery(this.props.location.query);\n    let expandedCards;\n    if (query.expandedCards.includes(toggledCard)) {\n      expandedCards = query.expandedCards.filter(card => card !== toggledCard);\n    } else {\n      expandedCards = query.expandedCards.concat(toggledCard);\n    }\n    this.updateQuery({ expandedCards });\n  };\n\n  updateQuery = (newQuery: Query) => {\n    const query = serializeQuery({ ...parseQuery(this.props.location.query), ...newQuery });\n    this.props.router.replace({ pathname: this.props.location.pathname, query });\n  };\n\n  renderSysInfo() {\n    const { sysInfoData } = this.state;\n    if (!sysInfoData) {\n      return null;\n    }\n\n    const query = parseQuery(this.props.location.query);\n    if (isCluster(sysInfoData)) {\n      return (\n        <ClusterSysInfos\n          expandedCards={query.expandedCards}\n          sysInfoData={sysInfoData}\n          toggleCard={this.toggleSysInfoCards}\n        />\n      );\n    }\n    return (\n      <StandaloneSysInfos\n        expandedCards={query.expandedCards}\n        sysInfoData={sysInfoData}\n        toggleCard={this.toggleSysInfoCards}\n      />\n    );\n  }\n\n  render() {\n    const { loading, sysInfoData } = this.state;\n    return (\n      <div className=\"page page-limited\">\n        <Suggestions suggestions=\"system_info\" />\n        <Helmet title={translate('system_info.page')} />\n        <SystemUpgradeNotif />\n        {sysInfoData && (\n          <PageHeader\n            isCluster={isCluster(sysInfoData)}\n            loading={loading}\n            logLevel={getSystemLogsLevel(sysInfoData)}\n            onLogLevelChange={this.fetchSysInfo}\n            serverId={getServerId(sysInfoData)}\n            showActions={sysInfoData !== undefined}\n            version={\n              isCluster(sysInfoData) ? getClusterVersion(sysInfoData) : getVersion(sysInfoData)\n            }\n          />\n        )}\n        {this.renderSysInfo()}\n      </div>\n    );\n  }\n}\n\nexport default withRouter(App);\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport * as ReactModal from 'react-modal';\nimport * as classNames from 'classnames';\n\nReactModal.setAppElement('#content');\n\nexport interface ModalProps {\n  children: React.ReactNode;\n  size?: 'small' | 'medium' | 'large';\n  noBackdrop?: boolean;\n}\n\ntype MandatoryProps = Pick<ReactModal.Props, 'contentLabel'>;\n\ntype Props = Partial<ReactModal.Props> & MandatoryProps & ModalProps;\n\nexport default function Modal(props: Props) {\n  return (\n    <ReactModal\n      className={classNames('modal', {\n        'modal-small': props.size === 'small',\n        'modal-medium': props.size === 'medium',\n        'modal-large': props.size === 'large'\n      })}\n      isOpen={true}\n      overlayClassName={classNames('modal-overlay', { 'modal-no-backdrop': props.noBackdrop })}\n      {...props}\n    />\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport Modal, { ModalProps } from './Modal';\n\nexport interface ChildrenProps {\n  onCloseClick: (event?: React.SyntheticEvent<HTMLElement>) => void;\n  onFormSubmit: (event: React.SyntheticEvent<HTMLFormElement>) => void;\n  onSubmitClick: (event?: React.SyntheticEvent<HTMLElement>) => void;\n  submitting: boolean;\n}\n\ninterface Props extends ModalProps {\n  children: (props: ChildrenProps) => React.ReactNode;\n  header: string;\n  onClose: () => void;\n  onSubmit: () => void | Promise<void>;\n}\n\ninterface State {\n  submitting: boolean;\n}\n\nexport default class SimpleModal extends React.Component<Props, State> {\n  mounted = false;\n  state: State = { submitting: false };\n\n  componentDidMount() {\n    this.mounted = true;\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  stopSubmitting = () => {\n    if (this.mounted) {\n      this.setState({ submitting: false });\n    }\n  };\n\n  handleCloseClick = (event?: React.SyntheticEvent<HTMLElement>) => {\n    if (event) {\n      event.preventDefault();\n      event.currentTarget.blur();\n    }\n    this.props.onClose();\n  };\n\n  handleFormSubmit = (event: React.SyntheticEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    this.submit();\n  };\n\n  handleSubmitClick = (event?: React.SyntheticEvent<HTMLElement>) => {\n    if (event) {\n      event.preventDefault();\n      event.currentTarget.blur();\n    }\n    this.submit();\n  };\n\n  submit = () => {\n    const result = this.props.onSubmit();\n    if (result) {\n      this.setState({ submitting: true });\n      result.then(this.stopSubmitting, this.stopSubmitting);\n    }\n  };\n\n  render() {\n    const { children, header, onClose, onSubmit, ...modalProps } = this.props;\n    return (\n      <Modal contentLabel={header} onRequestClose={onClose} {...modalProps}>\n        {children({\n          onCloseClick: this.handleCloseClick,\n          onFormSubmit: this.handleFormSubmit,\n          onSubmitClick: this.handleSubmitClick,\n          submitting: this.state.submitting\n        })}\n      </Modal>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { SuggestionsContext } from './SuggestionsContext';\n\ninterface Props {\n  suggestions: string;\n}\n\nexport default function Suggestions({ suggestions }: Props) {\n  return (\n    <SuggestionsContext.Consumer>\n      {({ addSuggestions, removeSuggestions }) => (\n        <SuggestionsInner\n          addSuggestions={addSuggestions}\n          removeSuggestions={removeSuggestions}\n          suggestions={suggestions}\n        />\n      )}\n    </SuggestionsContext.Consumer>\n  );\n}\n\ninterface SuggestionsInnerProps {\n  addSuggestions: (key: string) => void;\n  removeSuggestions: (key: string) => void;\n  suggestions: string;\n}\n\nclass SuggestionsInner extends React.PureComponent<SuggestionsInnerProps> {\n  componentDidMount() {\n    this.props.addSuggestions(this.props.suggestions);\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    if (prevProps.suggestions !== this.props.suggestions) {\n      this.props.removeSuggestions(this.props.suggestions);\n      this.props.addSuggestions(prevProps.suggestions);\n    }\n  }\n\n  componentWillUnmount() {\n    this.props.removeSuggestions(this.props.suggestions);\n  }\n\n  render() {\n    return null;\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { ModalProps } from './Modal';\nimport SimpleModal, { ChildrenProps } from './SimpleModal';\nimport DeferredSpinner from '../common/DeferredSpinner';\nimport { SubmitButton, ResetButtonLink } from '../ui/buttons';\nimport { translate } from '../../helpers/l10n';\n\nexport interface ConfirmModalProps<T> extends ModalProps {\n  cancelButtonText?: string;\n  confirmButtonText: string;\n  confirmData?: T;\n  confirmDisable?: boolean;\n  isDestructive?: boolean;\n  onConfirm: (data?: T) => void | Promise<void | Response>;\n}\n\ninterface Props<T> extends ConfirmModalProps<T> {\n  header: string;\n  headerDescription?: React.ReactNode;\n  onClose: () => void;\n}\n\nexport default class ConfirmModal<T = string> extends React.PureComponent<Props<T>> {\n  mounted = false;\n\n  componentDidMount() {\n    this.mounted = true;\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  handleSubmit = () => {\n    const result = this.props.onConfirm(this.props.confirmData);\n    if (result) {\n      return result.then(this.props.onClose, () => {});\n    } else {\n      this.props.onClose();\n      return undefined;\n    }\n  };\n\n  renderModalContent = ({ onCloseClick, onFormSubmit, submitting }: ChildrenProps) => {\n    const {\n      children,\n      confirmButtonText,\n      confirmDisable,\n      header,\n      headerDescription,\n      isDestructive,\n      cancelButtonText = translate('cancel')\n    } = this.props;\n    return (\n      <form onSubmit={onFormSubmit}>\n        <header className=\"modal-head\">\n          <h2>{header}</h2>\n          {headerDescription}\n        </header>\n        <div className=\"modal-body\">{children}</div>\n        <footer className=\"modal-foot\">\n          <DeferredSpinner className=\"spacer-right\" loading={submitting} />\n          <SubmitButton\n            autoFocus={true}\n            className={isDestructive ? 'button-red' : undefined}\n            disabled={submitting || confirmDisable}>\n            {confirmButtonText}\n          </SubmitButton>\n          <ResetButtonLink disabled={submitting} onClick={onCloseClick}>\n            {cancelButtonText}\n          </ResetButtonLink>\n        </footer>\n      </form>\n    );\n  };\n\n  render() {\n    const { header, onClose, noBackdrop, size } = this.props;\n    const modalProps = { header, onClose, noBackdrop, size };\n    return (\n      <SimpleModal onSubmit={this.handleSubmit} {...modalProps}>\n        {this.renderModalContent}\n      </SimpleModal>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { DateSource, FormattedDate } from 'react-intl';\nimport { parseDate } from '../../helpers/dates';\n\ninterface Props {\n  children?: (formattedDate: string) => React.ReactNode;\n  date: DateSource;\n  long?: boolean;\n}\n\nexport const formatterOption = { year: 'numeric', month: 'short', day: '2-digit' };\n\nexport const longFormatterOption = { year: 'numeric', month: 'long', day: 'numeric' };\n\nexport default function DateFormatter({ children, date, long }: Props) {\n  return (\n    <FormattedDate value={parseDate(date)} {...(long ? longFormatterOption : formatterOption)}>\n      {children}\n    </FormattedDate>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport ConfirmModal, { ConfirmModalProps } from './ConfirmModal';\nimport ModalButton, { ChildrenProps, ModalProps } from './ModalButton';\n\ninterface Props<T> extends ConfirmModalProps<T> {\n  children: (props: ChildrenProps) => React.ReactNode;\n  modalBody: React.ReactNode;\n  modalHeader: string;\n  modalHeaderDescription?: React.ReactNode;\n}\n\ninterface State {\n  modal: boolean;\n}\n\nexport default class ConfirmButton<T> extends React.PureComponent<Props<T>, State> {\n  renderConfirmModal = ({ onClose }: ModalProps) => {\n    const {\n      children,\n      modalBody,\n      modalHeader,\n      modalHeaderDescription,\n      ...confirmModalProps\n    } = this.props;\n    return (\n      <ConfirmModal\n        header={modalHeader}\n        headerDescription={modalHeaderDescription}\n        onClose={onClose}\n        {...confirmModalProps}>\n        {modalBody}\n      </ConfirmModal>\n    );\n  };\n\n  render() {\n    return <ModalButton modal={this.renderConfirmModal}>{this.props.children}</ModalButton>;\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\n\nexport interface ChildrenProps {\n  onClick: () => void;\n  onFormSubmit: (event: React.FormEvent<HTMLFormElement>) => void;\n}\n\nexport interface ModalProps {\n  onClose: () => void;\n}\n\nexport interface Props {\n  children: (props: ChildrenProps) => React.ReactNode;\n  modal: (props: ModalProps) => React.ReactNode;\n}\n\ninterface State {\n  modal: boolean;\n}\n\nexport default class ModalButton extends React.PureComponent<Props, State> {\n  mounted = false;\n  state: State = { modal: false };\n\n  componentDidMount() {\n    this.mounted = true;\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  handleButtonClick = () => {\n    this.setState({ modal: true });\n  };\n\n  handleFormSubmit = (event?: React.FormEvent<HTMLFormElement>) => {\n    if (event) {\n      event.preventDefault();\n    }\n    this.setState({ modal: true });\n  };\n\n  handleCloseModal = () => {\n    if (this.mounted) {\n      this.setState({ modal: false });\n    }\n  };\n\n  render() {\n    return (\n      <>\n        {this.props.children({\n          onClick: this.handleButtonClick,\n          onFormSubmit: this.handleFormSubmit\n        })}\n        {this.state.modal && this.props.modal({ onClose: this.handleCloseModal })}\n      </>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport Icon, { IconProps } from './Icon';\n\nexport default function ChevronDownIcon({ className, fill = 'currentColor', size }: IconProps) {\n  return (\n    <Icon className={className} size={size}>\n      <path\n        d=\"M7.72 11.596L3.119 6.992A.382.382 0 0 1 3 6.713c0-.108.04-.2.118-.279l1.03-1.03a.382.382 0 0 1 .278-.117c.108 0 .201.04.28.117L8 8.7l3.294-3.295a.382.382 0 0 1 .28-.117c.108 0 .2.04.279.117l1.03 1.03a.382.382 0 0 1 .117.28c0 .107-.04.2-.118.278L8.28 11.596a.382.382 0 0 1-.279.117.382.382 0 0 1-.28-.117z\"\n        style={{ fill }}\n      />\n    </Icon>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport * as classNames from 'classnames';\nimport * as Clipboard from 'clipboard';\nimport Tooltip from './Tooltip';\nimport { Button } from '../ui/buttons';\nimport { translate } from '../../helpers/l10n';\n\ninterface Props {\n  className?: string;\n  copyValue: string;\n  label?: string;\n}\n\ninterface State {\n  tooltipShown: boolean;\n}\n\nexport default class ClipboardButton extends React.PureComponent<Props, State> {\n  clipboard?: Clipboard;\n  copyButton?: HTMLElement | null;\n  mounted = false;\n  state: State = { tooltipShown: false };\n\n  componentDidMount() {\n    this.mounted = true;\n    if (this.copyButton) {\n      this.clipboard = new Clipboard(this.copyButton);\n      this.clipboard.on('success', this.showTooltip);\n    }\n  }\n\n  componentDidUpdate() {\n    if (this.clipboard) {\n      this.clipboard.destroy();\n    }\n    if (this.copyButton) {\n      this.clipboard = new Clipboard(this.copyButton);\n      this.clipboard.on('success', this.showTooltip);\n    }\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n    if (this.clipboard) {\n      this.clipboard.destroy();\n    }\n  }\n\n  showTooltip = () => {\n    if (this.mounted) {\n      this.setState({ tooltipShown: true });\n      setTimeout(() => {\n        if (this.mounted) {\n          this.setState({ tooltipShown: false });\n        }\n      }, 1000);\n    }\n  };\n\n  render() {\n    return (\n      <Tooltip overlay={translate('copied_action')} visible={this.state.tooltipShown}>\n        <Button\n          className={classNames('no-select', this.props.className)}\n          data-clipboard-text={this.props.copyValue}\n          innerRef={node => (this.copyButton = node)}>\n          {this.props.label ? this.props.label : translate('copy')}\n        </Button>\n      </Tooltip>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { IconProps } from './Icon';\nimport ChevronDownIcon from './ChevronDownIcon';\nimport ChevronRightIcon from './ChevronRightcon';\n\ninterface Props extends IconProps {\n  open: boolean;\n}\n\nexport default function OpenCloseIcon({ open, ...props }: Props) {\n  return open ? <ChevronDownIcon {...props} /> : <ChevronRightIcon {...props} />;\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { getJSON, post, postJSON, requestTryAndRepeatUntil } from '../helpers/request';\nimport throwGlobalError from '../app/utils/throwGlobalError';\n\nexport function setLogLevel(level: string): Promise<void | Response> {\n  return post('/api/system/change_log_level', { level }).catch(throwGlobalError);\n}\n\nexport function getSystemInfo(): Promise<T.SysInfoCluster | T.SysInfoStandalone> {\n  return getJSON('/api/system/info').catch(throwGlobalError);\n}\n\nexport function getSystemStatus(): Promise<{ id: string; version: string; status: T.SysStatus }> {\n  return getJSON('/api/system/status');\n}\n\nexport function getSystemUpgrades(): Promise<{\n  upgrades: T.SystemUpgrade[];\n  updateCenterRefresh: string;\n}> {\n  return getJSON('/api/system/upgrades');\n}\n\nexport function getMigrationStatus(): Promise<{\n  message?: string;\n  startedAt?: string;\n  state: string;\n}> {\n  return getJSON('/api/system/db_migration_status');\n}\n\nexport function migrateDatabase(): Promise<{\n  message?: string;\n  startedAt?: string;\n  state: string;\n}> {\n  return postJSON('/api/system/migrate_db');\n}\n\nexport function restart(): Promise<void | Response> {\n  return post('/api/system/restart').catch(throwGlobalError);\n}\n\nexport function waitSystemUPStatus(): Promise<{\n  id: string;\n  version: string;\n  status: T.SysStatus;\n}> {\n  return requestTryAndRepeatUntil(\n    getSystemStatus,\n    { max: -1, slowThreshold: -15 },\n    ({ status }) => status === 'UP'\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { PluginPendingResult } from '../../api/plugins';\n\nexport interface AdminContextInterface {\n  fetchSystemStatus: () => void;\n  fetchPendingPlugins: () => void;\n  pendingPlugins: PluginPendingResult;\n  systemStatus: T.SysStatus;\n}\n\nexport const defaultPendingPlugins = { installing: [], removing: [], updating: [] };\nexport const defaultSystemStatus = 'UP';\n\nconst AdminContext = React.createContext<AdminContextInterface>({\n  fetchSystemStatus: () => {},\n  fetchPendingPlugins: () => {},\n  pendingPlugins: defaultPendingPlugins,\n  systemStatus: defaultSystemStatus\n});\nexport default AdminContext;\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport * as classNames from 'classnames';\nimport ConfirmButton from '../controls/ConfirmButton';\nimport { translate } from '../../helpers/l10n';\nimport { restart } from '../../api/system';\nimport { Button } from '../ui/buttons';\n\ninterface Props {\n  className?: string;\n  fetchSystemStatus: () => void;\n  systemStatus: T.SysStatus;\n}\n\nexport default class RestartButton extends React.PureComponent<Props> {\n  handleConfirm = () => {\n    return restart().then(this.props.fetchSystemStatus);\n  };\n\n  render() {\n    const { className, systemStatus } = this.props;\n    return (\n      <ConfirmButton\n        confirmButtonText={translate('restart')}\n        modalBody={\n          <>\n            <p className=\"spacer-top spacer-bottom\">\n              {translate('system.are_you_sure_to_restart')}\n            </p>\n            <p>{translate('system.forcing_shutdown_not_recommended')}</p>\n          </>\n        }\n        modalHeader={translate('system.restart_server')}\n        onConfirm={this.handleConfirm}>\n        {({ onClick }) => (\n          <Button\n            className={classNames('button-red', className)}\n            disabled={systemStatus !== 'UP'}\n            onClick={onClick}>\n            {systemStatus === 'RESTARTING'\n              ? translate('system.restart_in_progress')\n              : translate('system.restart_server')}\n          </Button>\n        )}\n      </ConfirmButton>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport * as classNames from 'classnames';\nimport OpenCloseIcon from '../icons-components/OpenCloseIcon';\n\ninterface Props {\n  children: React.ReactNode;\n  className?: string;\n  data?: string;\n  onClick: (data?: string) => void;\n  open: boolean;\n  renderHeader?: () => React.ReactNode;\n  title: React.ReactNode;\n}\n\ninterface State {\n  hoveringInner: boolean;\n}\n\nexport default class BoxedGroupAccordion extends React.PureComponent<Props, State> {\n  state: State = { hoveringInner: false };\n\n  handleClick = () => {\n    this.props.onClick(this.props.data);\n  };\n\n  onDetailEnter = () => {\n    this.setState({ hoveringInner: true });\n  };\n\n  onDetailLeave = () => {\n    this.setState({ hoveringInner: false });\n  };\n\n  render() {\n    const { className, open, renderHeader, title } = this.props;\n    return (\n      <div\n        className={classNames('boxed-group boxed-group-accordion', className, {\n          'no-hover': this.state.hoveringInner\n        })}>\n        <div className=\"boxed-group-header\" onClick={this.handleClick} role=\"listitem\">\n          <span className=\"boxed-group-accordion-title\">\n            <OpenCloseIcon className=\"little-spacer-right\" open={open} />\n            {title}\n          </span>\n          {renderHeader && renderHeader()}\n        </div>\n        {open && (\n          <div\n            className=\"boxed-group-inner\"\n            onMouseEnter={this.onDetailEnter}\n            onMouseLeave={this.onDetailLeave}>\n            {this.props.children}\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n"],"sourceRoot":""}