{"version":3,"sources":["webpack:///./src/main/js/apps/account/profile/UserExternalIdentity.tsx","webpack:///./src/main/js/apps/account/profile/UserGroups.tsx","webpack:///./src/main/js/apps/account/profile/UserScmAccounts.tsx","webpack:///./src/main/js/apps/account/profile/Profile.tsx","webpack:///./src/main/js/app/utils/handleRequiredAuthentication.ts","webpack:///./src/main/js/components/hoc/whenLoggedIn.tsx"],"names":["_super","UserExternalIdentity","_this","apply","this","arguments","mounted","state","loading","__extends","prototype","componentDidMount","fetchIdentityProviders","componentDidUpdate","prevProps","user","props","componentWillUnmount","setState","Object","users","then","r","identityProviders","providers","identityProvider","find","provider","key","externalProvider","catch","render","_a","index_js_exposed","className","style","backgroundColor","color","colors","theme","alt","name","height","src","urls","iconPath","width","externalIdentity","UserGroups","groups","l10n","id","map","group","title","UserScmAccounts","scmAccounts","login","email","scmAccount","Profile","currentUser","local","profile_UserExternalIdentity","Boolean","system","__webpack_require__","d","__webpack_exports__","whenLoggedIn","handleRequiredAuthentication","_getHistory__WEBPACK_IMPORTED_MODULE_0__","history","returnTo","window","location","pathname","search","hash","replace","query","return_to","WrappedComponent","Wrapper","_helpers_users__WEBPACK_IMPORTED_MODULE_3__","_app_utils_handleRequiredAuthentication__WEBPACK_IMPORTED_MODULE_4__","react__WEBPACK_IMPORTED_MODULE_0__","__assign","displayName","_utils__WEBPACK_IMPORTED_MODULE_1__","_withCurrentUser__WEBPACK_IMPORTED_MODULE_2__"],"mappings":"6cAkCA,SAAAA,GAAA,SAAAC,IAAA,IAAAC,EAAA,OAAAF,KAAAG,MAAAC,KAAAC,YAAAD,YACEF,EAAAI,SAAU,EACVJ,EAAAK,MAAe,CACbC,SAAS,KAyEb,OA5EkDC,EAAAR,EAAAD,GAMhDC,EAAAS,UAAAC,kBAAA,WACEP,KAAKE,SAAU,EACfF,KAAKQ,0BAGPX,EAAAS,UAAAG,mBAAA,SAAmBC,GACbA,EAAUC,OAASX,KAAKY,MAAMD,MAChCX,KAAKQ,0BAITX,EAAAS,UAAAO,qBAAA,WACEb,KAAKE,SAAU,GAGjBL,EAAAS,UAAAE,uBAAA,eAAAV,EAAAE,KACEA,KAAKc,SAAS,CAAEV,SAAS,IACzBW,OAAAC,EAAA,EAAAD,GACGE,KAAK,SAAAC,GAAK,OAAAA,EAAAC,oBACVF,KAAK,SAAAG,GACJ,GAAItB,EAAKI,QAAS,CAChB,IAAMmB,EAAmBD,EAAUE,KACjC,SAAAC,GAAY,OAAAA,EAASC,MAAQ1B,EAAKc,MAAMD,KAA5Bc,mBAEd3B,EAAKgB,SAAS,CAAEV,SAAS,EAAOiB,iBAAgBA,OAGnDK,MAAM,WACD5B,EAAKI,SACPJ,EAAKgB,SAAS,CAAEV,SAAS,OAKjCP,EAAAS,UAAAqB,OAAA,WACU,IAAAhB,EAAAX,KAAAY,MAAAD,KACFiB,EAAA5B,KAAAG,MAAEC,EAAAwB,EAAAxB,QAASiB,EAAAO,EAAAP,iBAEjB,OAAIjB,EACK,KAGJiB,EAWHQ,EAAA,qBACEC,UAAU,oBACVC,MAAO,CACLC,gBAAiBX,EAAiBW,gBAClCC,MAAOlB,OAAAmB,EAAA,EAAAnB,CAAaM,EAAiBW,gBAAiBG,EAAA,mBAExDN,EAAA,qBACEO,IAAKf,EAAiBgB,KACtBP,UAAU,sBACVQ,OAAO,KACPC,IAAKxB,OAAAyB,EAAA,EAAAzB,GAAeM,EAAiBoB,SACrCC,MAAM,OACL,IACF/B,EAAKgC,kBAtBNd,EAAA,yBACGlB,EAAKc,iBACL,KACAd,EAAKgC,mBAuBhB9C,EA5EA,CAAkDgC,EAAA,uBCRpC,SAAUe,EAAWhB,OAAEiB,EAAAjB,EAAAiB,OACnC,OACEhB,EAAA,yBACEA,EAAA,oBAAIC,UAAU,iBAAiBf,OAAA+B,EAAA,EAAA/B,CAAU,sBACzCc,EAAA,oBAAIkB,GAAG,UACJF,EAAOG,IAAI,SAAAC,GAAS,OACnBpB,EAAA,oBAAIC,UAAU,uBAAuBN,IAAKyB,EAAOC,MAAOD,GADrCA,OCJf,SAAUE,EAAgBvB,OAAEjB,EAAAiB,EAAAjB,KAAMyC,EAAAxB,EAAAwB,YAC9C,OACEvB,EAAA,yBACEA,EAAA,oBAAIC,UAAU,iBAAiBf,OAAA+B,EAAA,EAAA/B,CAAU,4BACzCc,EAAA,oBAAIkB,GAAG,gBACLlB,EAAA,oBAAIC,UAAU,qCAAqCoB,MAAOvC,EAAK0C,OAC5D1C,EAAK0C,OAGP1C,EAAK2C,OACJzB,EAAA,oBAAIC,UAAU,qCAAqCoB,MAAOvC,EAAK2C,OAC5D3C,EAAK2C,OAITF,EAAYJ,IAAI,SAAAO,GAAc,OAC7B1B,EAAA,oBAAIC,UAAU,uBAAuBN,IAAK+B,EAAYL,MAAOK,GADhCA,6BCXjC,SAAUC,EAAQ5B,OAAE6B,EAAA7B,EAAA6B,YACxB,OACE5B,EAAA,qBAAKC,UAAU,kCACbD,EAAA,qBAAKC,UAAU,iCACbD,EAAA,qBAAKC,UAAU,iBACZf,OAAA+B,EAAA,EAAA/B,CAAU,cAAWc,EAAA,wBAAQkB,GAAG,SAASU,EAAYJ,SAGtDI,EAAYC,OAA0C,cAAjCD,EAAYhC,kBACjCI,EAAA,qBAAKC,UAAU,gBAAgBiB,GAAG,qBAChClB,EAAA,cAAC8B,EAAoB,CAAChD,KAAM8C,KAI/BG,QAAQH,EAAYH,QACnBzB,EAAA,qBAAKC,UAAU,iBACZf,OAAA+B,EAAA,EAAA/B,CAAU,yBAAsBc,EAAA,wBAAQkB,GAAG,SAASU,EAAYH,SAInEvC,OAAA8C,EAAA,aAAA9C,IACAc,EAAA,cAAAA,EAAA,cACEA,EAAA,oBAAIC,UAAU,sBACdD,EAAA,cAACe,EAAU,CAACC,OAAQY,EAAYZ,UAIpChB,EAAA,yBAEAA,EAAA,cAACsB,EAAe,CAACC,YAAaK,EAAYL,YAAazC,KAAM8C,MA5DrEK,EAAAC,EAAAC,EAAA,4BAAAR,IAkEeQ,EAAA,QAAAjD,OAAAkD,EAAA,GAAaT,qCClE5BM,EAAA5C,EAAA8C,GAAAF,EAAAC,EAAAC,EAAA,4BAAAE,IAAA,IAAAC,EAAAL,EAAA,KAqBc,SAAUI,IACtB,IAAME,EAAUrD,OAAAoD,EAAA,EAAApD,GACVsD,EAAWC,OAAOC,SAASC,SAAWF,OAAOC,SAASE,OAASH,OAAOC,SAASG,KACrFN,EAAQO,QAAQ,CAAEH,SAAU,gBAAiBI,MAAO,CAAEC,UAAWR,8nBCC7D,SAAUJ,EAAgBa,GAC9B,IAAAC,EAAA,SAAAnF,GAAA,SAAAmF,mDAgBA,OAhBsB1E,EAAA0E,EAAAnF,GAGpBmF,EAAAzE,UAAAC,kBAAA,WACOQ,OAAAiE,EAAA,EAAAjE,CAAWf,KAAKY,MAAM6C,cACzB1C,OAAAkE,EAAA,QAAAlE,IAIJgE,EAAAzE,UAAAqB,OAAA,WACE,OAAIZ,OAAAiE,EAAA,EAAAjE,CAAWf,KAAKY,MAAM6C,aACjByB,EAAA,cAACJ,EAAgBK,EAAA,GAAKnF,KAAKY,QAE3B,MAZJmE,EAAAK,YAAcrE,OAAAsE,EAAA,EAAAtE,CAAsB+D,EAAkB,gBAe/DC,EAhBA,CAAsBG,EAAA,WAkBtB,OAAOnE,OAAAuE,EAAA,EAAAvE,CAAgBgE","file":"js/358.1562761687107.chunk.js","sourcesContent":["/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { getIdentityProviders } from '../../../api/users';\nimport * as theme from '../../../app/theme';\nimport { getTextColor } from '../../../helpers/colors';\nimport { getBaseUrl } from '../../../helpers/urls';\n\ninterface Props {\n  user: T.LoggedInUser;\n}\n\ninterface State {\n  identityProvider?: T.IdentityProvider;\n  loading: boolean;\n}\n\nexport default class UserExternalIdentity extends React.PureComponent<Props, State> {\n  mounted = false;\n  state: State = {\n    loading: true\n  };\n\n  componentDidMount() {\n    this.mounted = true;\n    this.fetchIdentityProviders();\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    if (prevProps.user !== this.props.user) {\n      this.fetchIdentityProviders();\n    }\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  fetchIdentityProviders() {\n    this.setState({ loading: true });\n    getIdentityProviders()\n      .then(r => r.identityProviders)\n      .then(providers => {\n        if (this.mounted) {\n          const identityProvider = providers.find(\n            provider => provider.key === this.props.user.externalProvider\n          );\n          this.setState({ loading: false, identityProvider });\n        }\n      })\n      .catch(() => {\n        if (this.mounted) {\n          this.setState({ loading: false });\n        }\n      });\n  }\n\n  render() {\n    const { user } = this.props;\n    const { loading, identityProvider } = this.state;\n\n    if (loading) {\n      return null;\n    }\n\n    if (!identityProvider) {\n      return (\n        <div>\n          {user.externalProvider}\n          {': '}\n          {user.externalIdentity}\n        </div>\n      );\n    }\n\n    return (\n      <div\n        className=\"identity-provider\"\n        style={{\n          backgroundColor: identityProvider.backgroundColor,\n          color: getTextColor(identityProvider.backgroundColor, theme.secondFontColor)\n        }}>\n        <img\n          alt={identityProvider.name}\n          className=\"little-spacer-right\"\n          height=\"14\"\n          src={getBaseUrl() + identityProvider.iconPath}\n          width=\"14\"\n        />{' '}\n        {user.externalIdentity}\n      </div>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { translate } from '../../../helpers/l10n';\n\ninterface Props {\n  groups: string[];\n}\n\nexport default function UserGroups({ groups }: Props) {\n  return (\n    <div>\n      <h2 className=\"spacer-bottom\">{translate('my_profile.groups')}</h2>\n      <ul id=\"groups\">\n        {groups.map(group => (\n          <li className=\"little-spacer-bottom\" key={group} title={group}>\n            {group}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { translate } from '../../../helpers/l10n';\n\ninterface Props {\n  scmAccounts: string[];\n  user: T.LoggedInUser;\n}\n\nexport default function UserScmAccounts({ user, scmAccounts }: Props) {\n  return (\n    <div>\n      <h2 className=\"spacer-bottom\">{translate('my_profile.scm_accounts')}</h2>\n      <ul id=\"scm-accounts\">\n        <li className=\"little-spacer-bottom text-ellipsis\" title={user.login}>\n          {user.login}\n        </li>\n\n        {user.email && (\n          <li className=\"little-spacer-bottom text-ellipsis\" title={user.email}>\n            {user.email}\n          </li>\n        )}\n\n        {scmAccounts.map(scmAccount => (\n          <li className=\"little-spacer-bottom\" key={scmAccount} title={scmAccount}>\n            {scmAccount}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport UserExternalIdentity from './UserExternalIdentity';\nimport UserGroups from './UserGroups';\nimport UserScmAccounts from './UserScmAccounts';\nimport { translate } from '../../../helpers/l10n';\nimport { isSonarCloud } from '../../../helpers/system';\nimport { whenLoggedIn } from '../../../components/hoc/whenLoggedIn';\n\nexport interface Props {\n  currentUser: T.LoggedInUser;\n}\n\nexport function Profile({ currentUser }: Props) {\n  return (\n    <div className=\"account-body account-container\">\n      <div className=\"boxed-group boxed-group-inner\">\n        <div className=\"spacer-bottom\">\n          {translate('login')}: <strong id=\"login\">{currentUser.login}</strong>\n        </div>\n\n        {!currentUser.local && currentUser.externalProvider !== 'sonarqube' && (\n          <div className=\"spacer-bottom\" id=\"identity-provider\">\n            <UserExternalIdentity user={currentUser} />\n          </div>\n        )}\n\n        {Boolean(currentUser.email) && (\n          <div className=\"spacer-bottom\">\n            {translate('my_profile.email')}: <strong id=\"email\">{currentUser.email}</strong>\n          </div>\n        )}\n\n        {!isSonarCloud() && (\n          <>\n            <hr className=\"account-separator\" />\n            <UserGroups groups={currentUser.groups} />\n          </>\n        )}\n\n        <hr />\n\n        <UserScmAccounts scmAccounts={currentUser.scmAccounts} user={currentUser} />\n      </div>\n    </div>\n  );\n}\n\nexport default whenLoggedIn(Profile);\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport getHistory from './getHistory';\n\nexport default function handleRequiredAuthentication() {\n  const history = getHistory();\n  const returnTo = window.location.pathname + window.location.search + window.location.hash;\n  history.replace({ pathname: '/sessions/new', query: { return_to: returnTo } });\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { getWrappedDisplayName } from './utils';\nimport { withCurrentUser } from './withCurrentUser';\nimport { isLoggedIn } from '../../helpers/users';\nimport handleRequiredAuthentication from '../../app/utils/handleRequiredAuthentication';\n\nexport function whenLoggedIn<P>(WrappedComponent: React.ComponentType<P>) {\n  class Wrapper extends React.Component<P & { currentUser: T.CurrentUser }> {\n    static displayName = getWrappedDisplayName(WrappedComponent, 'whenLoggedIn');\n\n    componentDidMount() {\n      if (!isLoggedIn(this.props.currentUser)) {\n        handleRequiredAuthentication();\n      }\n    }\n\n    render() {\n      if (isLoggedIn(this.props.currentUser)) {\n        return <WrappedComponent {...this.props} />;\n      } else {\n        return null;\n      }\n    }\n  }\n\n  return withCurrentUser(Wrapper);\n}\n"],"sourceRoot":""}