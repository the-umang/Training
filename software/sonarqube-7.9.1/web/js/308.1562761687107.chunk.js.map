{"version":3,"sources":["webpack:///./src/main/js/components/controls/BackButton.tsx","webpack:///./src/main/js/apps/tutorials/analyzeProject/AnalyzeTutorialSonarCloud.css?5e5b","webpack:///./src/main/js/apps/tutorials/analyzeProject/AnalyzeTutorialSonarCloud.css","webpack:///./src/main/js/apps/tutorials/analyzeProject/AnalyzeTutorialSuggestion.tsx","webpack:///./src/main/js/apps/tutorials/components/RenderOptions.tsx","webpack:///./src/main/js/apps/tutorials/components/NewProjectForm.tsx","webpack:///./src/main/js/apps/tutorials/utils.ts","webpack:///./src/main/js/apps/tutorials/components/LanguageForm.tsx","webpack:///./src/main/js/apps/tutorials/components/commands/JavaMaven.tsx","webpack:///./src/main/js/apps/tutorials/components/commands/JavaGradle.tsx","webpack:///./src/main/js/apps/tutorials/components/commands/MSBuildScanner.tsx","webpack:///./src/main/js/apps/tutorials/components/commands/DotNet.tsx","webpack:///./src/main/js/apps/tutorials/components/commands/BuildWrapper.tsx","webpack:///./src/main/js/apps/tutorials/components/commands/Msvc.tsx","webpack:///./src/main/js/apps/tutorials/components/commands/SQScanner.tsx","webpack:///./src/main/js/apps/tutorials/components/commands/ClangGCC.tsx","webpack:///./src/main/js/apps/tutorials/components/commands/Other.tsx","webpack:///./src/main/js/apps/tutorials/components/commands/AnalysisCommand.tsx","webpack:///./src/main/js/apps/tutorials/components/ProjectAnalysisStep.tsx","webpack:///./src/main/js/apps/tutorials/analyzeProject/AnalyzeTutorial.tsx","webpack:///./src/main/js/apps/tutorials/components/TokenStep.tsx","webpack:///./src/main/js/apps/tutorials/analyzeProject/configurations/AutoScanAlert.tsx","webpack:///./src/main/js/apps/tutorials/analyzeProject/steps/EditTokenModal.tsx","webpack:///./src/main/js/apps/tutorials/analyzeProject/steps/EncryptYourTokenStep.tsx","webpack:///./src/main/js/apps/tutorials/analyzeProject/steps/CreateSonarPropertiesStep.tsx","webpack:///./src/main/js/apps/tutorials/components/commands/TravisSonarCloud/JavaMavenTravisSonarCloud.tsx","webpack:///./src/main/js/apps/tutorials/components/commands/TravisSonarCloud/JavaGradleTravisSonarCloud.tsx","webpack:///./src/main/js/apps/tutorials/components/commands/TravisSonarCloud/utils.tsx","webpack:///./src/main/js/apps/tutorials/components/commands/TravisSonarCloud/OtherTravisSonarCloud.tsx","webpack:///./src/main/js/apps/tutorials/components/commands/TravisSonarCloud/ClangGCCTravisSonarCloud.tsx","webpack:///./src/main/js/apps/tutorials/components/commands/AnalysisCommandTravis.tsx","webpack:///./src/main/js/apps/tutorials/components/BuildSystemForm.tsx","webpack:///./src/main/js/apps/tutorials/analyzeProject/steps/EditTravisYmlStep.tsx","webpack:///./src/main/js/apps/tutorials/analyzeProject/utils.ts","webpack:///./src/main/js/apps/tutorials/analyzeProject/configurations/ConfigureWithTravis.tsx","webpack:///./src/main/js/apps/tutorials/components/commands/Custom/JavaMavenCustom.tsx","webpack:///./src/main/js/apps/tutorials/components/commands/Custom/JavaGradleCustom.tsx","webpack:///./src/main/js/apps/tutorials/components/commands/Custom/ClangGCCCustom.tsx","webpack:///./src/main/js/apps/tutorials/components/commands/Custom/OtherCustom.tsx","webpack:///./src/main/js/apps/tutorials/components/commands/OtherCI/OtherOtherCI.tsx","webpack:///./src/main/js/apps/tutorials/components/commands/OtherCI/ClangGCCOtherCI.tsx","webpack:///./src/main/js/apps/tutorials/components/commands/AnalysisCommandOtherCI.tsx","webpack:///./src/main/js/apps/tutorials/components/commands/AnalysisCommandCustom.tsx","webpack:///./src/main/js/apps/tutorials/components/ProjectAnalysisStepFromBuildTool.tsx","webpack:///./src/main/js/apps/tutorials/components/AnalyzeTutorialDone.tsx","webpack:///./src/main/js/apps/tutorials/analyzeProject/AnalyzeTutorialSonarCloud.tsx","webpack:///./src/main/js/apps/tutorials/analyzeProject/configurations/ConfigureWithAutoScan.tsx","webpack:///./src/main/js/apps/tutorials/analyzeProject/configurations/ConfigureWithLocalScanner.tsx","webpack:///./src/main/js/apps/tutorials/analyzeProject/configurations/ConfigureWithOtherCI.tsx","webpack:///./src/main/js/apps/overview/components/EmptyOverview.tsx","webpack:///./src/main/js/components/controls/SimpleModal.tsx","webpack:///./src/main/js/components/controls/ConfirmModal.tsx","webpack:///./src/main/js/helpers/almIntegrations.ts","webpack:///./src/main/js/components/controls/RadioToggle.tsx","webpack:///./src/main/js/api/alm-integration.ts","webpack:///./src/main/js/apps/tutorials/components/Step.tsx","webpack:///./src/main/js/apps/tutorials/styles.css?5461","webpack:///./src/main/js/apps/tutorials/styles.css","webpack:///./src/main/js/api/user-tokens.ts"],"names":["BackButton","_super","_this","apply","this","arguments","handleClick","event","preventDefault","currentTarget","blur","props","disabled","onClick","renderIcon","react__WEBPACK_IMPORTED_MODULE_0__","height","viewBox","width","d","fill","_app_theme__WEBPACK_IMPORTED_MODULE_3__","__extends","prototype","render","_a","tooltip","Object","_helpers_l10n__WEBPACK_IMPORTED_MODULE_4__","_Tooltip__WEBPACK_IMPORTED_MODULE_2__","overlay","className","classnames__WEBPACK_IMPORTED_MODULE_1__","cursor-not-allowed","href","content","__webpack_require__","module","i","options","hmr","transform","insertInto","undefined","locals","exports","push","TutorialSuggestionBitbucket","index_js_exposed","Alert","variant","l10n","index_es","defaultMessage","id","values","link","urls","rel","target","TutorialSuggestionGithub","TutorialSuggestionVSTS","AnalyzeTutorialSuggestion","almKey","almIntegrations","RenderOptions","checked","onCheck","optionLabelKey","titleLabelKey","RadioToggle","name","map","build","label","value","NewProjectForm","call","mounted","stopLoading","setState","loading","sanitizeProjectKey","projectKey","replace","handleProjectKeyChange","handleProjectCreate","state","data","project","organization","components","then","done","onDone","handleProjectDelete","onDelete","componentDidMount","componentWillUnmount","valid","length","form","buttons","onSubmit","autoFocus","maxLength","minLength","onChange","required","type","quote","os","s","getUniqueTokenName","tokens","initialTokenName","hasToken","find","token","RenderOS","setOS","LanguageForm","handleChange","config","language","javaBuild","cFamilyCompiler","isLanguageConfigured","onReset","handleLanguageChange","handleJavaBuildChange","handleCFamilyCompilerChange","handleOSChange","handleProjectKeyDone","handleProjectKeyDelete","renderJavaBuild","renderCFamilyCompiler","renderProjectKey","component","components_NewProjectForm","__assign","key","LanguageForm_extends","languages","system","JavaMaven","command","host","InstanceMessage","message","CodeSnippet","snippet","JavaGradle","transformedMessage","plugin_code","filename","MSBuildScanner","code","DotNet","command1","command3","isOneLine","small","filenames","win","linux","mac","BuildWrapper","env_var","download","Msvc","SQScanner","dir","executables","ClangGCC","q","command2","Other","AnalysisCommand","renderCommandForMaven","renderCommandForGradle","renderCommandForDotNet","languageConfig","getProjectKey","renderCommandForMSVC","renderCommandForClangGCC","renderCommandForOther","AnalysisCommand_extends","Steps","ProjectAnalysisStep","handleLanguageSelect","onFinish","handleLanguageReset","renderForm","languageComponent","components_LanguageForm","analysisComponent","commands_AnalysisCommand","displayRowLayout","renderResult","ProjectAnalysisStep_extends","Step","finished","onOpen","open","stepNumber","stepTitle","TokenStep","getToken","selection","existingToken","canContinue","validExistingToken","match","handleTokenNameChange","tokenName","handleTokenGenerate","user_tokens","handleTokenRevoke","handleContinueClick","onContinue","handleGenerateClick","handleUseExistingClick","handleExisingTokenChange","renderGenerateOption","classnames","is-checked","placeholder","renderUseExistingOption","validInput","AlertErrorIcon","canUseExisting","react_router_es","to","AlertSuccessIcon","TokenStep_extends","currentUser","login","AnalyzeTutorial","step","TOKEN","handleTokenDone","ANALYSIS","handleTokenOpen","AnalyzeTutorial_extends","_b","alm","externalProvider","components_TokenStep","Boolean","components_ProjectAnalysisStep","caveats","default","limitedScope","AutoScanAlert","DocTooltip","doc","Promise","resolve","scopes","TokenMode","EditTokenModal","mode","use_existing_token","getTokensAndName","t","getNewToken","setExistingToken","setMode","EditTokenModal_extends","onClose","onSave","header","isConfirmEnabled","generate_token","ConfirmModal","confirmButtonText","confirmDisable","onConfirm","EncryptYourTokenStep","setToken","showModal","toggleModal","close","save","renderCommand","steps_EditTokenModal","wrap","CreateSonarPropertiesStep","JavaMavenTravisSonarCloud","getSonarcloudAddonYml","RequirementJavaBuild","dangerouslySetInnerHTML","__html","getSonarcloudAddonYmlRender","JavaGradleTravisSonarCloud","file","plugin","useCaseLink","CommonTravisSonarCloud","RequirementOtherBuild","OtherTravisSonarCloud","ClangGCCTravisSonarCloud","noCopy","RenderCommandForClangOrGCC","RenderCommandForGradle","RenderCommandForMaven","RenderCommandForOther","AnalysisCommandTravis","buildType","Build","gradle","make","maven","other","AnalysisCommandTravis_assign","BuildSystemForm","setBuild","EditTravisYmlStep","buildCallback","hasStepAfter","isJavaBuild","includes","chooseBuild","ALM_KEYS","PROJECT_ONBOARDING_DONE","PROJECT_ONBOARDING_MODE_ID","PROJECT_STEP_PROGRESS","alms","utils_a","BITBUCKET","GITHUB","MICROSOFT","modes","autoScanMode","ConfigureWithTravis_Steps","RenderCustomCommand","join","RenderCustomContent","linkText","linkUrl","JavaMavenCustom","suffix","ProjectAnalysisModes","CI","JavaGradleCustom","ClangGCCCustom_executables","ClangGCCCommon","renderCommand2","ClangGCCCustom","OtherCustom","OtherOtherCI","commandLinuxMac","ClangGCCOtherCI_executables","ClangGCCOtherCI","AnalysisCommandOtherCI_RenderCommandForClangOrGCC","AnalysisCommandOtherCI_RenderCommandForOther","AnalysisCommandOtherCI_getBuildOptions","AnalysisCommandCustom_RenderCommandForGradle","AnalysisCommandOtherCI_assign","AnalysisCommandCustom_RenderCommandForMaven","AnalysisCommandCommon","isModalVisible","getBuildOptions","AnalysisCommandOtherCI","AnalysisCommandCustom_RenderCommandForClangOrGCC","AnalysisCommandCustom_RenderCommandForOther","AnalysisCommandCustom_getBuildOptions","AnalysisCommandCustom_assign","AnalysisCommandCustom","Custom","ProjectAnalysisStepFromBuildTool","_c","storage","JSON","parse","e","saveAndFinish","stringify","ProjectAnalysisStepFromBuildTool_assign","AnalysisComponent","AnalyzeTutorialDone","setTutorialDone","alt","src","AnalyzeTutorialSonarCloud_Steps","tutorials","autoscan","showCustomizationOptions","setCustomizationOptions","DropdownIcon","turned","hidden","manual","travis","ENCRYPT_TOKEN","setStep","_d","hasStepAfterTravisYml","setHasStepAfterTravilYml","EDIT_TRAVIS_YML","CREATE_SONAR_PROPERTIES","AnalyzeTutorialSonarCloud","configureBitbucket","configureGithub","savedModeId","m","url","alm_integration","almLanguagesStats","almLanguageStats","configureMicrosoft","String","isTutorialDone","spinner","renderBitbucket","renderGithub","Tutorial","getClassnames","item","isAutoScanEnabled","allowed","notAllowed","withAllowedLanguages","keys","l","withNotAllowedLanguages","isAutoScannable","el","renderMicrosoft","AnalyzeTutorialSonarCloud_extends","DeferredSpinner","customSpinner","EmptyOverview","branchLike","branchLikes","hasAnalyses","onComponentChange","hasBranches","hasBadBranchConfig","some","branch","branches","users","WarningMessage","tutorials_analyzeProject_AnalyzeTutorialSonarCloud","analyzeProject_AnalyzeTutorial","MetaContainer","branchName","branchType","__webpack_exports__","es","rootReducer","SimpleModal","submitting","stopSubmitting","handleCloseClick","handleFormSubmit","submit","handleSubmitClick","result","children","modalProps","__rest","_Modal__WEBPACK_IMPORTED_MODULE_1__","contentLabel","onRequestClose","onCloseClick","onFormSubmit","onSubmitClick","handleSubmit","confirmData","renderModalContent","headerDescription","isDestructive","cancelButtonText","_common_DeferredSpinner__WEBPACK_IMPORTED_MODULE_2__","_ui_buttons__WEBPACK_IMPORTED_MODULE_3__","noBackdrop","size","_SimpleModal__WEBPACK_IMPORTED_MODULE_1__","getAlmMembersUrl","getUserAlmKey","hasAdvancedALMIntegration","isBitbucket","isGithub","isVSTS","isPersonal","sanitizeAlmId","_users__WEBPACK_IMPORTED_MODULE_0__","endsWith","user","startsWith","personal","newValue","renderOption","option","htmlId","htmlFor","defaultProps","bindAlmOrganization","_helpers_request__WEBPACK_IMPORTED_MODULE_0__","catch","_app_utils_throwGlobalError__WEBPACK_IMPORTED_MODULE_1__","getAlmAppInfo","getAlmOrganization","max","slowThreshold","almOrganization","boundOrganization","getRepositories","listUnboundApplications","applications","app","provisionProject","installationKeys","getGithubLanguages","apiUrl","is-open","is-finished","clickable","role","tabIndex","getTokens","generateToken","revokeToken","r","userTokens"],"mappings":"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","file":"js/308.1562761687107.chunk.js","sourcesContent":["/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport * as classNames from 'classnames';\nimport Tooltip from './Tooltip';\nimport * as theme from '../../app/theme';\nimport { translate } from '../../helpers/l10n';\n\ninterface Props {\n  className?: string;\n  disabled?: boolean;\n  onClick: () => void;\n  tooltip?: string;\n}\n\nexport default class BackButton extends React.PureComponent<Props> {\n  handleClick = (event: React.SyntheticEvent<HTMLAnchorElement>) => {\n    event.preventDefault();\n    event.currentTarget.blur();\n    if (!this.props.disabled) {\n      this.props.onClick();\n    }\n  };\n\n  renderIcon = () => (\n    <svg height=\"24\" viewBox=\"0 0 21 24\" width=\"21\">\n      <path\n        d=\"M3.845 12.9992l5.993 5.993.052.056c.049.061.093.122.129.191.082.159.121.339.111.518-.006.102-.028.203-.064.298-.149.39-.537.652-.954.644-.102-.002-.204-.019-.301-.052-.148-.05-.273-.135-.387-.241l-8.407-8.407 8.407-8.407.056-.052c.061-.048.121-.092.19-.128.116-.06.237-.091.366-.108.076-.004.075-.004.153-.003.155.015.3.052.437.129.088.051.169.115.239.19.246.266.33.656.214.999-.051.149-.135.273-.241.387l-5.983 5.984c5.287-.044 10.577-.206 15.859.013.073.009.091.009.163.027.187.047.359.15.49.292.075.081.136.175.18.276.044.101.072.209.081.319.032.391-.175.775-.521.962-.097.052-.202.089-.311.107-.073.012-.091.01-.165.013H3.845z\"\n        fill={this.props.disabled ? theme.disableGrayText : theme.secondFontColor}\n      />\n    </svg>\n  );\n\n  render() {\n    const { tooltip = translate('issues.return_to_list') } = this.props;\n    return (\n      <Tooltip overlay={tooltip}>\n        <a\n          className={classNames(\n            'link-no-underline',\n            { 'cursor-not-allowed': this.props.disabled },\n            this.props.className\n          )}\n          href=\"#\"\n          onClick={this.handleClick}>\n          {this.renderIcon()}\n        </a>\n      </Tooltip>\n    );\n  }\n}\n","\nvar content = require(\"!!../../../../../../node_modules/css-loader/dist/cjs.js??ref--6-1!../../../../../../node_modules/postcss-loader/src/index.js??postcss!./AnalyzeTutorialSonarCloud.css\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../../../../node_modules/css-loader/dist/cjs.js??ref--6-1!../../../../../../node_modules/postcss-loader/src/index.js??postcss!./AnalyzeTutorialSonarCloud.css\", function() {\n\t\tvar newContent = require(\"!!../../../../../../node_modules/css-loader/dist/cjs.js??ref--6-1!../../../../../../node_modules/postcss-loader/src/index.js??postcss!./AnalyzeTutorialSonarCloud.css\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","exports = module.exports = require(\"../../../../../../node_modules/css-loader/dist/runtime/api.js\")(false);\n// Module\nexports.push([module.id, \".page-analysis{display:flex;flex-direction:column;justify-content:center;align-items:center;margin:0 auto}.page-analysis .page-header{text-align:center}.page-analysis h1{font-weight:700}.page-analysis-container-sonarcloud .onboarding-step{padding:0 32px}.analysis-selector{flex-direction:column}.analysis-modes,.analysis-selector{display:flex;justify-content:space-around}.analysis-modes{width:80%}.mode-type{flex-direction:column}.mode-type,.mode-type .icon{display:flex;justify-content:center;align-items:center}.mode-type .icon{position:relative;width:100px;height:100px;background-repeat:no-repeat;background-position:50%}.mode-type .name{font-weight:700}.mode-type-autoscan{padding:48px 80px;background:#fff;box-shadow:0 0 10px 0 rgba(0,0,0,.3)}.mode-type-autoscan .icon{background-image:url(/images/sonarcloud-square-logo.svg)}.mode-type-autoscan .icon .badge{position:absolute;top:12px;right:0}.mode-type-travis .icon{background-image:url(/images/sonarcloud/analysis/helmet.svg)}.mode-type-other .icon{background-image:url(/images/sonarcloud/analysis/galaxy.svg)}.mode-type-manual .icon{background-image:url(/images/sonarcloud/analysis/manual.svg)}.step-selector{display:flex}.page-analysis-waiting{text-align:center}.page-analysis-waiting .links{padding:48px 80px;background:#fff}.onboarding-step hr.no-horizontal-margins{margin-left:0;margin-right:0}\", \"\"]);\n\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport { isBitbucket, isGithub, isVSTS } from '../../../helpers/almIntegrations';\nimport { translate } from '../../../helpers/l10n';\nimport { getBaseUrl } from '../../../helpers/urls';\nimport { Alert } from '../../../components/ui/Alert';\n\nexport function TutorialSuggestionBitbucket() {\n  return (\n    <Alert className=\"big-spacer-bottom\" variant=\"info\">\n      <p>{translate('onboarding.project_analysis.commands_for_analysis')}</p>\n      <p>{translate('onboarding.project_analysis.suggestions.bitbucket')}</p>\n      <FormattedMessage\n        defaultMessage={translate('onboarding.project_analysis.simply_link')}\n        id={'onboarding.project_analysis.simply_link'}\n        values={{\n          link: (\n            <a\n              href={\n                getBaseUrl() +\n                '/documentation/integrations/bitbucketcloud/#analyzing-with-pipelines'\n              }\n              rel=\"noopener noreferrer\"\n              target=\"_blank\">\n              {translate('onboarding.project_analysis.guide_to_integrate_pipelines')}\n            </a>\n          )\n        }}\n      />\n    </Alert>\n  );\n}\n\nexport function TutorialSuggestionGithub() {\n  return (\n    <Alert className=\"big-spacer-bottom\" variant=\"info\">\n      <p>{translate('onboarding.project_analysis.commands_for_analysis')} </p>\n      <p>{translate('onboarding.project_analysis.suggestions.github')}</p>\n      <FormattedMessage\n        defaultMessage={translate('onboarding.project_analysis.simply_link')}\n        id={'onboarding.project_analysis.simply_link'}\n        values={{\n          link: (\n            <a\n              href=\"https://docs.travis-ci.com/user/sonarcloud/\"\n              rel=\"noopener noreferrer\"\n              target=\"_blank\">\n              {translate('onboarding.project_analysis.guide_to_integrate_travis')}\n            </a>\n          )\n        }}\n      />\n    </Alert>\n  );\n}\n\nexport function TutorialSuggestionVSTS() {\n  return (\n    <Alert className=\"big-spacer-bottom\" variant=\"info\">\n      <FormattedMessage\n        defaultMessage={translate('onboarding.project_analysis.simply_link')}\n        id={'onboarding.project_analysis.simply_link'}\n        values={{\n          link: (\n            <a\n              href={getBaseUrl() + '/documentation/integrations/vsts/'}\n              rel=\"noopener noreferrer\"\n              target=\"_blank\">\n              {translate('onboarding.project_analysis.guide_to_integrate_vsts')}\n            </a>\n          )\n        }}\n      />\n    </Alert>\n  );\n}\n\nexport default function AnalyzeTutorialSuggestion({ almKey }: { almKey?: string }) {\n  if (isBitbucket(almKey)) {\n    return <TutorialSuggestionBitbucket />;\n  } else if (isGithub(almKey)) {\n    return <TutorialSuggestionGithub />;\n  } else if (isVSTS(almKey)) {\n    return <TutorialSuggestionVSTS />;\n  }\n  return null;\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { translate } from '../../../helpers/l10n';\nimport RadioToggle from '../../../components/controls/RadioToggle';\n\ninterface RenderOptionsProps {\n  checked: string | undefined;\n  name: string;\n  onCheck: (checked: string) => void;\n  optionLabelKey: string;\n  options: string[];\n  titleLabelKey?: string;\n}\n\nexport function RenderOptions({\n  checked,\n  onCheck,\n  optionLabelKey,\n  options,\n  titleLabelKey\n}: RenderOptionsProps) {\n  return (\n    <div className=\"big-spacer-top\">\n      {titleLabelKey && <h4 className=\"spacer-bottom\">{translate(titleLabelKey)}</h4>}\n\n      <RadioToggle\n        name={name}\n        onCheck={onCheck}\n        options={options.map(build => ({\n          label: translate(optionLabelKey, build),\n          value: build\n        }))}\n        value={checked}\n      />\n    </div>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { createProject, deleteProject } from '../../../api/components';\nimport { DeleteButton, SubmitButton } from '../../../components/ui/buttons';\nimport { translate } from '../../../helpers/l10n';\n\ninterface Props {\n  onDelete: VoidFunction;\n  onDone: (projectKey: string) => void;\n  organization?: string;\n  projectKey?: string;\n}\n\ninterface State {\n  done: boolean;\n  loading: boolean;\n  projectKey: string;\n}\n\nexport default class NewProjectForm extends React.PureComponent<Props, State> {\n  mounted = false;\n\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      done: props.projectKey != null,\n      loading: false,\n      projectKey: props.projectKey || ''\n    };\n  }\n\n  componentDidMount() {\n    this.mounted = true;\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  stopLoading = () => {\n    if (this.mounted) {\n      this.setState({ loading: false });\n    }\n  };\n\n  sanitizeProjectKey = (projectKey: string) => projectKey.replace(/[^-_a-zA-Z0-9.:]/, '');\n\n  handleProjectKeyChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    this.setState({ projectKey: this.sanitizeProjectKey(event.target.value) });\n  };\n\n  handleProjectCreate = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    const { projectKey } = this.state;\n    const data: {\n      name: string;\n      project: string;\n      organization?: string;\n    } = {\n      name: projectKey,\n      project: projectKey\n    };\n    if (this.props.organization) {\n      data.organization = this.props.organization;\n    }\n    this.setState({ loading: true });\n    createProject(data).then(() => {\n      if (this.mounted) {\n        this.setState({ done: true, loading: false });\n        this.props.onDone(projectKey);\n      }\n    }, this.stopLoading);\n  };\n\n  handleProjectDelete = () => {\n    const { projectKey } = this.state;\n    this.setState({ loading: true });\n    deleteProject(projectKey).then(() => {\n      if (this.mounted) {\n        this.setState({ done: false, loading: false, projectKey: '' });\n        this.props.onDelete();\n      }\n    }, this.stopLoading);\n  };\n\n  render() {\n    const { done, loading, projectKey } = this.state;\n\n    const valid = projectKey.length > 0;\n\n    const form = done ? (\n      <div>\n        <span className=\"spacer-right text-middle\">{projectKey}</span>\n        {loading ? (\n          <i className=\"spinner text-middle\" />\n        ) : (\n          <DeleteButton className=\"button-small text-middle\" onClick={this.handleProjectDelete} />\n        )}\n      </div>\n    ) : (\n      <form onSubmit={this.handleProjectCreate}>\n        <input\n          autoFocus={true}\n          className=\"input-large spacer-right text-middle\"\n          maxLength={400}\n          minLength={1}\n          onChange={this.handleProjectKeyChange}\n          required={true}\n          type=\"text\"\n          value={projectKey}\n        />\n        {loading ? (\n          <i className=\"spinner text-middle\" />\n        ) : (\n          <SubmitButton className=\"text-middle\" disabled={!valid}>\n            {translate('Done')}\n          </SubmitButton>\n        )}\n        <div className=\"note spacer-top abs-width-300\">\n          {translate('onboarding.project_key_requirement')}\n        </div>\n      </form>\n    );\n\n    return (\n      <div className=\"big-spacer-top\">\n        <h4 className=\"spacer-bottom\">{translate('onboarding.language.project_key')}</h4>\n        {form}\n      </div>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nexport interface LanguageConfig {\n  language?: string;\n  javaBuild?: string;\n  cFamilyCompiler?: string;\n  os?: string;\n  projectKey?: string;\n}\n\nexport interface StepProps {\n  component?: T.Component;\n  finished?: boolean;\n  hasStepAfter?: (hasStepAfter: boolean) => void;\n  onContinue: VoidFunction;\n  onOpen: VoidFunction;\n  open: boolean;\n  organization?: string;\n  stepNumber: number;\n  token?: string;\n}\n\nexport function isLanguageConfigured(config?: LanguageConfig) {\n  if (!config) {\n    return false;\n  }\n  const { language, javaBuild, cFamilyCompiler, os, projectKey } = config;\n  const isJavaConfigured = language === 'java' && javaBuild != null;\n  const isDotNetConfigured = language === 'dotnet' && projectKey != null;\n  const isCFamilyConfigured =\n    language === 'c-family' && (cFamilyCompiler === 'msvc' || os != null) && projectKey != null;\n  const isOtherConfigured = language === 'other' && projectKey != null;\n\n  return isJavaConfigured || isDotNetConfigured || isCFamilyConfigured || isOtherConfigured;\n}\n\nexport function quote(os: string): (s: string) => string {\n  return os === 'win' ? (s: string) => `\"${s}\"` : (s: string) => s;\n}\n\nexport function getUniqueTokenName(tokens: T.UserToken[], initialTokenName = '') {\n  const hasToken = (name: string) => tokens.find(token => token.name === name) !== undefined;\n\n  if (!hasToken(initialTokenName)) {\n    return initialTokenName;\n  }\n\n  let i = 1;\n  while (hasToken(`${initialTokenName} ${i}`)) {\n    i++;\n  }\n  return `${initialTokenName} ${i}`;\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { RenderOptions } from './RenderOptions';\nimport NewProjectForm from './NewProjectForm';\nimport RadioToggle from '../../../components/controls/RadioToggle';\nimport { translate } from '../../../helpers/l10n';\nimport { isSonarCloud } from '../../../helpers/system';\nimport { isLanguageConfigured, LanguageConfig } from '../utils';\n\ninterface Props {\n  component?: T.Component;\n  config?: LanguageConfig;\n  onDone: (config: LanguageConfig) => void;\n  onReset: VoidFunction;\n  organization?: string;\n}\n\ntype State = LanguageConfig;\n\nexport interface RenderOSProps {\n  os: string | undefined;\n  setOS: (os: string) => void;\n}\nexport function RenderOS(props: RenderOSProps) {\n  return (\n    <RenderOptions\n      checked={props.os}\n      name=\"os\"\n      onCheck={props.setOS}\n      optionLabelKey={'onboarding.language.os'}\n      options={['linux', 'win', 'mac']}\n      titleLabelKey={'onboarding.language.os'}\n    />\n  );\n}\n\nexport default class LanguageForm extends React.PureComponent<Props, State> {\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      ...(this.props.config || {}),\n      projectKey: props.component ? props.component.key : undefined\n    };\n  }\n\n  handleChange = () => {\n    if (isLanguageConfigured(this.state)) {\n      this.props.onDone(this.state);\n    } else {\n      this.props.onReset();\n    }\n  };\n\n  handleLanguageChange = (language: string) => {\n    this.setState({ language }, this.handleChange);\n  };\n\n  handleJavaBuildChange = (javaBuild: string) => {\n    this.setState({ javaBuild }, this.handleChange);\n  };\n\n  handleCFamilyCompilerChange = (cFamilyCompiler: string) => {\n    this.setState({ cFamilyCompiler }, this.handleChange);\n  };\n\n  handleOSChange = (os: string) => {\n    this.setState({ os }, this.handleChange);\n  };\n\n  handleProjectKeyDone = (projectKey: string) => {\n    this.setState({ projectKey }, this.handleChange);\n  };\n\n  handleProjectKeyDelete = () => {\n    this.setState({ projectKey: undefined }, this.handleChange);\n  };\n\n  renderJavaBuild = () => (\n    <RenderOptions\n      checked={this.state.javaBuild}\n      name=\"java-build\"\n      onCheck={this.handleJavaBuildChange}\n      optionLabelKey=\"onboarding.language.java.build_technology\"\n      options={['maven', 'gradle']}\n      titleLabelKey=\"onboarding.language.java.build_technology\"\n    />\n  );\n\n  renderCFamilyCompiler = () => (\n    <RenderOptions\n      checked={this.state.cFamilyCompiler}\n      name=\"c-family-compiler\"\n      onCheck={this.handleCFamilyCompilerChange}\n      optionLabelKey={'onboarding.language.c-family.compiler'}\n      options={['msvc', 'clang-gcc']}\n      titleLabelKey={'onboarding.language.c-family.compiler'}\n    />\n  );\n\n  renderProjectKey = () => {\n    const { cFamilyCompiler, language, os } = this.state;\n    const needProjectKey =\n      language === 'dotnet' ||\n      (language === 'c-family' &&\n        (cFamilyCompiler === 'msvc' || (cFamilyCompiler === 'clang-gcc' && os !== undefined))) ||\n      (language === 'other' && os !== undefined);\n\n    if (!needProjectKey || this.props.component) {\n      return null;\n    }\n\n    return (\n      <NewProjectForm\n        onDelete={this.handleProjectKeyDelete}\n        onDone={this.handleProjectKeyDone}\n        organization={this.props.organization}\n        projectKey={this.state.projectKey}\n      />\n    );\n  };\n\n  render() {\n    const { cFamilyCompiler, language } = this.state;\n    const languages = isSonarCloud()\n      ? ['java', 'dotnet', 'c-family', 'other']\n      : ['java', 'dotnet', 'other'];\n\n    return (\n      <>\n        <div>\n          <h4 className=\"spacer-bottom\">{translate('onboarding.language')}</h4>\n          <RadioToggle\n            name=\"language\"\n            onCheck={this.handleLanguageChange}\n            options={languages.map(language => ({\n              label: translate('onboarding.language', language),\n              value: language\n            }))}\n            value={language}\n          />\n        </div>\n        {language === 'java' && this.renderJavaBuild()}\n        {language === 'c-family' && this.renderCFamilyCompiler()}\n        {((language === 'c-family' && cFamilyCompiler === 'clang-gcc') || language === 'other') && (\n          <RenderOS os={this.state.os} setOS={this.handleOSChange} />\n        )}\n        {this.renderProjectKey()}\n      </>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport CodeSnippet from '../../../../components/common/CodeSnippet';\nimport InstanceMessage from '../../../../components/common/InstanceMessage';\nimport { translate } from '../../../../helpers/l10n';\n\nexport interface Props {\n  host: string;\n  organization?: string;\n  projectKey?: string;\n  token: string;\n}\n\nexport default function JavaMaven(props: Props) {\n  const command = [\n    'mvn sonar:sonar',\n    props.projectKey && `-Dsonar.projectKey=${props.projectKey}`,\n    props.organization && `-Dsonar.organization=${props.organization}`,\n    `-Dsonar.host.url=${props.host}`,\n    `-Dsonar.login=${props.token}`\n  ];\n\n  return (\n    <div>\n      <h4 className=\"spacer-bottom\">{translate('onboarding.analysis.java.maven.header')}</h4>\n      <p className=\"spacer-bottom markdown\">\n        <InstanceMessage message={translate('onboarding.analysis.java.maven.text')} />\n      </p>\n      <CodeSnippet snippet={command} />\n      <p className=\"big-spacer-top markdown\">\n        <FormattedMessage\n          defaultMessage={translate('onboarding.analysis.docs')}\n          id=\"onboarding.analysis.docs\"\n          values={{\n            link: (\n              <a\n                href=\"http://redirect.sonarsource.com/doc/install-configure-scanner-maven.html\"\n                rel=\"noopener noreferrer\"\n                target=\"_blank\">\n                {translate('onboarding.analysis.java.maven.docs_link')}\n              </a>\n            )\n          }}\n        />\n      </p>\n      <p className=\"big-spacer-top markdown\">\n        {props.projectKey\n          ? translate('onboarding.analysis.auto_refresh_after_analysis')\n          : translate('onboarding.analysis.browse_url_after_analysis')}\n      </p>\n    </div>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport CodeSnippet from '../../../../components/common/CodeSnippet';\nimport InstanceMessage from '../../../../components/common/InstanceMessage';\nimport { translate } from '../../../../helpers/l10n';\n\nexport interface Props {\n  host: string;\n  organization?: string;\n  projectKey?: string;\n  token: string;\n}\n\nexport default function JavaGradle(props: Props) {\n  const config = 'plugins {\\n  id \"org.sonarqube\" version \"2.7\"\\n}';\n\n  const command = [\n    './gradlew sonarqube',\n    props.projectKey && `-Dsonar.projectKey=${props.projectKey}`,\n    props.organization && `-Dsonar.organization=${props.organization}`,\n    `-Dsonar.host.url=${props.host}`,\n    `-Dsonar.login=${props.token}`\n  ];\n\n  return (\n    <div>\n      <h4 className=\"spacer-bottom\">{translate('onboarding.analysis.java.gradle.header')}</h4>\n      <InstanceMessage message={translate('onboarding.analysis.java.gradle.text.1')}>\n        {transformedMessage => (\n          <p className=\"spacer-bottom markdown\">\n            <FormattedMessage\n              defaultMessage={transformedMessage}\n              id=\"onboarding.analysis.java.gradle.text.1\"\n              values={{\n                plugin_code: <code>org.sonarqube</code>,\n                filename: <code>build.gradle</code>\n              }}\n            />\n          </p>\n        )}\n      </InstanceMessage>\n      <CodeSnippet snippet={config} />\n      <p className=\"spacer-top spacer-bottom markdown\">\n        {translate('onboarding.analysis.java.gradle.text.2')}\n      </p>\n      <CodeSnippet snippet={command} />\n      <p className=\"big-spacer-top markdown\">\n        <FormattedMessage\n          defaultMessage={translate('onboarding.analysis.docs')}\n          id=\"onboarding.analysis.docs\"\n          values={{\n            link: (\n              <a\n                href=\"http://redirect.sonarsource.com/doc/gradle.html\"\n                rel=\"noopener noreferrer\"\n                target=\"_blank\">\n                {translate('onboarding.analysis.java.gradle.docs_link')}\n              </a>\n            )\n          }}\n        />\n      </p>\n      <p className=\"big-spacer-top markdown\">\n        {props.projectKey\n          ? translate('onboarding.analysis.auto_refresh_after_analysis')\n          : translate('onboarding.analysis.browse_url_after_analysis')}\n      </p>\n    </div>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport { translate } from '../../../../helpers/l10n';\n\ninterface Props {\n  className?: string;\n}\n\nexport default function MSBuildScanner(props: Props) {\n  return (\n    <div className={props.className}>\n      <h4 className=\"spacer-bottom\">{translate('onboarding.analysis.msbuild.header')}</h4>\n      <p className=\"spacer-bottom markdown\">\n        <FormattedMessage\n          defaultMessage={translate('onboarding.analysis.msbuild.text')}\n          id=\"onboarding.analysis.msbuild.text\"\n          values={{ code: <code>%PATH%</code> }}\n        />\n      </p>\n      <p>\n        <a\n          className=\"button\"\n          href=\"https://sonarcloud.io/documentation/analysis/scan/sonarscanner-for-msbuild/\"\n          rel=\"noopener noreferrer\"\n          target=\"_blank\">\n          {translate('download_verb')}\n        </a>\n      </p>\n    </div>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport MSBuildScanner from './MSBuildScanner';\nimport CodeSnippet from '../../../../components/common/CodeSnippet';\nimport InstanceMessage from '../../../../components/common/InstanceMessage';\nimport { translate } from '../../../../helpers/l10n';\n\nexport interface Props {\n  host: string;\n  organization?: string;\n  projectKey: string;\n  small?: boolean;\n  token: string;\n}\n\nexport default function DotNet(props: Props) {\n  const command1 = [\n    'SonarScanner.MSBuild.exe begin',\n    `/k:\"${props.projectKey}\"`,\n    props.organization && `/d:sonar.organization=\"${props.organization}\"`,\n    `/d:sonar.host.url=\"${props.host}\"`,\n    `/d:sonar.login=\"${props.token}\"`\n  ];\n\n  const command2 = 'MsBuild.exe /t:Rebuild';\n\n  const command3 = ['SonarScanner.MSBuild.exe end', `/d:sonar.login=\"${props.token}\"`];\n\n  return (\n    <div>\n      <MSBuildScanner />\n\n      <h4 className=\"huge-spacer-top spacer-bottom\">\n        {translate('onboarding.analysis.msbuild.execute')}\n      </h4>\n      <InstanceMessage message={translate('onboarding.analysis.msbuild.execute.text')}>\n        {transformedMessage => <p className=\"spacer-bottom markdown\">{transformedMessage}</p>}\n      </InstanceMessage>\n      <CodeSnippet isOneLine={true} snippet={command1} />\n      <CodeSnippet isOneLine={false} snippet={command2} />\n      <CodeSnippet isOneLine={props.small} snippet={command3} />\n      <p className=\"big-spacer-top markdown\">\n        <FormattedMessage\n          defaultMessage={translate('onboarding.analysis.docs')}\n          id=\"onboarding.analysis.docs\"\n          values={{\n            link: (\n              <a\n                href=\"http://redirect.sonarsource.com/doc/install-configure-scanner-msbuild.html\"\n                rel=\"noopener noreferrer\"\n                target=\"_blank\">\n                {translate('onboarding.analysis.msbuild.docs_link')}\n              </a>\n            )\n          }}\n        />\n      </p>\n    </div>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport { translate } from '../../../../helpers/l10n';\nimport { getBaseUrl } from '../../../../helpers/urls';\n\ninterface Props {\n  className?: string;\n  os: string;\n}\n\nconst filenames: T.Dict<string> = {\n  win: 'build-wrapper-win-x86.zip',\n  linux: 'build-wrapper-linux-x86.zip',\n  mac: 'build-wrapper-macosx-x86.zip'\n};\n\nexport default function BuildWrapper(props: Props) {\n  return (\n    <div className={props.className}>\n      <h4 className=\"spacer-bottom\">\n        {translate('onboarding.analysis.build_wrapper.header', props.os)}\n      </h4>\n      <p className=\"spacer-bottom markdown\">\n        <FormattedMessage\n          defaultMessage={translate('onboarding.analysis.build_wrapper.text')}\n          id=\"onboarding.analysis.build_wrapper.text\"\n          values={{\n            env_var: <code>{props.os === 'win' ? '%PATH%' : 'PATH'}</code>\n          }}\n        />\n      </p>\n      <p>\n        <a\n          className=\"button\"\n          download={filenames[props.os]}\n          href={`${getBaseUrl()}/static/cpp/${filenames[props.os]}`}\n          target=\"_blank\">\n          {translate('download_verb')}\n        </a>\n      </p>\n    </div>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport MSBuildScanner from './MSBuildScanner';\nimport BuildWrapper from './BuildWrapper';\nimport CodeSnippet from '../../../../components/common/CodeSnippet';\nimport InstanceMessage from '../../../../components/common/InstanceMessage';\nimport { translate } from '../../../../helpers/l10n';\n\ninterface Props {\n  host: string;\n  organization?: string;\n  projectKey: string;\n  small?: boolean;\n  token: string;\n}\n\nexport default function Msvc(props: Props) {\n  const command1 = [\n    'SonarQube.Scanner.MSBuild.exe begin',\n    `/k:\"${props.projectKey}\"`,\n    props.organization && `/d:sonar.organization=\"${props.organization}\"`,\n    '/d:sonar.cfamily.build-wrapper-output=bw-output',\n    `/d:sonar.host.url=\"${props.host}\"`,\n    `/d:sonar.login=\"${props.token}\"`\n  ];\n\n  const command2 = 'build-wrapper-win-x86-64.exe --out-dir bw-output MsBuild.exe /t:Rebuild';\n\n  const command3 = ['SonarQube.Scanner.MSBuild.exe end', `/d:sonar.login=\"${props.token}\"`];\n\n  return (\n    <div>\n      <MSBuildScanner />\n      <BuildWrapper className=\"huge-spacer-top\" os=\"win\" />\n\n      <h4 className=\"huge-spacer-top spacer-bottom\">\n        {translate('onboarding.analysis.msbuild.execute')}\n      </h4>\n      <InstanceMessage message={translate('onboarding.analysis.msbuild.execute.text')}>\n        {transformedMessage => <p className=\"spacer-bottom markdown\">{transformedMessage}</p>}\n      </InstanceMessage>\n      <CodeSnippet isOneLine={true} snippet={command1} />\n      <CodeSnippet isOneLine={props.small} snippet={command2} />\n      <CodeSnippet isOneLine={props.small} snippet={command3} />\n      <p className=\"big-spacer-top markdown\">\n        <FormattedMessage\n          defaultMessage={translate('onboarding.analysis.docs')}\n          id=\"onboarding.analysis.docs\"\n          values={{\n            link: (\n              <a\n                href=\"http://redirect.sonarsource.com/doc/install-configure-scanner-msbuild.html\"\n                rel=\"noopener noreferrer\"\n                target=\"_blank\">\n                {translate('onboarding.analysis.msbuild.docs_link')}\n              </a>\n            )\n          }}\n        />\n      </p>\n    </div>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport { translate } from '../../../../helpers/l10n';\n\ninterface Props {\n  className?: string;\n  os: string;\n}\n\nexport default function SQScanner(props: Props) {\n  return (\n    <div className={props.className}>\n      <h4 className=\"spacer-bottom\">\n        {translate('onboarding.analysis.sq_scanner.header', props.os)}\n      </h4>\n      <p className=\"spacer-bottom markdown\">\n        <FormattedMessage\n          defaultMessage={translate('onboarding.analysis.sq_scanner.text')}\n          id=\"onboarding.analysis.sq_scanner.text\"\n          values={{\n            dir: <code>bin</code>,\n            env_var: <code>{props.os === 'win' ? '%PATH%' : 'PATH'}</code>\n          }}\n        />\n      </p>\n      <p>\n        <a\n          className=\"button\"\n          href=\"http://redirect.sonarsource.com/doc/install-configure-scanner.html\"\n          rel=\"noopener noreferrer\"\n          target=\"_blank\">\n          {translate('download_verb')}\n        </a>\n      </p>\n    </div>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport SQScanner from './SQScanner';\nimport BuildWrapper from './BuildWrapper';\nimport CodeSnippet from '../../../../components/common/CodeSnippet';\nimport InstanceMessage from '../../../../components/common/InstanceMessage';\nimport { translate } from '../../../../helpers/l10n';\nimport { quote } from '../../utils';\n\nexport interface Props {\n  host: string;\n  os: string;\n  organization?: string;\n  projectKey: string;\n  small?: boolean;\n  token: string;\n}\n\nconst executables: T.Dict<string> = {\n  linux: 'build-wrapper-linux-x86-64',\n  win: 'build-wrapper-win-x86-64.exe',\n  mac: 'build-wrapper-macosx-x86'\n};\n\nexport default function ClangGCC(props: Props) {\n  const command1 = `${executables[props.os]} --out-dir bw-output make clean all`;\n\n  const q = quote(props.os);\n  const command2 = [\n    props.os === 'win' ? 'sonar-scanner.bat' : 'sonar-scanner',\n    '-D' + q(`sonar.projectKey=${props.projectKey}`),\n    props.organization && '-D' + q(`sonar.organization=${props.organization}`),\n    '-D' + q('sonar.sources=.'),\n    '-D' + q('sonar.cfamily.build-wrapper-output=bw-output'),\n    '-D' + q(`sonar.host.url=${props.host}`),\n    '-D' + q(`sonar.login=${props.token}`)\n  ];\n\n  return (\n    <div>\n      <SQScanner os={props.os} />\n      <BuildWrapper className=\"huge-spacer-top\" os={props.os} />\n\n      <h4 className=\"huge-spacer-top spacer-bottom\">\n        {translate('onboarding.analysis.sq_scanner.execute')}\n      </h4>\n      <InstanceMessage message={translate('onboarding.analysis.sq_scanner.execute.text')}>\n        {transformedMessage => <p className=\"spacer-bottom markdown\">{transformedMessage}</p>}\n      </InstanceMessage>\n      <CodeSnippet isOneLine={props.small} snippet={command1} />\n      <CodeSnippet isOneLine={props.os === 'win'} snippet={command2} />\n      <p className=\"big-spacer-top markdown\">\n        <FormattedMessage\n          defaultMessage={translate('onboarding.analysis.sq_scanner.docs')}\n          id=\"onboarding.analysis.sq_scanner.docs\"\n          values={{\n            link: (\n              <a\n                href=\"http://redirect.sonarsource.com/doc/install-configure-scanner.html\"\n                rel=\"noopener noreferrer\"\n                target=\"_blank\">\n                {translate('onboarding.analysis.sq_scanner.docs_link')}\n              </a>\n            )\n          }}\n        />\n      </p>\n    </div>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport SQScanner from './SQScanner';\nimport CodeSnippet from '../../../../components/common/CodeSnippet';\nimport InstanceMessage from '../../../../components/common/InstanceMessage';\nimport { translate } from '../../../../helpers/l10n';\nimport { quote } from '../../utils';\n\nexport interface Props {\n  host: string;\n  organization?: string;\n  os: string;\n  projectKey: string;\n  token: string;\n}\n\nexport default function Other(props: Props) {\n  const q = quote(props.os);\n  const command = [\n    props.os === 'win' ? 'sonar-scanner.bat' : 'sonar-scanner',\n    '-D' + q(`sonar.projectKey=${props.projectKey}`),\n    props.organization && '-D' + q(`sonar.organization=${props.organization}`),\n    '-D' + q('sonar.sources=.'),\n    '-D' + q(`sonar.host.url=${props.host}`),\n    '-D' + q(`sonar.login=${props.token}`)\n  ];\n\n  return (\n    <div>\n      <SQScanner os={props.os} />\n\n      <h4 className=\"huge-spacer-top spacer-bottom\">\n        {translate('onboarding.analysis.sq_scanner.execute')}\n      </h4>\n      <InstanceMessage message={translate('onboarding.analysis.sq_scanner.execute.text')}>\n        {transformedMessage => <p className=\"spacer-bottom markdown\">{transformedMessage}</p>}\n      </InstanceMessage>\n      <CodeSnippet isOneLine={props.os === 'win'} snippet={command} />\n      <p className=\"big-spacer-top markdown\">\n        <FormattedMessage\n          defaultMessage={translate('onboarding.analysis.sq_scanner.docs')}\n          id=\"onboarding.analysis.sq_scanner.docs\"\n          values={{\n            link: (\n              <a\n                href=\"http://redirect.sonarsource.com/doc/install-configure-scanner.html\"\n                rel=\"noopener noreferrer\"\n                target=\"_blank\">\n                {translate('onboarding.analysis.sq_scanner.docs_link')}\n              </a>\n            )\n          }}\n        />\n      </p>\n    </div>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport JavaMaven from './JavaMaven';\nimport JavaGradle from './JavaGradle';\nimport DotNet from './DotNet';\nimport Msvc from './Msvc';\nimport ClangGCC from './ClangGCC';\nimport Other from './Other';\nimport { getHostUrl } from '../../../../helpers/urls';\nimport { LanguageConfig } from '../../utils';\nimport { getProjectKey } from '../ProjectAnalysisStep';\n\ninterface Props {\n  component?: T.Component;\n  organization?: string;\n  languageConfig: LanguageConfig;\n  small?: boolean;\n  token?: string;\n}\n\nexport default class AnalysisCommand extends React.PureComponent<Props> {\n  renderCommandForMaven = () => {\n    const { component, token } = this.props;\n    if (!token) {\n      return null;\n    }\n    return (\n      <JavaMaven\n        host={getHostUrl()}\n        organization={this.props.organization}\n        projectKey={component && component.key}\n        token={token}\n      />\n    );\n  };\n\n  renderCommandForGradle = () => {\n    const { component, token } = this.props;\n    if (!token) {\n      return null;\n    }\n    return (\n      <JavaGradle\n        host={getHostUrl()}\n        organization={this.props.organization}\n        projectKey={component && component.key}\n        token={token}\n      />\n    );\n  };\n\n  renderCommandForDotNet = () => {\n    const { component, languageConfig, small, token } = this.props;\n    const projectKey = getProjectKey(languageConfig, component);\n    if (!projectKey || !token) {\n      return null;\n    }\n    return (\n      <DotNet\n        host={getHostUrl()}\n        organization={this.props.organization}\n        projectKey={projectKey}\n        small={small}\n        token={token}\n      />\n    );\n  };\n\n  renderCommandForMSVC = () => {\n    const { component, languageConfig, small, token } = this.props;\n    const projectKey = getProjectKey(languageConfig, component);\n    if (!projectKey || !token) {\n      return null;\n    }\n    return (\n      <Msvc\n        host={getHostUrl()}\n        organization={this.props.organization}\n        projectKey={projectKey}\n        small={small}\n        token={token}\n      />\n    );\n  };\n\n  renderCommandForClangGCC = () => {\n    const { component, languageConfig, small, token } = this.props;\n    const projectKey = getProjectKey(languageConfig, component);\n    if (!languageConfig || !projectKey || !languageConfig.os || !token) {\n      return null;\n    }\n    return (\n      <ClangGCC\n        host={getHostUrl()}\n        organization={this.props.organization}\n        os={languageConfig.os}\n        projectKey={projectKey}\n        small={small}\n        token={token}\n      />\n    );\n  };\n\n  renderCommandForOther = () => {\n    const { component, languageConfig, token } = this.props;\n    const projectKey = getProjectKey(languageConfig, component);\n    if (!languageConfig || !projectKey || !languageConfig.os || !token) {\n      return null;\n    }\n    return (\n      <Other\n        host={getHostUrl()}\n        organization={this.props.organization}\n        os={languageConfig.os}\n        projectKey={projectKey}\n        token={token}\n      />\n    );\n  };\n\n  render() {\n    const { languageConfig } = this.props;\n\n    if (languageConfig.language === 'java') {\n      return languageConfig.javaBuild === 'maven'\n        ? this.renderCommandForMaven()\n        : this.renderCommandForGradle();\n    } else if (languageConfig.language === 'dotnet') {\n      return this.renderCommandForDotNet();\n    } else if (languageConfig.language === 'c-family') {\n      return languageConfig.cFamilyCompiler === 'msvc'\n        ? this.renderCommandForMSVC()\n        : this.renderCommandForClangGCC();\n    } else {\n      return this.renderCommandForOther();\n    }\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport Step from './Step';\nimport LanguageForm from './LanguageForm';\nimport AnalysisCommand from './commands/AnalysisCommand';\nimport { translate } from '../../../helpers/l10n';\nimport { LanguageConfig } from '../utils';\n\ninterface Props {\n  component?: T.Component;\n  displayRowLayout?: boolean;\n  onFinish?: (projectKey?: string) => void;\n  onReset?: VoidFunction;\n  open: boolean;\n  organization?: string;\n  stepNumber: number;\n  token?: string;\n}\n\ninterface State {\n  config?: LanguageConfig;\n}\n\nexport function getProjectKey(config?: LanguageConfig, component?: T.Component) {\n  return (component && component.key) || (config && config.projectKey);\n}\n\nexport default class ProjectAnalysisStep extends React.PureComponent<Props, State> {\n  state: State = {};\n\n  handleLanguageSelect = (config: LanguageConfig) => {\n    this.setState({ config });\n    if (this.props.onFinish) {\n      const projectKey = config.language !== 'java' ? getProjectKey(config) : undefined;\n      this.props.onFinish(projectKey);\n    }\n  };\n\n  handleLanguageReset = () => {\n    this.setState({ config: undefined });\n    if (this.props.onReset) {\n      this.props.onReset();\n    }\n  };\n\n  renderForm = () => {\n    const languageComponent = (\n      <LanguageForm\n        component={this.props.component}\n        onDone={this.handleLanguageSelect}\n        onReset={this.handleLanguageReset}\n        organization={this.props.organization}\n      />\n    );\n    const analysisComponent = this.state.config && (\n      <AnalysisCommand\n        component={this.props.component}\n        languageConfig={this.state.config}\n        organization={this.props.organization}\n        small={true}\n        token={this.props.token}\n      />\n    );\n\n    if (this.props.displayRowLayout) {\n      return (\n        <div className=\"boxed-group-inner\">\n          <div className=\"display-flex-column\">\n            {languageComponent}\n            {analysisComponent && <div className=\"huge-spacer-top\">{analysisComponent}</div>}\n          </div>\n        </div>\n      );\n    }\n\n    return (\n      <div className=\"boxed-group-inner\">\n        <div className=\"flex-columns\">\n          <div className=\"flex-column flex-column-half bordered-right\">{languageComponent}</div>\n          <div className=\"flex-column flex-column-half\">{analysisComponent}</div>\n        </div>\n      </div>\n    );\n  };\n\n  renderResult = () => null;\n\n  render() {\n    return (\n      <Step\n        finished={false}\n        onOpen={() => {}}\n        open={this.props.open}\n        renderForm={this.renderForm}\n        renderResult={this.renderResult}\n        stepNumber={this.props.stepNumber}\n        stepTitle={translate('onboarding.analysis.header')}\n      />\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport AnalyzeTutorialSuggestion from './AnalyzeTutorialSuggestion';\nimport ProjectAnalysisStep from '../components/ProjectAnalysisStep';\nimport TokenStep from '../components/TokenStep';\nimport { isVSTS } from '../../../helpers/almIntegrations';\nimport { translate } from '../../../helpers/l10n';\nimport InstanceMessage from '../../../components/common/InstanceMessage';\nimport { isSonarCloud } from '../../../helpers/system';\nimport '../styles.css';\n\nexport enum Steps {\n  ANALYSIS,\n  TOKEN\n}\n\ninterface Props {\n  component: T.Component;\n  currentUser: T.LoggedInUser;\n}\n\ninterface State {\n  step: Steps;\n  token?: string;\n}\n\nexport default class AnalyzeTutorial extends React.PureComponent<Props, State> {\n  state: State = { step: Steps.TOKEN };\n\n  handleTokenDone = (token: string) => {\n    this.setState({ step: Steps.ANALYSIS, token });\n  };\n\n  handleTokenOpen = () => {\n    this.setState({ step: Steps.TOKEN });\n  };\n\n  render() {\n    const { component, currentUser } = this.props;\n    const { step, token } = this.state;\n\n    const almKey = (component.alm && component.alm.key) || currentUser.externalProvider;\n    return (\n      <>\n        <div className=\"page-header big-spacer-bottom\">\n          <h1 className=\"page-title\">{translate('onboarding.project_analysis.header')}</h1>\n          <p className=\"page-description\">\n            <InstanceMessage message={translate('onboarding.project_analysis.description')} />\n          </p>\n        </div>\n\n        {isSonarCloud() && <AnalyzeTutorialSuggestion almKey={almKey} />}\n\n        {!isVSTS(almKey) && (\n          <>\n            <TokenStep\n              currentUser={currentUser}\n              finished={Boolean(this.state.token)}\n              initialTokenName={`Analyze \"${component.name}\"`}\n              onContinue={this.handleTokenDone}\n              onOpen={this.handleTokenOpen}\n              open={step === Steps.TOKEN}\n              stepNumber={1}\n            />\n\n            <ProjectAnalysisStep\n              component={component}\n              displayRowLayout={true}\n              open={step === Steps.ANALYSIS}\n              organization={isSonarCloud() ? component.organization : undefined}\n              stepNumber={2}\n              token={token}\n            />\n          </>\n        )}\n      </>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport { Link } from 'react-router';\nimport * as classNames from 'classnames';\nimport Step from './Step';\nimport AlertErrorIcon from '../../../components/icons-components/AlertErrorIcon';\nimport AlertSuccessIcon from '../../../components/icons-components/AlertSuccessIcon';\nimport { DeleteButton, SubmitButton, Button } from '../../../components/ui/buttons';\nimport { getTokens, generateToken, revokeToken } from '../../../api/user-tokens';\nimport { translate } from '../../../helpers/l10n';\nimport { getUniqueTokenName } from '../utils';\n\ninterface Props {\n  currentUser: Pick<T.LoggedInUser, 'login'>;\n  finished: boolean;\n  initialTokenName?: string;\n  open: boolean;\n  onContinue: (token: string) => void;\n  onOpen: VoidFunction;\n  stepNumber: number;\n}\n\ninterface State {\n  existingToken: string;\n  loading: boolean;\n  selection: string;\n  tokenName?: string;\n  token?: string;\n  tokens?: T.UserToken[];\n}\n\nexport default class TokenStep extends React.PureComponent<Props, State> {\n  mounted = false;\n\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      existingToken: '',\n      loading: false,\n      selection: 'generate',\n      tokenName: props.initialTokenName\n    };\n  }\n\n  componentDidMount() {\n    this.mounted = true;\n    getTokens(this.props.currentUser.login).then(\n      tokens => {\n        if (this.mounted) {\n          this.setState({ tokens });\n          if (\n            this.props.initialTokenName !== undefined &&\n            this.props.initialTokenName === this.state.tokenName\n          ) {\n            this.setState({ tokenName: getUniqueTokenName(tokens) });\n          }\n        }\n      },\n      () => {}\n    );\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  getToken = () =>\n    this.state.selection === 'generate' ? this.state.token : this.state.existingToken;\n\n  canContinue = () => {\n    const { existingToken, selection, token } = this.state;\n    const validExistingToken = existingToken.match(/^[a-z0-9]+$/) != null;\n    return (\n      (selection === 'generate' && token != null) ||\n      (selection === 'use-existing' && existingToken && validExistingToken)\n    );\n  };\n\n  handleTokenNameChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    this.setState({ tokenName: event.target.value });\n  };\n\n  handleTokenGenerate = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    const { tokenName } = this.state;\n    if (tokenName) {\n      this.setState({ loading: true });\n      generateToken({ name: tokenName }).then(({ token }) => {\n        if (this.mounted) {\n          this.setState({ loading: false, token });\n        }\n      }, this.stopLoading);\n    }\n  };\n\n  handleTokenRevoke = () => {\n    const { tokenName } = this.state;\n    if (tokenName) {\n      this.setState({ loading: true });\n      revokeToken({ name: tokenName }).then(() => {\n        if (this.mounted) {\n          this.setState({ loading: false, token: undefined, tokenName: undefined });\n        }\n      }, this.stopLoading);\n    }\n  };\n\n  handleContinueClick = () => {\n    const token = this.getToken();\n    if (token) {\n      this.props.onContinue(token);\n    }\n  };\n\n  handleGenerateClick = (event: React.MouseEvent<HTMLAnchorElement>) => {\n    event.preventDefault();\n    this.setState({ selection: 'generate' });\n  };\n\n  handleUseExistingClick = (event: React.MouseEvent<HTMLAnchorElement>) => {\n    event.preventDefault();\n    this.setState({ selection: 'use-existing' });\n  };\n\n  handleExisingTokenChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    this.setState({ existingToken: event.currentTarget.value });\n  };\n\n  stopLoading = () => {\n    if (this.mounted) {\n      this.setState({ loading: false });\n    }\n  };\n\n  renderGenerateOption = () => (\n    <div>\n      {this.state.tokens !== undefined && this.state.tokens.length > 0 ? (\n        <a\n          className=\"js-new link-base-color link-no-underline\"\n          href=\"#\"\n          onClick={this.handleGenerateClick}>\n          <i\n            className={classNames('icon-radio', 'spacer-right', {\n              'is-checked': this.state.selection === 'generate'\n            })}\n          />\n          {translate('onboarding.token.generate_token')}\n        </a>\n      ) : (\n        translate('onboarding.token.generate_token')\n      )}\n      {this.state.selection === 'generate' && (\n        <div className=\"big-spacer-top\">\n          <form onSubmit={this.handleTokenGenerate}>\n            <input\n              autoFocus={true}\n              className=\"input-super-large spacer-right text-middle\"\n              onChange={this.handleTokenNameChange}\n              placeholder={translate('onboarding.token.generate_token.placeholder')}\n              required={true}\n              type=\"text\"\n              value={this.state.tokenName || ''}\n            />\n            {this.state.loading ? (\n              <i className=\"spinner text-middle\" />\n            ) : (\n              <SubmitButton className=\"text-middle\" disabled={!this.state.tokenName}>\n                {translate('onboarding.token.generate')}\n              </SubmitButton>\n            )}\n          </form>\n        </div>\n      )}\n    </div>\n  );\n\n  renderUseExistingOption = () => {\n    const { existingToken } = this.state;\n    const validInput = !existingToken || existingToken.match(/^[a-z0-9]+$/) != null;\n\n    return (\n      <div className=\"big-spacer-top\">\n        <a\n          className=\"js-new link-base-color link-no-underline\"\n          href=\"#\"\n          onClick={this.handleUseExistingClick}>\n          <i\n            className={classNames('icon-radio', 'spacer-right', {\n              'is-checked': this.state.selection === 'use-existing'\n            })}\n          />\n          {translate('onboarding.token.use_existing_token')}\n        </a>\n        {this.state.selection === 'use-existing' && (\n          <div className=\"big-spacer-top\">\n            <input\n              autoFocus={true}\n              className=\"input-super-large spacer-right text-middle\"\n              onChange={this.handleExisingTokenChange}\n              placeholder={translate('onboarding.token.use_existing_token.placeholder')}\n              required={true}\n              type=\"text\"\n              value={this.state.existingToken}\n            />\n            {!validInput && (\n              <span className=\"text-danger\">\n                <AlertErrorIcon className=\"little-spacer-right text-text-top\" />\n                {translate('onboarding.token.invalid_format')}\n              </span>\n            )}\n          </div>\n        )}\n      </div>\n    );\n  };\n\n  renderForm = () => {\n    const { loading, token, tokenName, tokens } = this.state;\n    const canUseExisting = tokens !== undefined && tokens.length > 0;\n\n    return (\n      <div className=\"boxed-group-inner\">\n        {token != null ? (\n          <form onSubmit={this.handleTokenRevoke}>\n            <span className=\"text-middle\">\n              {tokenName}\n              {': '}\n            </span>\n            <strong className=\"spacer-right text-middle\">{token}</strong>\n            {loading ? (\n              <i className=\"spinner text-middle\" />\n            ) : (\n              <DeleteButton className=\"button-small text-middle\" onClick={this.handleTokenRevoke} />\n            )}\n          </form>\n        ) : (\n          <div>\n            {this.renderGenerateOption()}\n            {canUseExisting && this.renderUseExistingOption()}\n          </div>\n        )}\n\n        <div className=\"note big-spacer-top width-50\">\n          <FormattedMessage\n            defaultMessage={translate('onboarding.token.text')}\n            id=\"onboarding.token.text\"\n            values={{\n              link: (\n                <Link target=\"_blank\" to=\"/account/security\">\n                  {translate('onboarding.token.text.user_account')}\n                </Link>\n              )\n            }}\n          />\n        </div>\n\n        {this.canContinue() && (\n          <div className=\"big-spacer-top\">\n            <Button className=\"js-continue\" onClick={this.handleContinueClick}>\n              {translate('continue')}\n            </Button>\n          </div>\n        )}\n      </div>\n    );\n  };\n\n  renderResult = () => {\n    const { selection, tokenName } = this.state;\n    const token = this.getToken();\n\n    if (!token) {\n      return null;\n    }\n\n    return (\n      <div className=\"boxed-group-actions display-flex-center\">\n        <AlertSuccessIcon className=\"spacer-right\" />\n        {selection === 'generate' && tokenName && `${tokenName}: `}\n        <strong>{token}</strong>\n      </div>\n    );\n  };\n\n  render() {\n    return (\n      <Step\n        finished={this.props.finished}\n        onOpen={this.props.onOpen}\n        open={this.props.open}\n        renderForm={this.renderForm}\n        renderResult={this.renderResult}\n        stepNumber={this.props.stepNumber}\n        stepTitle={translate('onboarding.token.header')}\n      />\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport { Alert } from '../../../../components/ui/Alert';\nimport DocTooltip from '../../../../components/docs/DocTooltip';\nimport { translate } from '../../../../helpers/l10n';\n\nconst caveats = {\n  default: `\nNo visual feedback (yet) in the UI.  \nOnly Pull Requests from the same repository are analyzed.  \nNot supported: code coverage, import of external rule engine reports.\n\n---\n\n[Read more](https://sonarcloud.io/documentation/autoscan/) and join [the forum](https://community.sonarsource.com/tags/c/help/sc/autoscan) to ask your questions\n`\n};\n\nconst limitedScope = {\n  default: `\nThe following languages are currently supported:\n\nABAP, Apex, CSS, Flex, Go, HTML, JS, Kotlin, PHP, Python, Ruby, Scala, Swift, TypeScript, TSQL, XML.\n`\n};\n\nexport function AutoScanAlert() {\n  return (\n    <Alert className=\"big-spacer-top\" variant=\"info\">\n      <div>\n        <FormattedMessage\n          defaultMessage={translate('onboarding.analysis.with.autoscan.alert')}\n          id=\"onboarding.analysis.with.autoscan.alert\"\n          values={{\n            caveats: (\n              <>\n                <strong>{translate('onboarding.analysis.with.autoscan.alert.caveats')}</strong>{' '}\n                <DocTooltip doc={Promise.resolve(caveats)} />\n              </>\n            ),\n            scopes: (\n              <>\n                <strong>{translate('onboarding.analysis.with.autoscan.alert.scopes')}</strong>{' '}\n                <DocTooltip doc={Promise.resolve(limitedScope)} />\n              </>\n            )\n          }}\n        />\n      </div>\n    </Alert>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport { Link } from 'react-router';\nimport { generateToken, getTokens, revokeToken } from '../../../../api/user-tokens';\nimport { getUniqueTokenName } from '../../utils';\nimport { translate, translateWithParameters } from '../../../../helpers/l10n';\nimport ConfirmModal from '../../../../components/controls/ConfirmModal';\nimport { Button, DeleteButton } from '../../../../components/ui/buttons';\nimport { RenderOptions } from '../../components/RenderOptions';\nimport { Alert } from '../../../../components/ui/Alert';\n\nexport enum TokenMode {\n  use_existing_token = 'use_existing_token',\n  generate_token = 'generate_token'\n}\n\ninterface State {\n  existingToken?: string;\n  mode: TokenMode;\n  token?: string;\n  tokenName: string;\n}\n\ninterface Props {\n  component: T.Component;\n  currentUser: T.LoggedInUser;\n  onClose: VoidFunction;\n  onSave: (token: string) => void;\n}\n\nexport default class EditTokenModal extends React.PureComponent<Props, State> {\n  mounted = false;\n  initialTokenName = '';\n  state = {\n    mode: TokenMode.use_existing_token,\n    existingToken: '',\n    token: '',\n    tokenName: ''\n  };\n\n  componentDidMount() {\n    this.mounted = true;\n    const { component } = this.props;\n    this.initialTokenName = `Analyze \"${component.name}\"`;\n    this.getTokensAndName();\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  getTokensAndName = () => {\n    const { currentUser } = this.props;\n\n    getTokens(currentUser.login).then(\n      t => {\n        if (this.mounted) {\n          this.setState({ tokenName: getUniqueTokenName(t, this.initialTokenName) });\n        }\n      },\n      () => {}\n    );\n  };\n\n  getNewToken = () => {\n    const { tokenName = this.initialTokenName } = this.state;\n\n    generateToken({ name: tokenName }).then(\n      ({ token }: { token: string }) => {\n        if (this.mounted) {\n          this.setState({\n            token,\n            tokenName\n          });\n        }\n      },\n      () => {}\n    );\n  };\n\n  handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    if (this.mounted) {\n      this.setState({\n        tokenName: event.target.value\n      });\n    }\n  };\n\n  handleTokenRevoke = () => {\n    const { tokenName } = this.state;\n\n    if (tokenName) {\n      revokeToken({ name: tokenName }).then(\n        () => {\n          if (this.mounted) {\n            this.setState({\n              mode: TokenMode.use_existing_token,\n              token: '',\n              tokenName: ''\n            });\n          }\n        },\n        () => {}\n      );\n    }\n  };\n\n  setExistingToken = (event: React.ChangeEvent<HTMLInputElement>) => {\n    if (this.mounted) {\n      this.setState({\n        existingToken: event.target.value\n      });\n    }\n  };\n\n  setMode = (mode: TokenMode) => {\n    this.setState({ mode });\n  };\n\n  render() {\n    const { onClose, onSave } = this.props;\n    const { existingToken, mode, token, tokenName } = this.state;\n\n    const header = translate('onboarding.token.header');\n\n    const isConfirmEnabled =\n      (mode === TokenMode.generate_token && token) ||\n      (mode === TokenMode.use_existing_token && existingToken);\n\n    const onConfirm = () => {\n      if (mode === TokenMode.generate_token && token) {\n        onSave(token);\n      } else if (mode === TokenMode.use_existing_token && existingToken) {\n        onSave(existingToken);\n      }\n    };\n\n    return (\n      <ConfirmModal\n        confirmButtonText={translate('save')}\n        confirmDisable={!isConfirmEnabled}\n        header={header}\n        onClose={onClose}\n        onConfirm={onConfirm}>\n        <p className=\"spacer-bottom\">\n          <FormattedMessage\n            defaultMessage={translate('onboarding.token.text')}\n            id=\"onboarding.token.text\"\n            values={{\n              link: (\n                <Link target=\"_blank\" to=\"/account/security\">\n                  {translate('onboarding.token.text.user_account')}\n                </Link>\n              )\n            }}\n          />\n        </p>\n\n        {token ? (\n          <>\n            <span className=\"text-middle\">\n              {tokenName}\n              {': '}\n            </span>\n            <strong className=\"spacer-right text-middle\">{token}</strong>\n\n            <DeleteButton className=\"button-small text-middle\" onClick={this.handleTokenRevoke} />\n\n            <Alert className=\"big-spacer-top\" variant=\"warning\">\n              {translateWithParameters('users.tokens.new_token_created', token)}\n            </Alert>\n          </>\n        ) : (\n          <>\n            <RenderOptions\n              checked={mode}\n              name={'token-mode'}\n              onCheck={this.setMode}\n              optionLabelKey=\"onboarding.token\"\n              options={[TokenMode.use_existing_token, TokenMode.generate_token]}\n            />\n\n            <div className=\"big-spacer-top\">\n              {mode === TokenMode.generate_token && (\n                <>\n                  <input\n                    className=\"input-super-large spacer-right text-middle\"\n                    onChange={this.handleChange}\n                    placeholder={translate('onboarding.token.generate_token.placeholder')}\n                    required={true}\n                    type=\"text\"\n                    value={tokenName}\n                  />\n                  <Button className=\"text-middle\" disabled={!tokenName} onClick={this.getNewToken}>\n                    {translate('onboarding.token.generate')}\n                  </Button>\n                </>\n              )}\n\n              {mode === TokenMode.use_existing_token && (\n                <input\n                  className=\"input-super-large spacer-right text-middle\"\n                  onChange={this.setExistingToken}\n                  placeholder={translate('onboarding.token.use_existing_token.placeholder')}\n                  required={true}\n                  type=\"text\"\n                  value={existingToken}\n                />\n              )}\n            </div>\n          </>\n        )}\n      </ConfirmModal>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport EditTokenModal from './EditTokenModal';\nimport { Button, EditButton } from '../../../../components/ui/buttons';\nimport { translate } from '../../../../helpers/l10n';\nimport Step from '../../components/Step';\nimport CodeSnippet from '../../../../components/common/CodeSnippet';\n\nexport interface YourTokenProps {\n  component: T.Component;\n  currentUser: T.LoggedInUser;\n  hasStepAfter?: (hasStepAfter: boolean) => void;\n  onContinue: VoidFunction;\n  onOpen: VoidFunction;\n  open: boolean;\n  organization?: string;\n  setToken: (token: string) => void;\n  stepNumber: number;\n  token?: string;\n}\n\nexport default function EncryptYourTokenStep({\n  component,\n  currentUser,\n  onContinue,\n  onOpen,\n  open,\n  setToken,\n  stepNumber,\n  token\n}: YourTokenProps) {\n  const [showModal, toggleModal] = React.useState<boolean>(false);\n\n  const close = () => toggleModal(!showModal);\n\n  const save = (token: string) => {\n    setToken(token);\n    close();\n  };\n\n  const command = `travis encrypt {token}`;\n  const renderCommand = () => (\n    <div className=\"spacer-bottom\">\n      travis encrypt {token}\n      <EditButton className=\"edit-token spacer-left\" onClick={() => toggleModal(true)} />\n    </div>\n  );\n\n  const renderForm = () => (\n    <div className=\"boxed-group-inner\">\n      {showModal && (\n        <EditTokenModal\n          component={component}\n          currentUser={currentUser}\n          onClose={close}\n          onSave={save}\n        />\n      )}\n\n      <div className=\"display-flex-space-between\">\n        <div className=\"display-inline-block\">\n          <a\n            href=\"https://docs.travis-ci.com/user/encryption-keys/#usage\"\n            rel=\"noopener noreferrer\"\n            target=\"_blank\">\n            {translate('onboarding.analysis.with.travis.encrypt.docs.link.label')}\n          </a>\n          <br />\n          <CodeSnippet isOneLine={true} render={renderCommand} snippet={command} wrap={true} />\n        </div>\n      </div>\n\n      <div className=\"big-spacer-top\">\n        <Button className=\"js-continue\" onClick={onContinue}>\n          {translate('continue')}\n        </Button>\n      </div>\n    </div>\n  );\n\n  const renderResult = () => null;\n\n  return (\n    <Step\n      finished={true}\n      onOpen={onOpen}\n      open={open}\n      renderForm={renderForm}\n      renderResult={renderResult}\n      stepNumber={stepNumber}\n      stepTitle={translate('onboarding.analysis.with.travis.encrypt.title')}\n    />\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport CodeSnippet from '../../../../components/common/CodeSnippet';\nimport { Button } from '../../../../components/ui/buttons';\nimport { translate } from '../../../../helpers/l10n';\nimport Step from '../../components/Step';\nimport { StepProps } from '../../utils';\n\nexport default function CreateSonarPropertiesStep({\n  component,\n  finished,\n  onContinue,\n  onOpen,\n  open,\n  stepNumber\n}: StepProps) {\n  const command = `sonar.projectKey=${component ? component.key : 'my:project'}\n# this is the name and version displayed in the SonarCloud UI.\nsonar.projectName=${component ? component.name : 'My project'}\nsonar.projectVersion=1.0\n \n# Path is relative to the sonar-project.properties file. Replace \"\\\\\" by \"/\" on Windows.\n# This property is optional if sonar.modules is set. \nsonar.sources=.\n \n# Encoding of the source code. Default is default system encoding\n#sonar.sourceEncoding=UTF-8`;\n\n  const renderForm = () => (\n    <div className=\"boxed-group-inner\">\n      <div className=\"flex-columns\">\n        <div className=\"flex-column-full\">\n          <p>\n            <FormattedMessage\n              defaultMessage={translate('onboarding.analysis.with.travis.sonar.properties.text')}\n              id=\"onboarding.analysis.with.travis.sonar.properties.text\"\n              values={{\n                code: <code>sonar-project.properties</code>\n              }}\n            />\n          </p>\n          <CodeSnippet snippet={command} />\n        </div>\n      </div>\n      <div className=\"big-spacer-top\">\n        <Button className=\"js-continue\" onClick={onContinue}>\n          {translate('onboarding.finish')}\n        </Button>\n      </div>\n    </div>\n  );\n\n  const renderResult = () => null;\n\n  return (\n    <Step\n      finished={Boolean(finished)}\n      onOpen={onOpen}\n      open={open}\n      renderForm={renderForm}\n      renderResult={renderResult}\n      stepNumber={stepNumber}\n      stepTitle={\n        <FormattedMessage\n          defaultMessage={translate('onboarding.analysis.with.travis.sonar.properties.title')}\n          id=\"onboarding.analysis.with.travis.sonar.properties.title\"\n          values={{\n            filename: <code className=\"rule\">sonar.properties</code>\n          }}\n        />\n      }\n    />\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { Props } from '../JavaMaven';\nimport {\n  getSonarcloudAddonYml,\n  RequirementJavaBuild,\n  getSonarcloudAddonYmlRender\n} from '../AnalysisCommandTravis';\nimport { translate } from '../../../../../helpers/l10n';\nimport CodeSnippet from '../../../../../components/common/CodeSnippet';\n\nexport function JavaMavenTravisSonarCloud(props: Props) {\n  const command = `${getSonarcloudAddonYml(props.organization)}\n\nscript:\n  # the following command line builds the project, runs the tests with coverage and then execute the SonarCloud analysis\n  - mvn clean org.jacoco:jacoco-maven-plugin:prepare-agent install sonar:sonar`;\n\n  const renderCommand = () => (\n    <>\n      {getSonarcloudAddonYmlRender(props.organization)}\n      <br />\n      {`script:\n  # the following command line builds the project, runs the tests with coverage and then execute the SonarCloud analysis\n  - mvn clean org.jacoco:jacoco-maven-plugin:prepare-agent install sonar:sonar -Dsonar.projectKey=${\n    props.projectKey\n  }`}\n    </>\n  );\n\n  return (\n    <div>\n      <h2 className=\"spacer-bottom spacer-top\">\n        {translate('onboarding.analysis.with.travis.setup.title.a')}\n      </h2>\n\n      <RequirementJavaBuild />\n\n      <hr className=\"no-horizontal-margins\" />\n\n      <h2 className=\"spacer-bottom spacer-top\">\n        {translate('onboarding.analysis.with.travis.setup.title.b')}\n      </h2>\n\n      <p\n        className=\"spacer-bottom markdown\"\n        dangerouslySetInnerHTML={{\n          __html: translate('onboarding.analysis.java.maven.text.sonarcloud')\n        }}\n      />\n\n      <CodeSnippet render={renderCommand} snippet={command} />\n\n      <p\n        className=\"big-spacer-top markdown\"\n        dangerouslySetInnerHTML={{\n          __html: translate('onboarding.analysis.java.maven.docs.sonarcloud')\n        }}\n      />\n    </div>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport {\n  getSonarcloudAddonYml,\n  RequirementJavaBuild,\n  getSonarcloudAddonYmlRender\n} from '../AnalysisCommandTravis';\nimport { Props } from '../JavaGradle';\nimport { translate } from '../../../../../helpers/l10n';\nimport CodeSnippet from '../../../../../components/common/CodeSnippet';\n\nexport function JavaGradleTravisSonarCloud(props: Props) {\n  const config = `plugins {\n  id \"org.sonarqube\" version \"2.7\"\n}\n\nsonarqube {\n  properties {\n    sonar.projectKey: ${props.projectKey}\n  }\n}`;\n\n  const command = `${getSonarcloudAddonYml(props.organization)}\n\nscript:\n  - ./gradlew sonarqube`;\n\n  const renderCommand = () => (\n    <>\n      {getSonarcloudAddonYmlRender(props.organization)}\n      <br />\n      {`  script:\n  - ./gradlew sonarqube`}\n    </>\n  );\n\n  return (\n    <div>\n      <h2 className=\"spacer-bottom spacer-top\">\n        {translate('onboarding.analysis.with.travis.setup.title.a')}\n      </h2>\n\n      <RequirementJavaBuild />\n\n      <hr className=\"no-horizontal-margins\" />\n\n      <h2 className=\"spacer-bottom spacer-top\">\n        {translate('onboarding.analysis.with.travis.setup.title.b')}\n      </h2>\n\n      <FormattedMessage\n        defaultMessage={translate('onboarding.analysis.java.gradle.text.1.sonarcloud')}\n        id=\"onboarding.analysis.java.gradle.text.1.sonarcloud\"\n        values={{\n          file: <code>build.gradle</code>,\n          plugin: <code>org.sonarqube</code>\n        }}\n      />\n\n      <CodeSnippet snippet={config} />\n\n      <FormattedMessage\n        defaultMessage={translate('onboarding.analysis.java.gradle.text.2.sonarcloud')}\n        id=\"onboarding.analysis.java.gradle.text.2.sonarcloud\"\n        values={{\n          file: <code>.travis.yml</code>\n        }}\n      />\n\n      <CodeSnippet render={renderCommand} snippet={command} />\n\n      <FormattedMessage\n        defaultMessage={translate('onboarding.analysis.sq_scanner.docs_use_case')}\n        id=\"onboarding.analysis.sq_scanner.docs_use_case\"\n        values={{\n          link: (\n            <a\n              href=\"http://redirect.sonarsource.com/doc/gradle.html\"\n              rel=\"noopener noreferrer\"\n              target=\"_blank\">\n              {translate('onboarding.analysis.sqscanner.docs.gradle.title')}\n            </a>\n          ),\n          useCaseLink: (\n            <a\n              href=\"https://github.com/SonarSource/sq-com_example_java-gradle-travis\"\n              rel=\"noopener noreferrer\"\n              target=\"_blank\">\n              {translate('onboarding.analysis.sqscanner.docs.gradle.example_project.title')}\n            </a>\n          )\n        }}\n      />\n    </div>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport { translate } from '../../../../../helpers/l10n';\nimport { RequirementOtherBuild } from '../AnalysisCommandTravis';\nimport CodeSnippet from '../../../../../components/common/CodeSnippet';\n\ninterface CommonTravisSonarCloudProps {\n  command: string;\n  renderCommand: () => JSX.Element;\n}\n\nexport function CommonTravisSonarCloud({ command, renderCommand }: CommonTravisSonarCloudProps) {\n  return (\n    <div>\n      <h2 className=\"spacer-bottom spacer-top\">\n        {translate('onboarding.analysis.with.travis.setup.title.a')}\n      </h2>\n\n      <RequirementOtherBuild />\n\n      <hr className=\"no-horizontal-margins\" />\n\n      <h2 className=\"spacer-bottom spacer-top\">\n        {translate('onboarding.analysis.with.travis.setup.title.b')}\n      </h2>\n\n      <FormattedMessage\n        defaultMessage={translate('onboarding.analysis.sq_scanner.text.sonarcloud')}\n        id=\"onboarding.analysis.sq_scanner.text.sonarcloud\"\n        values={{\n          file: <code>.travis.yml</code>\n        }}\n      />\n\n      <CodeSnippet render={renderCommand} snippet={command} />\n\n      <FormattedMessage\n        defaultMessage={translate('onboarding.analysis.sq_scanner.docs')}\n        id=\"onboarding.analysis.sq_scanner.docs\"\n        values={{\n          link: (\n            <a\n              href=\"http://redirect.sonarsource.com/doc/install-configure-scanner.html\"\n              rel=\"noopener noreferrer\"\n              target=\"_blank\">\n              {translate('onboarding.analysis.sq_scanner.docs_link')}\n            </a>\n          )\n        }}\n      />\n    </div>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { CommonTravisSonarCloud } from './utils';\nimport { getSonarcloudAddonYml, getSonarcloudAddonYmlRender } from '../AnalysisCommandTravis';\nimport { Props } from '../Other';\n\nexport function OtherTravisSonarCloud(props: Props) {\n  const command = `${getSonarcloudAddonYml(props.organization)}\n\nscript:\n  # the following command line builds the project, runs the tests with coverage and then execute the SonarCloud analysis\n  - sonar-scanner`;\n\n  const renderCommand = () => (\n    <>\n      {getSonarcloudAddonYmlRender(props.organization)}\n      <br />\n      {`script:\n  # the following command line builds the project, runs the tests with coverage and then execute the SonarCloud analysis\n  - sonar-scanner`}\n    </>\n  );\n\n  return <CommonTravisSonarCloud command={command} renderCommand={renderCommand} />;\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { CommonTravisSonarCloud } from './utils';\nimport { getSonarcloudAddonYml, getSonarcloudAddonYmlRender } from '../AnalysisCommandTravis';\nimport { Props } from '../ClangGCC';\n\nexport function ClangGCCTravisSonarCloud(props: Props) {\n  const command = `${getSonarcloudAddonYml(props.organization)}\n\nscript:\n  - make clean\n  # Wraps the compilation with the Build Wrapper to generate configuration (used\n  # later by the SonarQube Scanner) into the \"bw-output\" folder\n  - build-wrapper-linux-x86-64 --out-dir bw-output make all\n  # Execute some tests\n  - make test\n  # And finally run the SonarQube analysis - read the \"sonar-project.properties\"\n  # file to see the specific configuration\n  - sonar-scanner`;\n\n  const renderCommand = () => (\n    <>\n      {getSonarcloudAddonYmlRender(props.organization)}\n      <br />\n      {`script:\n  - make clean\n  # Wraps the compilation with the Build Wrapper to generate configuration (used\n  # later by the SonarQube Scanner) into the \"bw-output\" folder\n  - build-wrapper-linux-x86-64 --out-dir bw-output make all\n  # Execute some tests\n  - make test\n  # And finally run the SonarQube analysis - read the \"sonar-project.properties\"\n  # file to see the specific configuration\n  - sonar-scanner`}\n    </>\n  );\n\n  return <CommonTravisSonarCloud command={command} renderCommand={renderCommand} />;\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { JavaMavenTravisSonarCloud } from './TravisSonarCloud/JavaMavenTravisSonarCloud';\nimport { JavaGradleTravisSonarCloud } from './TravisSonarCloud/JavaGradleTravisSonarCloud';\nimport { OtherTravisSonarCloud } from './TravisSonarCloud/OtherTravisSonarCloud';\nimport { ClangGCCTravisSonarCloud } from './TravisSonarCloud/ClangGCCTravisSonarCloud';\nimport { getHostUrl } from '../../../../helpers/urls';\nimport CodeSnippet from '../../../../components/common/CodeSnippet';\nimport { translate } from '../../../../helpers/l10n';\nimport { getProjectKey } from '../ProjectAnalysisStep';\n\ninterface Props {\n  buildType: string | undefined;\n  component?: T.Component;\n  organization?: string;\n  small?: boolean;\n  token?: string;\n}\n\ninterface RenderProps {\n  component?: T.Component;\n  organization?: string;\n  small?: boolean;\n  token?: string;\n}\n\nexport function getSonarcloudAddonYml(organization: string = '') {\n  return `addons:\n  sonarcloud:\n    organization: ${organization ? `\"${organization}\"` : `\"Add your organization key\"`}\n    token:\n      secure: \"**************************\" # encrypted value of your token`;\n}\n\nexport function getSonarcloudAddonYmlRender(organization: string = '') {\n  return (\n    <>\n      {`addons:\n  sonarcloud:\n    organization: ${organization ? `\"${organization}\"` : `\"Add your organization key\"`}\n    token:\n      secure: `}\n      {\n        <span className=\"highlight\">\n          {'\"**************************\"'} # encrypted value of your token\n        </span>\n      }\n      <br />\n    </>\n  );\n}\n\nexport function RequirementJavaBuild() {\n  return (\n    <>\n      <p className=\"spacer-bottom\">{translate('onboarding.analysis.with.travis.environments')}</p>\n\n      <div className=\"flex-columns\">\n        <div className=\"flex-column flex-column-half\">\n          <a\n            href=\"https://docs.travis-ci.com/user/reference/precise/\"\n            rel=\"noopener noreferrer\"\n            target=\"_blank\">\n            {translate('onboarding.analysis.with.travis.environment.image.java')}\n          </a>\n          <CodeSnippet isOneLine={true} noCopy={true} snippet={'language: java'} />\n        </div>\n\n        <div className=\"display-flex-stretch\">\n          <div className=\"vertical-pipe-separator\">\n            <div className=\"vertical-separator \" />\n            <span className=\"note\">{translate('or')}</span>\n            <div className=\"vertical-separator\" />\n          </div>\n        </div>\n\n        <div className=\"flex-column flex-column-half\">\n          <a\n            href=\"https://docs.travis-ci.com/user/reference/trusty/\"\n            rel=\"noopener noreferrer\"\n            target=\"_blank\">\n            {translate('onboarding.analysis.with.travis.environment.image.ci')}\n          </a>\n          <CodeSnippet isOneLine={true} noCopy={true} snippet={'dist: trusty'} />\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport function RequirementOtherBuild() {\n  return (\n    <>\n      <p>\n        {translate('onboarding.analysis.with.travis.environment')}{' '}\n        <a\n          href=\"https://docs.travis-ci.com/user/reference/trusty/\"\n          rel=\"noopener noreferrer\"\n          target=\"_blank\">\n          {translate('onboarding.analysis.with.travis.environment.image.ci')}\n        </a>\n      </p>\n\n      <CodeSnippet isOneLine={true} noCopy={true} snippet={'dist: trusty'} />\n    </>\n  );\n}\n\nexport function RenderCommandForClangOrGCC({ component, organization, small, token }: RenderProps) {\n  const projectKey = getProjectKey(undefined, component);\n  if (!projectKey || !token) {\n    return null;\n  }\n  return (\n    <ClangGCCTravisSonarCloud\n      host={getHostUrl()}\n      organization={organization}\n      os=\"linux\"\n      projectKey={projectKey}\n      small={small}\n      token={token}\n    />\n  );\n}\n\nexport function RenderCommandForGradle({ component, organization, token }: RenderProps) {\n  if (!token) {\n    return null;\n  }\n\n  return (\n    <JavaGradleTravisSonarCloud\n      host={getHostUrl()}\n      organization={organization}\n      projectKey={component && component.key}\n      token={token}\n    />\n  );\n}\n\nexport function RenderCommandForMaven({ component, organization, token }: RenderProps) {\n  if (!token) {\n    return null;\n  }\n\n  return (\n    <JavaMavenTravisSonarCloud\n      host={getHostUrl()}\n      organization={organization}\n      projectKey={component && component.key}\n      token={token}\n    />\n  );\n}\n\nexport function RenderCommandForOther({ component, organization, token }: RenderProps) {\n  const projectKey = getProjectKey(undefined, component);\n  if (!projectKey || !token) {\n    return null;\n  }\n  return (\n    <OtherTravisSonarCloud\n      host={getHostUrl()}\n      organization={organization}\n      os={'linux'}\n      projectKey={projectKey}\n      token={token}\n    />\n  );\n}\n\nfunction getBuildOptions(): {\n  [k: string]: (props: Props) => JSX.Element | null;\n} {\n  return {\n    gradle: RenderCommandForGradle,\n    make: RenderCommandForClangOrGCC,\n    maven: RenderCommandForMaven,\n    other: RenderCommandForOther\n  };\n}\n\nexport default function AnalysisCommandTravis(props: Props) {\n  const { buildType } = props;\n\n  const Build = (buildType && getBuildOptions()[buildType]) || undefined;\n\n  return Build ? <Build {...props} /> : null;\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { RenderOptions } from './RenderOptions';\n\ninterface Props {\n  build: string | undefined;\n  setBuild: (build: string) => void;\n}\n\nexport default function BuildSystemForm({ build, setBuild }: Props) {\n  return (\n    <RenderOptions\n      checked={build}\n      name=\"build\"\n      onCheck={setBuild}\n      optionLabelKey={'onboarding.build'}\n      options={['maven', 'gradle', 'make', 'other']}\n      titleLabelKey=\"onboarding.build\"\n    />\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport AnalysisCommandTravis from '../../components/commands/AnalysisCommandTravis';\nimport { Button } from '../../../../components/ui/buttons';\nimport { translate } from '../../../../helpers/l10n';\nimport Step from '../../components/Step';\nimport BuildSystemForm from '../../components/BuildSystemForm';\nimport { StepProps } from '../../utils';\n\ninterface BuildProps {\n  buildCallback: (build: string) => void;\n  buildType?: string;\n}\n\nexport default function EditTravisYmlStep({\n  buildCallback,\n  buildType,\n  component,\n  finished,\n  hasStepAfter,\n  onContinue,\n  onOpen,\n  open,\n  organization,\n  stepNumber,\n  token\n}: StepProps & BuildProps) {\n  const [build, setBuild] = React.useState<string | undefined>(buildType || undefined);\n\n  if (!build && buildType) {\n    setBuild(buildType);\n  }\n\n  const isJavaBuild = build && ['gradle', 'maven'].includes(build);\n\n  if (hasStepAfter && build) {\n    hasStepAfter(!isJavaBuild);\n  }\n\n  const chooseBuild = (build: string) => {\n    buildCallback(build);\n    setBuild(build);\n  };\n\n  const renderForm = () => (\n    <div className=\"boxed-group-inner\">\n      <div className=\"flex-columns\">\n        <div className=\"flex-column-full\">\n          <BuildSystemForm build={build} setBuild={chooseBuild} />\n\n          {build && (\n            <AnalysisCommandTravis\n              buildType={build}\n              component={component}\n              organization={organization}\n              token={token}\n            />\n          )}\n        </div>\n      </div>\n      <div className=\"big-spacer-top\">\n        {build && (\n          <Button className=\"js-continue\" onClick={onContinue}>\n            {translate(isJavaBuild ? 'onboarding.finish' : 'continue')}\n          </Button>\n        )}\n      </div>\n    </div>\n  );\n\n  const renderResult = () => null;\n\n  return (\n    <Step\n      finished={Boolean(finished)}\n      onOpen={onOpen}\n      open={open}\n      renderForm={renderForm}\n      renderResult={renderResult}\n      stepNumber={stepNumber}\n      stepTitle={\n        <FormattedMessage\n          defaultMessage={translate('onboarding.analysis.travis.sonarcloud')}\n          id=\"onboarding.analysis.travis.sonarcloud\"\n          values={{\n            filename: <code className=\"rule\">.travis.yml</code>\n          }}\n        />\n      }\n    />\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\n\nexport const PROJECT_ONBOARDING_DONE = 'sonarcloud.project.onboarding.finished';\nexport const PROJECT_ONBOARDING_MODE_ID = 'sonarcloud.project.onboarding.mode.id';\nexport const PROJECT_STEP_PROGRESS = 'sonarcloud.project.onboarding.step.progress';\n\nexport interface AlmLanguagesStats {\n  [k: string]: number;\n}\n\nexport interface Alm {\n  id: string;\n  name: string;\n}\n\nexport interface AnalysisMode {\n  icon?: string;\n  id: string;\n  name: string;\n}\n\nexport enum ALM_KEYS {\n  BITBUCKET = 'BITBUCKET',\n  GITHUB = 'GITHUB',\n  MICROSOFT = 'MICROSOFT'\n}\n\nexport const alms: { [k: string]: Alm } = {\n  [ALM_KEYS.BITBUCKET]: {\n    id: ALM_KEYS.BITBUCKET,\n    name: 'BitBucket'\n  },\n  [ALM_KEYS.GITHUB]: {\n    id: ALM_KEYS.GITHUB,\n    name: 'GitHub'\n  },\n  [ALM_KEYS.MICROSOFT]: {\n    id: ALM_KEYS.MICROSOFT,\n    name: 'Microsoft'\n  }\n};\n\nexport const modes: AnalysisMode[] = [\n  {\n    id: 'travis',\n    name: 'With Travis CI'\n  },\n  {\n    id: 'other',\n    name: 'With other CI tools'\n  },\n  {\n    id: 'manual',\n    name: 'Manually'\n  }\n];\n\nexport const autoScanMode: AnalysisMode = {\n  id: 'autoscan',\n  name: 'SonarCloud Automatic Analysis'\n};\n\nexport interface TutorialProps {\n  component: T.Component;\n  currentUser: T.LoggedInUser;\n  onDone: VoidFunction;\n  setToken: (token: string) => void;\n  style?: object;\n  token: string | undefined;\n}\n\ninterface AutoScannableProps {\n  [k: string]: number;\n}\n\nexport function isAutoScannable(languages: AutoScannableProps = {}) {\n  const allowed = [\n    'ABAP',\n    'Apex',\n    'CSS',\n    'Flex',\n    'Go',\n    'HTML',\n    'JavaScript',\n    'Kotlin',\n    'PHP',\n    'Python',\n    'Ruby',\n    'Scala',\n    'Swift',\n    'TypeScript',\n    'TSQL',\n    'XML'\n  ];\n  const notAllowed = ['Java', 'C#', 'Visual Basic', 'C', 'C++', 'Objective-C'];\n\n  const withAllowedLanguages = !!Object.keys(languages).find(l => allowed.includes(l));\n  const withNotAllowedLanguages = !!Object.keys(languages).find(l => notAllowed.includes(l));\n\n  return { withAllowedLanguages, withNotAllowedLanguages };\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport EncryptYourTokenStep from '../steps/EncryptYourTokenStep';\nimport CreateSonarPropertiesStep from '../steps/CreateSonarPropertiesStep';\nimport EditTravisYmlStep from '../steps/EditTravisYmlStep';\nimport { isSonarCloud } from '../../../../helpers/system';\nimport { PROJECT_STEP_PROGRESS, TutorialProps } from '../utils';\nimport { translate } from '../../../../helpers/l10n';\nimport { get, save } from '../../../../helpers/storage';\n\nenum Steps {\n  ENCRYPT_TOKEN = 1,\n  EDIT_TRAVIS_YML = 2,\n  CREATE_SONAR_PROPERTIES = 3\n}\n\nexport default function ConfigureWithTravis({\n  component,\n  currentUser,\n  onDone,\n  setToken,\n  token\n}: TutorialProps) {\n  const [build, setBuild] = React.useState<string | undefined>(undefined);\n  const [step, setStep] = React.useState<Steps>(Steps.ENCRYPT_TOKEN);\n  const [hasStepAfterTravisYml, setHasStepAfterTravilYml] = React.useState<boolean>(false);\n\n  React.useEffect(() => {\n    const value = get(PROJECT_STEP_PROGRESS, component.key);\n    if (value) {\n      try {\n        const data = JSON.parse(value);\n        setBuild(data.build);\n        setStep(data.step);\n        setHasStepAfterTravilYml(data.hasStepAfterTravisYml);\n      } catch (e) {\n        // Let's start from scratch\n      }\n    }\n  }, [component.key]);\n\n  const saveAndFinish = () => {\n    save(\n      PROJECT_STEP_PROGRESS,\n      JSON.stringify({\n        build,\n        hasStepAfterTravisYml,\n        step\n      }),\n      component.key\n    );\n\n    onDone();\n  };\n\n  return (\n    <>\n      <h1 className=\"spacer-bottom spacer-top\">\n        {translate('onboarding.analysis.with.travis.title')}\n      </h1>\n\n      <EncryptYourTokenStep\n        component={component}\n        currentUser={currentUser}\n        onContinue={() => setStep(Steps.EDIT_TRAVIS_YML)}\n        onOpen={() => setStep(Steps.ENCRYPT_TOKEN)}\n        open={step === Steps.ENCRYPT_TOKEN}\n        setToken={setToken}\n        stepNumber={1}\n        token={token}\n      />\n\n      <EditTravisYmlStep\n        buildCallback={setBuild}\n        buildType={build}\n        component={component}\n        finished={step >= 2}\n        hasStepAfter={setHasStepAfterTravilYml}\n        onContinue={() =>\n          hasStepAfterTravisYml ? setStep(Steps.CREATE_SONAR_PROPERTIES) : saveAndFinish()\n        }\n        onOpen={() => setStep(Steps.EDIT_TRAVIS_YML)}\n        open={step === Steps.EDIT_TRAVIS_YML}\n        organization={isSonarCloud() ? component.organization : undefined}\n        stepNumber={2}\n        token={token}\n      />\n\n      {hasStepAfterTravisYml && (\n        <CreateSonarPropertiesStep\n          component={component}\n          finished={step >= 3}\n          onContinue={saveAndFinish}\n          onOpen={() => setStep(Steps.CREATE_SONAR_PROPERTIES)}\n          open={step === Steps.CREATE_SONAR_PROPERTIES}\n          stepNumber={3}\n        />\n      )}\n    </>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport { translate } from '../../../../../helpers/l10n';\nimport InstanceMessage from '../../../../../components/common/InstanceMessage';\nimport CodeSnippet from '../../../../../components/common/CodeSnippet';\nimport { Button, EditButton } from '../../../../../components/ui/buttons';\nimport { ProjectAnalysisModes } from '../../ProjectAnalysisStepFromBuildTool';\n\nexport interface JavaCustomProps {\n  host: string;\n  mode: ProjectAnalysisModes;\n  onDone: VoidFunction;\n  organization?: string;\n  projectKey?: string;\n  toggleModal: VoidFunction;\n  token: string;\n}\n\ninterface RenderCustomCommandProps {\n  command: (string | undefined)[];\n  toggleModal: VoidFunction;\n}\n\nexport function RenderCustomCommand({\n  command,\n  toggleModal\n}: RenderCustomCommandProps): JSX.Element {\n  return (\n    <>\n      {command.join(' \\\\\\n  ')}{' '}\n      <EditButton className=\"edit-token spacer-left\" onClick={toggleModal} />\n    </>\n  );\n}\n\ninterface RenderCustomContent {\n  linkText: string;\n  linkUrl: string;\n  onDone: VoidFunction;\n}\n\nexport function RenderCustomContent({\n  command,\n  linkText,\n  linkUrl,\n  onDone,\n  toggleModal\n}: RenderCustomCommandProps & RenderCustomContent) {\n  return (\n    <>\n      <CodeSnippet\n        render={() => <RenderCustomCommand command={command} toggleModal={toggleModal} />}\n        snippet={command}\n        wrap={true}\n      />\n\n      <p className=\"big-spacer-top markdown\">\n        <FormattedMessage\n          defaultMessage={translate('onboarding.analysis.docs')}\n          id=\"onboarding.analysis.docs\"\n          values={{\n            link: (\n              <a href={linkUrl} rel=\"noopener noreferrer\" target=\"_blank\">\n                {translate(linkText)}\n              </a>\n            )\n          }}\n        />\n      </p>\n\n      <div className=\"big-spacer-top\">\n        <Button className=\"js-continue\" onClick={onDone}>\n          {translate('onboarding.finish')}\n        </Button>\n      </div>\n    </>\n  );\n}\n\nexport default function JavaMavenCustom(props: JavaCustomProps) {\n  const suffix = props.mode === ProjectAnalysisModes.CI ? '.ci' : '';\n  const command = [\n    'mvn sonar:sonar',\n    props.projectKey && `-Dsonar.projectKey=${props.projectKey}`,\n    props.organization && `-Dsonar.organization=${props.organization}`,\n    `-Dsonar.host.url=${props.host}`,\n    `-Dsonar.login=${props.token}`\n  ];\n\n  return (\n    <div>\n      <h4 className=\"spacer-bottom\">\n        {translate(`onboarding.analysis.java.maven.header${suffix}`)}\n      </h4>\n\n      <p className=\"spacer-bottom markdown\">\n        <InstanceMessage\n          message={translate(`onboarding.analysis.java.maven.text.custom${suffix}`)}\n        />\n      </p>\n\n      <RenderCustomContent\n        command={command}\n        linkText=\"onboarding.analysis.java.maven.docs_link\"\n        linkUrl=\"http://redirect.sonarsource.com/doc/install-configure-scanner-maven.html\"\n        onDone={props.onDone}\n        toggleModal={props.toggleModal}\n      />\n    </div>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport { JavaCustomProps, RenderCustomContent } from './JavaMavenCustom';\nimport { translate } from '../../../../../helpers/l10n';\nimport CodeSnippet from '../../../../../components/common/CodeSnippet';\nimport { ProjectAnalysisModes } from '../../ProjectAnalysisStepFromBuildTool';\n\nexport default function JavaGradleCustom(props: JavaCustomProps) {\n  const suffix = props.mode === ProjectAnalysisModes.CI ? '.ci' : '';\n  const config = 'plugins {\\n  id \"org.sonarqube\" version \"2.7\"\\n}';\n\n  const command = [\n    './gradlew sonarqube',\n    props.projectKey && `-Dsonar.projectKey=${props.projectKey}`,\n    props.organization && `-Dsonar.organization=${props.organization}`,\n    `-Dsonar.host.url=${props.host}`,\n    `-Dsonar.login=${props.token}`\n  ];\n\n  return (\n    <div>\n      <h4 className=\"spacer-bottom\">\n        {translate(`onboarding.analysis.java.gradle.header${suffix}`)}\n      </h4>\n\n      <FormattedMessage\n        defaultMessage={translate('onboarding.analysis.java.gradle.text.1.sonarcloud')}\n        id=\"onboarding.analysis.java.gradle.text.1.sonarcloud\"\n        values={{\n          file: <code>build.gradle</code>,\n          plugin: <code>org.sonarqube</code>\n        }}\n      />\n\n      <CodeSnippet snippet={config} />\n\n      <p className=\"spacer-top spacer-bottom markdown\">\n        {translate('onboarding.analysis.java.gradle.text.2')}\n      </p>\n\n      <RenderCustomContent\n        command={command}\n        linkText=\"onboarding.analysis.java.gradle.docs_link\"\n        linkUrl=\"http://redirect.sonarsource.com/doc/gradle.html\"\n        onDone={props.onDone}\n        toggleModal={props.toggleModal}\n      />\n    </div>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport { quote } from '../../../utils';\nimport SQScanner from '../SQScanner';\nimport BuildWrapper from '../BuildWrapper';\nimport { translate } from '../../../../../helpers/l10n';\nimport CodeSnippet from '../../../../../components/common/CodeSnippet';\nimport { Button, EditButton } from '../../../../../components/ui/buttons';\nimport { ProjectAnalysisModes } from '../../ProjectAnalysisStepFromBuildTool';\n\nexport interface Props {\n  host: string;\n  mode: ProjectAnalysisModes;\n  onDone: VoidFunction;\n  os: string;\n  organization?: string;\n  projectKey: string;\n  small?: boolean;\n  toggleModal: VoidFunction;\n  token: string;\n}\n\nconst executables: T.Dict<string> = {\n  linux: 'build-wrapper-linux-x86-64',\n  win: 'build-wrapper-win-x86-64.exe',\n  mac: 'build-wrapper-macosx-x86'\n};\n\ninterface ClangGCCProps extends Pick<Props, 'small' | 'onDone' | 'os'> {\n  command1: string;\n  command2: (string | undefined)[];\n  renderCommand2: () => JSX.Element;\n}\n\nexport function ClangGCCCommon(props: ClangGCCProps) {\n  return (\n    <>\n      <h4 className=\"huge-spacer-top spacer-bottom\">\n        {translate('onboarding.analysis.sq_scanner.execute')}\n      </h4>\n\n      <p className=\"spacer-bottom markdown\">\n        {translate('onboarding.analysis.sq_scanner.execute.text.custom')}\n      </p>\n\n      <CodeSnippet isOneLine={props.small} snippet={props.command1} />\n\n      <CodeSnippet\n        isOneLine={props.os === 'win'}\n        render={props.renderCommand2}\n        snippet={props.command2}\n        wrap={true}\n      />\n\n      <FormattedMessage\n        defaultMessage={translate('onboarding.analysis.sq_scanner.docs')}\n        id=\"onboarding.analysis.sq_scanner.docs\"\n        values={{\n          link: (\n            <a\n              href=\"http://redirect.sonarsource.com/doc/install-configure-scanner.html\"\n              rel=\"noopener noreferrer\"\n              target=\"_blank\">\n              {translate('onboarding.analysis.sq_scanner.docs_link')}\n            </a>\n          )\n        }}\n      />\n\n      <div className=\"big-spacer-top\">\n        <Button className=\"js-continue\" onClick={props.onDone}>\n          {translate('onboarding.finish')}\n        </Button>\n      </div>\n    </>\n  );\n}\n\nexport default function ClangGCCCustom(props: Props) {\n  const command1 = `${executables[props.os]} --out-dir bw-output make clean all`;\n\n  const q = quote(props.os);\n  const command2 = [\n    props.os === 'win' ? 'sonar-scanner.bat' : 'sonar-scanner',\n    '-D' + q(`sonar.projectKey=${props.projectKey}`),\n    props.organization && '-D' + q(`sonar.organization=${props.organization}`),\n    '-D' + q('sonar.sources=.'),\n    '-D' + q('sonar.cfamily.build-wrapper-output=bw-output'),\n    '-D' + q(`sonar.host.url=${props.host}`),\n    '-D' + q(`sonar.login=${props.token}`)\n  ];\n\n  const renderCommand2 = () => (\n    <>\n      {command2.join(' \\\\\\n  ')}{' '}\n      <EditButton className=\"edit-token spacer-left\" onClick={props.toggleModal} />\n    </>\n  );\n\n  return (\n    <div className=\"huge-spacer-top\">\n      <SQScanner os={props.os} />\n      <BuildWrapper className=\"huge-spacer-top\" os={props.os} />\n      <ClangGCCCommon\n        command1={command1}\n        command2={command2}\n        onDone={props.onDone}\n        os={props.os}\n        renderCommand2={renderCommand2}\n      />\n    </div>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport SQScanner from '..//SQScanner';\nimport CodeSnippet from '../../../../../components/common/CodeSnippet';\nimport InstanceMessage from '../../../../../components/common/InstanceMessage';\nimport { translate } from '../../../../../helpers/l10n';\nimport { quote } from '../../../utils';\nimport { Button, EditButton } from '../../../../../components/ui/buttons';\nimport { ProjectAnalysisModes } from '../../ProjectAnalysisStepFromBuildTool';\n\nexport interface Props {\n  component: T.Component;\n  currentUser: T.LoggedInUser;\n  host: string;\n  mode: ProjectAnalysisModes;\n  onDone: VoidFunction;\n  organization?: string;\n  os: string;\n  projectKey: string;\n  toggleModal: VoidFunction;\n  token: string;\n}\n\nexport default function OtherCustom(props: Props) {\n  const q = quote(props.os);\n  const command = [\n    props.os === 'win' ? 'sonar-scanner.bat' : 'sonar-scanner',\n    '-D' + q(`sonar.projectKey=${props.projectKey}`),\n    props.organization && '-D' + q(`sonar.organization=${props.organization}`),\n    '-D' + q('sonar.sources=.'),\n    '-D' + q(`sonar.host.url=${props.host}`),\n    '-D' + q(`sonar.login=${props.token}`)\n  ];\n\n  const renderCommand = () => (\n    <>\n      {command.join(' \\\\\\n  ')}{' '}\n      <EditButton className=\"edit-token spacer-left\" onClick={props.toggleModal} />\n    </>\n  );\n\n  return (\n    <div className=\"huge-spacer-top\">\n      <SQScanner os={props.os} />\n\n      <h4 className=\"huge-spacer-top spacer-bottom\">\n        {translate('onboarding.analysis.sq_scanner.execute')}\n      </h4>\n\n      <InstanceMessage message={translate('onboarding.analysis.sq_scanner.execute.text.custom')}>\n        {transformedMessage => (\n          <p\n            className=\"spacer-bottom markdown\"\n            dangerouslySetInnerHTML={{ __html: transformedMessage }}\n          />\n        )}\n      </InstanceMessage>\n\n      <CodeSnippet\n        isOneLine={props.os === 'win'}\n        render={renderCommand}\n        snippet={command}\n        wrap={true}\n      />\n\n      <p\n        className=\"big-spacer-top markdown\"\n        dangerouslySetInnerHTML={{ __html: translate('onboarding.analysis.standard.docs') }}\n      />\n\n      <div className=\"big-spacer-top\">\n        <Button className=\"js-continue\" onClick={props.onDone}>\n          {translate('onboarding.finish')}\n        </Button>\n      </div>\n    </div>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport SQScanner from '..//SQScanner';\nimport CodeSnippet from '../../../../../components/common/CodeSnippet';\nimport InstanceMessage from '../../../../../components/common/InstanceMessage';\nimport { translate } from '../../../../../helpers/l10n';\nimport { quote } from '../../../utils';\nimport { Button, EditButton } from '../../../../../components/ui/buttons';\n\nexport interface Props {\n  component: T.Component;\n  currentUser: T.LoggedInUser;\n  host: string;\n  onDone: VoidFunction;\n  organization?: string;\n  os: string;\n  projectKey: string;\n  toggleModal: VoidFunction;\n  token: string;\n}\n\nexport default function OtherOtherCI(props: Props) {\n  const q = quote(props.os);\n  const command = [\n    props.os === 'win' ? 'sonar-scanner.bat' : 'sonar-scanner',\n    '-D' + q(`sonar.projectKey=${props.projectKey}`),\n    props.organization && '-D' + q(`sonar.organization=${props.organization}`),\n    '-D' + q('sonar.sources=.'),\n    '-D' + q(`sonar.host.url=${props.host}`),\n    '-D' + q(`sonar.login=${props.token}`)\n  ];\n\n  const renderCommand = () => (\n    <>\n      {command.join(' \\\\\\n  ')}{' '}\n      <EditButton className=\"edit-token spacer-left\" onClick={props.toggleModal} />\n    </>\n  );\n\n  const commandLinuxMac = `\nlocal SONAR_SCANNER_VERSION=${translate('onboarding.analysis.sonar_scanner_version')}\nexport SONAR_SCANNER_HOME=$HOME/.sonar/sonar-scanner-$SONAR_SCANNER_VERSION\nrm -rf $SONAR_SCANNER_HOME\nmkdir -p $SONAR_SCANNER_HOME\ncurl -sSLo $HOME/.sonar/sonar-scanner.zip http://repo1.maven.org/maven2/org/sonarsource/scanner/cli/sonar-scanner-cli/$SONAR_SCANNER_VERSION/sonar-scanner-cli-$SONAR_SCANNER_VERSION.zip\nunzip $HOME/.sonar/sonar-scanner.zip -d $HOME/.sonar/\nrm $HOME/.sonar/sonar-scanner.zip\nexport PATH=$SONAR_SCANNER_HOME/bin:$PATH\nexport SONAR_SCANNER_OPTS=\"-server\"`;\n\n  return (\n    <div className=\"huge-spacer-top\">\n      {props.os === 'win' ? (\n        <SQScanner os={props.os} />\n      ) : (\n        <>\n          <h4 className=\"huge-spacer-top spacer-bottom\">\n            {translate('onboarding.analysis.sq_scanner.header.ci')}\n          </h4>\n\n          <CodeSnippet snippet={commandLinuxMac} />\n        </>\n      )}\n\n      <h4 className=\"huge-spacer-top spacer-bottom\">\n        {translate('onboarding.analysis.sq_scanner.execute.ci')}\n      </h4>\n\n      <InstanceMessage message={translate('onboarding.analysis.sq_scanner.execute.text.custom')}>\n        {transformedMessage => (\n          <p\n            className=\"spacer-bottom markdown\"\n            dangerouslySetInnerHTML={{ __html: transformedMessage }}\n          />\n        )}\n      </InstanceMessage>\n\n      <CodeSnippet isOneLine={props.os === 'win'} render={renderCommand} snippet={command} />\n\n      <p\n        className=\"big-spacer-top markdown\"\n        dangerouslySetInnerHTML={{ __html: translate('onboarding.analysis.standard.docs') }}\n      />\n\n      <div className=\"big-spacer-top\">\n        <Button className=\"js-continue\" onClick={props.onDone}>\n          {translate('onboarding.finish')}\n        </Button>\n      </div>\n    </div>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { quote } from '../../../utils';\nimport SQScanner from '../SQScanner';\nimport BuildWrapper from '../BuildWrapper';\nimport { translate } from '../../../../../helpers/l10n';\nimport CodeSnippet from '../../../../../components/common/CodeSnippet';\nimport { EditButton } from '../../../../../components/ui/buttons';\nimport { ClangGCCCommon } from '../Custom/ClangGCCCustom';\n\nexport interface Props {\n  host: string;\n  onDone: VoidFunction;\n  os: string;\n  organization?: string;\n  projectKey: string;\n  small?: boolean;\n  toggleModal: VoidFunction;\n  token: string;\n}\n\nconst executables: T.Dict<string> = {\n  linux: 'build-wrapper-linux-x86-64',\n  win: 'build-wrapper-win-x86-64.exe',\n  mac: 'build-wrapper-macosx-x86'\n};\n\nexport default function ClangGCCOtherCI(props: Props) {\n  const command1 = `${executables[props.os]} --out-dir bw-output make clean all`;\n\n  const q = quote(props.os);\n  const command2 = [\n    props.os === 'win' ? 'sonar-scanner.bat' : 'sonar-scanner',\n    '-D' + q(`sonar.projectKey=${props.projectKey}`),\n    props.organization && '-D' + q(`sonar.organization=${props.organization}`),\n    '-D' + q('sonar.sources=.'),\n    '-D' + q('sonar.cfamily.build-wrapper-output=bw-output'),\n    '-D' + q(`sonar.host.url=${props.host}`),\n    '-D' + q(`sonar.login=${props.token}`)\n  ];\n\n  const renderCommand2 = () => (\n    <>\n      {command2.join(' \\\\\\n  ')}{' '}\n      <EditButton className=\"edit-token spacer-left\" onClick={props.toggleModal} />\n    </>\n  );\n\n  const commandLinuxMac = `\nlocal SONAR_SCANNER_VERSION=${translate('onboarding.analysis.sonar_scanner_version')}\nexport SONAR_SCANNER_HOME=$HOME/.sonar/sonar-scanner-$SONAR_SCANNER_VERSION\nrm -rf $SONAR_SCANNER_HOME\nmkdir -p $SONAR_SCANNER_HOME\ncurl -sSLo $HOME/.sonar/sonar-scanner.zip http://repo1.maven.org/maven2/org/sonarsource/scanner/cli/sonar-scanner-cli/$SONAR_SCANNER_VERSION/sonar-scanner-cli-$SONAR_SCANNER_VERSION.zip\nunzip $HOME/.sonar/sonar-scanner.zip -d $HOME/.sonar/\nrm $HOME/.sonar/sonar-scanner.zip\nexport PATH=$SONAR_SCANNER_HOME/bin:$PATH\nexport SONAR_SCANNER_OPTS=\"-server\"\n\ncurl -LsS https://sonarcloud.io/static/cpp/build-wrapper-linux-x86.zip > build-wrapper-linux-x86.zip\nunzip build-wrapper-linux-x86.zip`;\n\n  return (\n    <div className=\"huge-spacer-top\">\n      {props.os === 'win' ? (\n        <>\n          <SQScanner os={'ci'} />\n\n          <BuildWrapper className=\"huge-spacer-top\" os={'ci'} />\n        </>\n      ) : (\n        <>\n          <h4 className=\"huge-spacer-top spacer-bottom\">\n            {translate('onboarding.analysis.sq_scanner.header.ci')}\n          </h4>\n\n          <CodeSnippet snippet={commandLinuxMac} />\n        </>\n      )}\n\n      <ClangGCCCommon\n        command1={command1}\n        command2={command2}\n        renderCommand2={renderCommand2}\n        onDone={props.onDone}\n        os={props.os}\n      />\n    </div>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport OtherOtherCI from './OtherCI/OtherOtherCI';\nimport ClangGCCOtherCI from './OtherCI/ClangGCCOtherCI';\nimport { AnalysisCommandProps, AnalysisCommandRenderProps } from './utils';\nimport { RenderCommandForGradle, RenderCommandForMaven } from './AnalysisCommandCustom';\nimport { getHostUrl } from '../../../../helpers/urls';\nimport { getProjectKey } from '../ProjectAnalysisStep';\nimport { RenderOS, RenderOSProps } from '../LanguageForm';\nimport { ProjectAnalysisModes } from '../ProjectAnalysisStepFromBuildTool';\nimport EditTokenModal from '../../analyzeProject/steps/EditTokenModal';\n\nexport function RenderCommandForClangOrGCC({\n  component,\n  onDone,\n  organization,\n  os,\n  small,\n  toggleModal,\n  token\n}: AnalysisCommandRenderProps) {\n  const projectKey = getProjectKey(undefined, component);\n  if (!projectKey || !os || !token) {\n    return null;\n  }\n  return (\n    <ClangGCCOtherCI\n      host={getHostUrl()}\n      onDone={onDone}\n      organization={organization}\n      os={os}\n      projectKey={projectKey}\n      small={small}\n      toggleModal={toggleModal}\n      token={token}\n    />\n  );\n}\n\nexport function RenderCommandForOther({\n  component,\n  currentUser,\n  onDone,\n  organization,\n  os,\n  toggleModal,\n  token\n}: AnalysisCommandRenderProps) {\n  const projectKey = getProjectKey(undefined, component);\n  if (!component || !projectKey || !os || !token) {\n    return null;\n  }\n  return (\n    <OtherOtherCI\n      component={component}\n      currentUser={currentUser}\n      host={getHostUrl()}\n      onDone={onDone}\n      organization={organization}\n      os={os}\n      projectKey={projectKey}\n      toggleModal={toggleModal}\n      token={token}\n    />\n  );\n}\n\nfunction getBuildOptions({\n  os,\n  setOS\n}: RenderOSProps): { [k: string]: (props: AnalysisCommandRenderProps) => JSX.Element | null } {\n  return {\n    gradle: RenderCommandForGradle,\n    make: function make(props) {\n      return (\n        <>\n          <RenderOS os={os} setOS={setOS} />\n          <RenderCommandForClangOrGCC {...props} />\n        </>\n      );\n    },\n    maven: RenderCommandForMaven,\n    other: function other(props) {\n      return (\n        <>\n          <RenderOS os={os} setOS={setOS} />\n          <RenderCommandForOther {...props} />\n        </>\n      );\n    }\n  };\n}\n\ninterface AnalysisCommandExtraProps {\n  mode: ProjectAnalysisModes;\n  getBuildOptions: (\n    props: RenderOSProps\n  ) => { [k: string]: (props: AnalysisCommandRenderProps) => JSX.Element | null };\n}\n\nexport function AnalysisCommandCommon(props: AnalysisCommandProps & AnalysisCommandExtraProps) {\n  const [os, setOS] = React.useState<string | undefined>(undefined);\n  const [isModalVisible, toggleModal] = React.useState<boolean>(false);\n  const { buildType } = props;\n\n  if (!os && props.os) {\n    setOS(props.os);\n  }\n\n  const toggleTokenModal = () => toggleModal(!isModalVisible);\n\n  const close = () => toggleModal(false);\n\n  const save = (t: string) => {\n    props.setToken(t);\n    close();\n  };\n\n  const callOnDone = () => {\n    props.onDone({ os });\n  };\n\n  const Build = (buildType && props.getBuildOptions({ os, setOS })[buildType]) || undefined;\n\n  return Build ? (\n    <>\n      {isModalVisible && (\n        <EditTokenModal\n          component={props.component}\n          currentUser={props.currentUser}\n          onClose={close}\n          onSave={save}\n        />\n      )}\n\n      <Build\n        {...props}\n        mode={props.mode}\n        onDone={callOnDone}\n        os={os}\n        toggleModal={toggleTokenModal}\n        token={props.token}\n      />\n    </>\n  ) : null;\n}\n\nexport default function AnalysisCommandOtherCI(props: AnalysisCommandProps) {\n  return (\n    <AnalysisCommandCommon\n      {...props}\n      getBuildOptions={getBuildOptions}\n      mode={ProjectAnalysisModes.CI}\n    />\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport JavaMavenCustom from './Custom/JavaMavenCustom';\nimport JavaGradleCustom from './Custom/JavaGradleCustom';\nimport ClangGCCCustom from './Custom/ClangGCCCustom';\nimport OtherCustom from './Custom/OtherCustom';\nimport { AnalysisCommandProps, AnalysisCommandRenderProps } from './utils';\nimport { AnalysisCommandCommon } from './AnalysisCommandOtherCI';\nimport { getHostUrl } from '../../../../helpers/urls';\nimport { getProjectKey } from '../ProjectAnalysisStep';\nimport { ProjectAnalysisModes } from '../ProjectAnalysisStepFromBuildTool';\nimport { RenderOS, RenderOSProps } from '../LanguageForm';\n\nexport function RenderCommandForMaven({\n  component,\n  mode,\n  onDone,\n  organization,\n  toggleModal,\n  token\n}: AnalysisCommandRenderProps) {\n  if (!token) {\n    return null;\n  }\n\n  return (\n    <JavaMavenCustom\n      host={getHostUrl()}\n      mode={mode}\n      onDone={onDone}\n      organization={organization}\n      projectKey={component && component.key}\n      toggleModal={toggleModal}\n      token={token}\n    />\n  );\n}\n\nexport function RenderCommandForGradle({\n  component,\n  mode,\n  onDone,\n  organization,\n  toggleModal,\n  token\n}: AnalysisCommandRenderProps) {\n  if (!token) {\n    return null;\n  }\n\n  return (\n    <JavaGradleCustom\n      host={getHostUrl()}\n      mode={mode}\n      onDone={onDone}\n      organization={organization}\n      projectKey={component && component.key}\n      toggleModal={toggleModal}\n      token={token}\n    />\n  );\n}\n\nexport function RenderCommandForClangOrGCC({\n  component,\n  mode,\n  onDone,\n  organization,\n  os,\n  small,\n  toggleModal,\n  token\n}: AnalysisCommandRenderProps) {\n  const projectKey = getProjectKey(undefined, component);\n  if (!projectKey || !os || !token) {\n    return null;\n  }\n  return (\n    <ClangGCCCustom\n      host={getHostUrl()}\n      mode={mode}\n      onDone={onDone}\n      organization={organization}\n      os={os}\n      projectKey={projectKey}\n      small={small}\n      toggleModal={toggleModal}\n      token={token}\n    />\n  );\n}\n\nexport function RenderCommandForOther({\n  component,\n  currentUser,\n  mode,\n  onDone,\n  organization,\n  os,\n  toggleModal,\n  token\n}: AnalysisCommandRenderProps) {\n  const projectKey = getProjectKey(undefined, component);\n  if (!component || !projectKey || !os || !token) {\n    return null;\n  }\n  return (\n    <OtherCustom\n      component={component}\n      currentUser={currentUser}\n      host={getHostUrl()}\n      mode={mode}\n      onDone={onDone}\n      organization={organization}\n      os={os}\n      projectKey={projectKey}\n      toggleModal={toggleModal}\n      token={token}\n    />\n  );\n}\n\nfunction getBuildOptions({\n  os,\n  setOS\n}: RenderOSProps): { [k: string]: (props: AnalysisCommandRenderProps) => JSX.Element | null } {\n  return {\n    gradle: RenderCommandForGradle,\n    make: function make(props: AnalysisCommandRenderProps) {\n      return (\n        <>\n          <RenderOS os={os} setOS={setOS} />\n          <RenderCommandForClangOrGCC {...props} />\n        </>\n      );\n    },\n    maven: RenderCommandForMaven,\n    other: function other(props: AnalysisCommandRenderProps) {\n      return (\n        <>\n          <RenderOS os={os} setOS={setOS} />\n          <RenderCommandForOther {...props} />\n        </>\n      );\n    }\n  };\n}\n\nexport default function AnalysisCommandCustom(props: AnalysisCommandProps) {\n  return (\n    <AnalysisCommandCommon\n      {...props}\n      getBuildOptions={getBuildOptions}\n      mode={ProjectAnalysisModes.Custom}\n    />\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport Step from './Step';\nimport BuildSystemForm from './BuildSystemForm';\nimport AnalysisCommandCustom from './commands/AnalysisCommandCustom';\nimport AnalysisCommandOtherCI from './commands/AnalysisCommandOtherCI';\nimport { translate } from '../../../helpers/l10n';\nimport { get, save } from '../../../helpers/storage';\nimport { PROJECT_STEP_PROGRESS } from '../analyzeProject/utils';\n\nexport enum ProjectAnalysisModes {\n  CI = 'CI',\n  Custom = 'Custom'\n}\n\nexport interface Props {\n  component: T.Component;\n  currentUser: T.LoggedInUser;\n  displayRowLayout?: boolean;\n  mode: ProjectAnalysisModes;\n  onDone: VoidFunction;\n  onReset?: VoidFunction;\n  open: boolean;\n  organization?: string;\n  setToken: (token: string) => void;\n  stepNumber: number;\n  token?: string;\n}\n\nexport default function ProjectAnalysisStepFromBuildTool({\n  component,\n  currentUser,\n  displayRowLayout,\n  mode,\n  onDone,\n  open,\n  organization,\n  setToken,\n  stepNumber,\n  token\n}: Props) {\n  const [build, setBuild] = React.useState<string | undefined>(undefined);\n  const [os, setOS] = React.useState<string | undefined>(undefined);\n\n  React.useEffect(() => {\n    const value = get(PROJECT_STEP_PROGRESS, component.key);\n    if (value) {\n      try {\n        const data = JSON.parse(value);\n        setBuild(data.build);\n        setOS(data.os);\n      } catch (e) {\n        // Let's start from scratch\n      }\n    }\n  }, [component.key]);\n\n  const saveAndFinish = (data: object) => {\n    save(\n      PROJECT_STEP_PROGRESS,\n      JSON.stringify({\n        ...data,\n        build\n      }),\n      component.key\n    );\n\n    onDone();\n  };\n\n  const renderForm = () => {\n    const languageComponent = <BuildSystemForm build={build} setBuild={setBuild} />;\n\n    let AnalysisComponent = null;\n\n    if (mode === ProjectAnalysisModes.Custom) {\n      AnalysisComponent = AnalysisCommandCustom;\n    } else if (mode === ProjectAnalysisModes.CI) {\n      AnalysisComponent = AnalysisCommandOtherCI;\n    }\n\n    if (displayRowLayout) {\n      return (\n        <div className=\"boxed-group-inner\">\n          <div className=\"display-flex-column\">\n            {languageComponent}\n            {AnalysisComponent && (\n              <div className=\"huge-spacer-top\">\n                <AnalysisComponent\n                  buildType={build}\n                  component={component}\n                  currentUser={currentUser}\n                  onDone={saveAndFinish}\n                  organization={organization}\n                  os={os}\n                  setToken={setToken}\n                  small={true}\n                  token={token}\n                />\n              </div>\n            )}\n          </div>\n        </div>\n      );\n    }\n\n    return (\n      <div className=\"boxed-group-inner\">\n        <div className=\"flex-columns\">\n          <div className=\"flex-column flex-column-half bordered-right\">{languageComponent}</div>\n          <div className=\"flex-column flex-column-half\">{AnalysisComponent}</div>\n        </div>\n      </div>\n    );\n  };\n\n  const renderResult = () => null;\n\n  return (\n    <Step\n      finished={false}\n      onOpen={() => {}}\n      open={open}\n      renderForm={renderForm}\n      renderResult={renderResult}\n      stepNumber={stepNumber}\n      stepTitle={translate('onboarding.analysis.header')}\n    />\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { getBaseUrl } from '../../../helpers/urls';\nimport { translate } from '../../../helpers/l10n';\nimport BackButton from '../../../components/controls/BackButton';\n\ninterface Props {\n  setTutorialDone: (done: boolean) => void;\n}\n\nexport default function AnalyzeTutorialDone({ setTutorialDone }: Props) {\n  return (\n    <div className=\"page-analysis-container page-analysis-container-sonarcloud\">\n      <BackButton\n        onClick={() => setTutorialDone(false)}\n        tooltip={translate('onboarding.tutorial.return_to_tutorial')}>\n        {translate('back')}\n      </BackButton>\n      <div className=\"page-analysis page-analysis-waiting huge-spacer-top huge-spacer-bottom\">\n        <img\n          alt=\"SonarCloud\"\n          src={`${getBaseUrl()}/images/sonarcloud/analysis/Waiting-for-analysis.svg`}\n        />\n        <h1 className=\"big-spacer-bottom huge-spacer-top\">\n          {translate('onboarding.finished.title')}\n        </h1>\n        <p>{translate('onboarding.finished.text')}</p>\n\n        <div className=\"links huge-spacer-top huge-spacer-bottom\">\n          <h2 className=\"huge-spacer-bottom\">{translate('onboarding.finished.links.title')}</h2>\n          <ul>\n            <li className=\"big-spacer-bottom\">\n              <a\n                href=\"https://sonarcloud.io/documentation/user-guide/quality-gates/\"\n                rel=\"noopener noreferrer\"\n                target=\"_blank\">\n                What is a Quality Gate?\n              </a>\n            </li>\n            <li className=\"big-spacer-bottom\">\n              <a\n                href=\"https://sonarcloud.io/documentation/instance-administration/quality-profiles/\"\n                rel=\"noopener noreferrer\"\n                target=\"_blank\">\n                Configure your Quality Profiles\n              </a>\n              .\n            </li>\n          </ul>\n        </div>\n      </div>\n    </div>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as classnames from 'classnames';\nimport * as React from 'react';\nimport ConfigureWithAutoScan from './configurations/ConfigureWithAutoScan';\nimport ConfigureWithTravis from './configurations/ConfigureWithTravis';\nimport ConfigureWithLocalScanner from './configurations/ConfigureWithLocalScanner';\nimport ConfigureOtherCI from './configurations/ConfigureWithOtherCI';\nimport { TutorialSuggestionBitbucket, TutorialSuggestionVSTS } from './AnalyzeTutorialSuggestion';\nimport {\n  Alm,\n  ALM_KEYS,\n  AlmLanguagesStats,\n  alms,\n  AnalysisMode,\n  autoScanMode,\n  isAutoScannable,\n  modes,\n  PROJECT_ONBOARDING_DONE,\n  PROJECT_ONBOARDING_MODE_ID,\n  PROJECT_STEP_PROGRESS,\n  TutorialProps\n} from './utils';\nimport { getUniqueTokenName } from '../utils';\nimport AnalyzeTutorialDone from '../components/AnalyzeTutorialDone';\nimport InstanceMessage from '../../../components/common/InstanceMessage';\nimport BackButton from '../../../components/controls/BackButton';\nimport TokenStep from '../components/TokenStep';\nimport ProjectAnalysisStep from '../components/ProjectAnalysisStep';\nimport { generateToken, getTokens } from '../../../api/user-tokens';\nimport { getGithubLanguages } from '../../../api/alm-integration';\nimport { isBitbucket, isGithub, isVSTS } from '../../../helpers/almIntegrations';\nimport { translate } from '../../../helpers/l10n';\nimport { get, remove, save } from '../../../helpers/storage';\nimport { isSonarCloud } from '../../../helpers/system';\nimport '../styles.css';\nimport './AnalyzeTutorialSonarCloud.css';\nimport DeferredSpinner from '../../../components/common/DeferredSpinner';\n\ninterface Props {\n  component: T.Component;\n  currentUser: T.LoggedInUser;\n}\n\nconst tutorials: {\n  [k: string]: (props: Props & TutorialProps) => JSX.Element;\n} = {\n  autoscan: ConfigureWithAutoScan,\n  manual: ConfigureWithLocalScanner,\n  other: ConfigureOtherCI,\n  travis: ConfigureWithTravis\n};\n\nenum Steps {\n  ANALYSIS = 'ANALYSIS',\n  TOKEN = 'TOKEN'\n}\n\ninterface State {\n  alm?: Alm;\n  almLanguageStats?: AlmLanguagesStats;\n  isTutorialDone: boolean;\n  mode?: AnalysisMode;\n  loading: boolean;\n  step: Steps;\n  token?: string;\n}\n\nexport default class AnalyzeTutorialSonarCloud extends React.PureComponent<Props, State> {\n  mounted = false;\n\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      loading: true,\n      isTutorialDone: get(PROJECT_ONBOARDING_DONE, props.component.key) === 'true',\n      step: Steps.TOKEN\n    };\n  }\n\n  componentDidMount() {\n    this.mounted = true;\n    const { component, currentUser } = this.props;\n\n    const almKey = (component.alm && component.alm.key) || currentUser.externalProvider;\n\n    if (!almKey) {\n      return;\n    }\n\n    if (isBitbucket(almKey)) {\n      this.configureBitbucket();\n    } else if (isGithub(almKey)) {\n      this.configureGithub();\n    } else if (isVSTS(almKey)) {\n      this.configureMicrosoft();\n    }\n\n    if (currentUser) {\n      getTokens(currentUser.login).then(\n        t => {\n          this.getNewToken(getUniqueTokenName(t, `Analyze \"${component.name}\"`));\n        },\n        () => {}\n      );\n    }\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  configureBitbucket = () => {\n    this.setState({ alm: alms[ALM_KEYS.BITBUCKET], loading: false });\n  };\n\n  configureGithub = () => {\n    const { component } = this.props;\n\n    this.setState({\n      alm: alms[ALM_KEYS.GITHUB]\n    });\n\n    const savedModeId = get(PROJECT_ONBOARDING_MODE_ID, component.key);\n    const mode =\n      autoScanMode.id === savedModeId ? autoScanMode : modes.find(m => m.id === savedModeId);\n    if (mode) {\n      this.setState({ mode });\n    }\n\n    if (!component.alm) {\n      return;\n    }\n\n    const { url } = component.alm;\n\n    if (!url) {\n      return;\n    }\n\n    getGithubLanguages(url).then(\n      almLanguagesStats => {\n        if (this.mounted) {\n          this.setState({\n            almLanguageStats: almLanguagesStats,\n            loading: false\n          });\n        }\n      },\n      () => {\n        this.setState({ loading: false });\n      }\n    );\n  };\n\n  configureMicrosoft = () => {\n    this.setState({ alm: alms[ALM_KEYS.MICROSOFT], loading: false });\n  };\n\n  getNewToken = (tokenName: string) => {\n    generateToken({ name: tokenName }).then(\n      ({ token }: { token: string }) => {\n        this.setToken(token);\n      },\n      () => {}\n    );\n  };\n\n  setToken = (token: string) => {\n    if (this.mounted) {\n      this.setState({ token });\n    }\n  };\n\n  setTutorialDone = (value: boolean) => {\n    save(PROJECT_ONBOARDING_DONE, String(value), this.props.component.key);\n    this.setState({ isTutorialDone: value });\n  };\n\n  spinner = () => (\n    <div className=\"display-flex-justify-center spinner-margin\">\n      <i className=\"spinner global-loading-spinner\" />\n    </div>\n  );\n\n  renderBitbucket = () => {\n    const { component, currentUser } = this.props;\n    const { step, token } = this.state;\n\n    const handleTokenDone = (t: string) => {\n      if (this.mounted) {\n        this.setState({\n          step: Steps.ANALYSIS,\n          token: t\n        });\n      }\n    };\n\n    const handleTokenOpen = () => {\n      this.setState({ step: Steps.TOKEN });\n    };\n\n    return (\n      <>\n        <TutorialSuggestionBitbucket />\n\n        <TokenStep\n          currentUser={currentUser}\n          finished={Boolean(token)}\n          initialTokenName={`Analyze \"${component.name}\"`}\n          onContinue={handleTokenDone}\n          onOpen={handleTokenOpen}\n          open={step === Steps.TOKEN}\n          stepNumber={1}\n        />\n\n        <ProjectAnalysisStep\n          component={component}\n          displayRowLayout={true}\n          open={step === Steps.ANALYSIS}\n          organization={isSonarCloud() ? component.organization : undefined}\n          stepNumber={2}\n          token={token}\n        />\n      </>\n    );\n  };\n\n  renderGithub = () => {\n    const { almLanguageStats, isTutorialDone, mode, token } = this.state;\n\n    if (isTutorialDone) {\n      return <AnalyzeTutorialDone setTutorialDone={this.setTutorialDone} />;\n    }\n\n    const { component, currentUser } = this.props;\n    const Tutorial = mode && tutorials[mode.id];\n\n    const getClassnames = (item: AnalysisMode) =>\n      classnames(`mode-type mode-type-${item.id}`, {\n        [`mode-type-selected`]: mode && mode.id === item.id\n      });\n\n    const isAutoScanEnabled =\n      almLanguageStats && isAutoScannable(almLanguageStats).withAllowedLanguages;\n\n    const setMode = (mode: AnalysisMode | undefined) => {\n      if (mode) {\n        save(PROJECT_ONBOARDING_MODE_ID, mode.id, component.key);\n        remove(PROJECT_STEP_PROGRESS, component.key);\n      } else {\n        remove(PROJECT_ONBOARDING_MODE_ID, component.key);\n      }\n\n      this.setState({ mode });\n    };\n\n    if (!mode || !Tutorial) {\n      return (\n        <div className=\"page-analysis-container page-analysis-container-sonarcloud\">\n          <div className=\"page-analysis big-spacer-top big-spacer-bottom huge-spacer-left huge-spacer-right\">\n            <div className=\"page-header big-spacer-bottom\">\n              <h1 className=\"big-spacer-bottom\">\n                {translate('onboarding.project_analysis.header')}\n              </h1>\n              <p>\n                <InstanceMessage message={translate('onboarding.project_analysis.description')} />\n              </p>\n            </div>\n\n            {isAutoScanEnabled && (\n              <div className={`${getClassnames(autoScanMode)} huge-spacer-top huge-spacer-bottom`}>\n                <div className=\"icon\">\n                  <div className=\"badge badge-new\">BETA</div>\n                </div>\n                <p>{autoScanMode.name}</p>\n                <button\n                  className=\"button big-spacer-top big-spacer-bottom\"\n                  onClick={() => setMode(autoScanMode)}\n                  type=\"button\">\n                  {translate('projects.configure_analysis')}\n                </button>\n              </div>\n            )}\n\n            <div className=\"analysis-modes\">\n              {modes.map(el => (\n                <div className={getClassnames(el)} key={el.id}>\n                  <div className=\"icon\" />\n                  <div className=\"name\">{el.name}</div>\n                  <button\n                    className=\"button big-spacer-top big-spacer-bottom\"\n                    onClick={() => setMode(el)}\n                    type=\"button\">\n                    {translate('projects.configure_analysis')}\n                  </button>\n                </div>\n              ))}\n            </div>\n          </div>\n        </div>\n      );\n    }\n\n    return (\n      <div className=\"page-analysis-container page-analysis-container-sonarcloud\">\n        <BackButton\n          onClick={() => setMode(undefined)}\n          tooltip={translate('onboarding.tutorial.return_to_list')}>\n          {translate('back')}\n        </BackButton>\n\n        <Tutorial\n          component={component}\n          currentUser={currentUser}\n          onDone={() => this.setTutorialDone(true)}\n          setToken={this.setToken}\n          token={token}\n        />\n      </div>\n    );\n  };\n\n  renderMicrosoft = () => {\n    return <TutorialSuggestionVSTS />;\n  };\n\n  render() {\n    const { alm, loading } = this.state;\n\n    if (!alm) {\n      return null;\n    }\n\n    return (\n      <DeferredSpinner customSpinner={<this.spinner />} loading={loading}>\n        {!loading && (\n          <>\n            {alm.id === ALM_KEYS.BITBUCKET && this.renderBitbucket()}\n            {alm.id === ALM_KEYS.GITHUB && this.renderGithub()}\n            {alm.id === ALM_KEYS.MICROSOFT && this.renderMicrosoft()}\n          </>\n        )}\n      </DeferredSpinner>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport { AutoScanAlert } from './AutoScanAlert';\nimport CodeSnippet from '../../../../components/common/CodeSnippet';\nimport { translate } from '../../../../helpers/l10n';\nimport { Button, ResetButtonLink } from '../../../../components/ui/buttons';\nimport Step from '../../components/Step';\nimport DropdownIcon from '../../../../components/icons-components/DropdownIcon';\nimport { TutorialProps } from '../utils';\n\nexport default function ConfigureWithAutoScan({ onDone }: TutorialProps) {\n  const [showCustomizationOptions, setCustomizationOptions] = React.useState<boolean>(false);\n\n  const command = `# Path to sources\n#sonar.sources=.\n#sonar.exclusions=\n#sonar.inclusions=\n\n# Path to tests\n#sonar.tests=\n#sonar.test.exclusions=\n#sonar.test.inclusions=\n\n# Source encoding\n#sonar.sourceEncoding=UTF-8\n\n# Exclusions for copy-paste detection\n#sonar.cpd.exclusions=`;\n\n  const renderForm = () => (\n    <div className=\"boxed-group-inner\">\n      <div className=\"flex-columns\">\n        <div className=\"flex-column-full\">\n          <p className=\"spacer-bottom\">\n            Add this file in the base directory of your default branch or on a PR.\n          </p>\n          <p className=\"spacer-bottom\">\n            You can push an empty <code>.sonarcloud.properties</code> file, this will work fine. In\n            this case, every file in the repository will be considered as a source file.\n          </p>\n\n          <ResetButtonLink onClick={() => setCustomizationOptions(!showCustomizationOptions)}>\n            {showCustomizationOptions ? 'Hide customization options' : 'Show customization options'}\n            <DropdownIcon className=\"little-spacer-left\" turned={showCustomizationOptions} />\n          </ResetButtonLink>\n\n          <div hidden={!showCustomizationOptions}>\n            <p>\n              Here are the supported optional settings for the <code>.sonarcloud.properties</code>{' '}\n              file:\n            </p>\n\n            <CodeSnippet snippet={command} />\n\n            <p>\n              Please refer to the{' '}\n              <a\n                href=\"https://sieg.eu.ngrok.io/documentation/autoscan/\"\n                rel=\"noopener noreferrer\"\n                target=\"_blank\">\n                documentation\n              </a>{' '}\n              for more details.\n            </p>\n          </div>\n        </div>\n      </div>\n      <div className=\"big-spacer-top\">\n        <Button className=\"js-continue\" onClick={onDone}>\n          {translate('onboarding.finish')}\n        </Button>\n      </div>\n    </div>\n  );\n\n  const renderResult = () => null;\n\n  return (\n    <>\n      <h1 className=\"spacer-bottom spacer-top\">\n        {translate('onboarding.analysis.with.autoscan.title')}\n      </h1>\n\n      <p className=\"spacer-bottom\">{translate('onboarding.analysis.with.autoscan.text')}</p>\n\n      <AutoScanAlert />\n\n      <Step\n        finished={false}\n        onOpen={() => {}}\n        open={true}\n        renderForm={renderForm}\n        renderResult={renderResult}\n        stepNumber={1}\n        stepTitle={\n          <FormattedMessage\n            defaultMessage={translate('onboarding.analysis.with.autoscan.filename')}\n            id=\"onboarding.analysis.with.autoscan.filename\"\n            values={{\n              filename: <code className=\"rule\">.sonarcloud.properties</code>\n            }}\n          />\n        }\n      />\n    </>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport ProjectAnalysisStepFromBuildTool, {\n  ProjectAnalysisModes\n} from '../../components/ProjectAnalysisStepFromBuildTool';\nimport { TutorialProps } from '../utils';\nimport { translate } from '../../../../helpers/l10n';\n\nexport default function ConfigureWithLocalScanner({\n  component,\n  currentUser,\n  onDone,\n  setToken,\n  token\n}: TutorialProps) {\n  return (\n    <>\n      <h1 className=\"spacer-bottom spacer-top\">\n        {translate('onboarding.analysis.with.local.title')}\n      </h1>\n\n      <ProjectAnalysisStepFromBuildTool\n        component={component}\n        currentUser={currentUser}\n        displayRowLayout={true}\n        mode={ProjectAnalysisModes.Custom}\n        onDone={onDone}\n        open={true}\n        organization={component.organization}\n        setToken={setToken}\n        stepNumber={1}\n        token={token}\n      />\n    </>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport ProjectAnalysisStepFromBuildTool, {\n  ProjectAnalysisModes\n} from '../../components/ProjectAnalysisStepFromBuildTool';\nimport { TutorialProps } from '../utils';\nimport { translate } from '../../../../helpers/l10n';\n\nexport default function ConfigureWithOtherCI({\n  component,\n  currentUser,\n  onDone,\n  setToken,\n  token\n}: TutorialProps) {\n  return (\n    <>\n      <h1 className=\"spacer-bottom spacer-top\">\n        {translate('onboarding.analysis.with.yourci.title')}\n      </h1>\n\n      <ProjectAnalysisStepFromBuildTool\n        component={component}\n        currentUser={currentUser}\n        displayRowLayout={true}\n        mode={ProjectAnalysisModes.CI}\n        onDone={onDone}\n        open={true}\n        organization={component.organization}\n        setToken={setToken}\n        stepNumber={1}\n        token={token}\n      />\n    </>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { connect } from 'react-redux';\nimport { FormattedMessage } from 'react-intl';\nimport AnalyzeTutorial from '../../tutorials/analyzeProject/AnalyzeTutorial';\nimport AnalyzeTutorialSonarCloud from '../../tutorials/analyzeProject/AnalyzeTutorialSonarCloud';\nimport MetaContainer from '../meta/MetaContainer';\nimport { isLongLivingBranch, isBranch, isMainBranch } from '../../../helpers/branches';\nimport { translate } from '../../../helpers/l10n';\nimport { isLoggedIn } from '../../../helpers/users';\nimport { getCurrentUser, Store } from '../../../store/rootReducer';\nimport { Alert } from '../../../components/ui/Alert';\nimport { isSonarCloud } from '../../../helpers/system';\n\ninterface OwnProps {\n  branchLike?: T.BranchLike;\n  branchLikes: T.BranchLike[];\n  component: T.Component;\n  hasAnalyses?: boolean;\n  onComponentChange: (changes: {}) => void;\n}\n\ninterface StateProps {\n  currentUser: T.CurrentUser;\n}\n\ntype Props = OwnProps & StateProps;\n\nexport function EmptyOverview({\n  branchLike,\n  branchLikes,\n  component,\n  currentUser,\n  hasAnalyses,\n  onComponentChange\n}: Props) {\n  const hasBranches = branchLikes.length > 1;\n  const hasBadBranchConfig =\n    branchLikes.length > 2 ||\n    (branchLikes.length === 2 && branchLikes.some(branch => isLongLivingBranch(branch)));\n  return (\n    <div className=\"page page-limited\">\n      <div className=\"overview page-with-sidebar\">\n        <div className=\"overview-main page-main\">\n          {isLoggedIn(currentUser) && isMainBranch(branchLike) ? (\n            <>\n              {hasBranches && (\n                <WarningMessage\n                  branchLike={branchLike}\n                  message={\n                    hasBadBranchConfig\n                      ? translate('provisioning.no_analysis_on_main_branch.bad_configuration')\n                      : translate('provisioning.no_analysis_on_main_branch')\n                  }\n                />\n              )}\n              {!hasBranches &&\n                !hasAnalyses &&\n                (isSonarCloud() ? (\n                  <AnalyzeTutorialSonarCloud component={component} currentUser={currentUser} />\n                ) : (\n                  <AnalyzeTutorial component={component} currentUser={currentUser} />\n                ))}\n            </>\n          ) : (\n            <WarningMessage\n              branchLike={branchLike}\n              message={translate('provisioning.no_analysis_on_main_branch')}\n            />\n          )}\n        </div>\n\n        {!isSonarCloud() && (\n          <div className=\"overview-sidebar page-sidebar-fixed\">\n            <MetaContainer\n              branchLike={branchLike}\n              component={component}\n              onComponentChange={onComponentChange}\n            />\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport function WarningMessage({\n  branchLike,\n  message\n}: {\n  branchLike?: T.BranchLike;\n  message: string;\n}) {\n  if (!isBranch(branchLike)) {\n    return null;\n  }\n  return (\n    <Alert variant=\"warning\">\n      <FormattedMessage\n        defaultMessage={message}\n        id={message}\n        values={{\n          branchName: branchLike.name,\n          branchType: translate('branches.main_branch')\n        }}\n      />\n    </Alert>\n  );\n}\n\nconst mapStateToProps = (state: Store) => ({\n  currentUser: getCurrentUser(state)\n});\n\nexport default connect(mapStateToProps)(EmptyOverview);\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport Modal, { ModalProps } from './Modal';\n\nexport interface ChildrenProps {\n  onCloseClick: (event?: React.SyntheticEvent<HTMLElement>) => void;\n  onFormSubmit: (event: React.SyntheticEvent<HTMLFormElement>) => void;\n  onSubmitClick: (event?: React.SyntheticEvent<HTMLElement>) => void;\n  submitting: boolean;\n}\n\ninterface Props extends ModalProps {\n  children: (props: ChildrenProps) => React.ReactNode;\n  header: string;\n  onClose: () => void;\n  onSubmit: () => void | Promise<void>;\n}\n\ninterface State {\n  submitting: boolean;\n}\n\nexport default class SimpleModal extends React.Component<Props, State> {\n  mounted = false;\n  state: State = { submitting: false };\n\n  componentDidMount() {\n    this.mounted = true;\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  stopSubmitting = () => {\n    if (this.mounted) {\n      this.setState({ submitting: false });\n    }\n  };\n\n  handleCloseClick = (event?: React.SyntheticEvent<HTMLElement>) => {\n    if (event) {\n      event.preventDefault();\n      event.currentTarget.blur();\n    }\n    this.props.onClose();\n  };\n\n  handleFormSubmit = (event: React.SyntheticEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    this.submit();\n  };\n\n  handleSubmitClick = (event?: React.SyntheticEvent<HTMLElement>) => {\n    if (event) {\n      event.preventDefault();\n      event.currentTarget.blur();\n    }\n    this.submit();\n  };\n\n  submit = () => {\n    const result = this.props.onSubmit();\n    if (result) {\n      this.setState({ submitting: true });\n      result.then(this.stopSubmitting, this.stopSubmitting);\n    }\n  };\n\n  render() {\n    const { children, header, onClose, onSubmit, ...modalProps } = this.props;\n    return (\n      <Modal contentLabel={header} onRequestClose={onClose} {...modalProps}>\n        {children({\n          onCloseClick: this.handleCloseClick,\n          onFormSubmit: this.handleFormSubmit,\n          onSubmitClick: this.handleSubmitClick,\n          submitting: this.state.submitting\n        })}\n      </Modal>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { ModalProps } from './Modal';\nimport SimpleModal, { ChildrenProps } from './SimpleModal';\nimport DeferredSpinner from '../common/DeferredSpinner';\nimport { SubmitButton, ResetButtonLink } from '../ui/buttons';\nimport { translate } from '../../helpers/l10n';\n\nexport interface ConfirmModalProps<T> extends ModalProps {\n  cancelButtonText?: string;\n  confirmButtonText: string;\n  confirmData?: T;\n  confirmDisable?: boolean;\n  isDestructive?: boolean;\n  onConfirm: (data?: T) => void | Promise<void | Response>;\n}\n\ninterface Props<T> extends ConfirmModalProps<T> {\n  header: string;\n  headerDescription?: React.ReactNode;\n  onClose: () => void;\n}\n\nexport default class ConfirmModal<T = string> extends React.PureComponent<Props<T>> {\n  mounted = false;\n\n  componentDidMount() {\n    this.mounted = true;\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  handleSubmit = () => {\n    const result = this.props.onConfirm(this.props.confirmData);\n    if (result) {\n      return result.then(this.props.onClose, () => {});\n    } else {\n      this.props.onClose();\n      return undefined;\n    }\n  };\n\n  renderModalContent = ({ onCloseClick, onFormSubmit, submitting }: ChildrenProps) => {\n    const {\n      children,\n      confirmButtonText,\n      confirmDisable,\n      header,\n      headerDescription,\n      isDestructive,\n      cancelButtonText = translate('cancel')\n    } = this.props;\n    return (\n      <form onSubmit={onFormSubmit}>\n        <header className=\"modal-head\">\n          <h2>{header}</h2>\n          {headerDescription}\n        </header>\n        <div className=\"modal-body\">{children}</div>\n        <footer className=\"modal-foot\">\n          <DeferredSpinner className=\"spacer-right\" loading={submitting} />\n          <SubmitButton\n            autoFocus={true}\n            className={isDestructive ? 'button-red' : undefined}\n            disabled={submitting || confirmDisable}>\n            {confirmButtonText}\n          </SubmitButton>\n          <ResetButtonLink disabled={submitting} onClick={onCloseClick}>\n            {cancelButtonText}\n          </ResetButtonLink>\n        </footer>\n      </form>\n    );\n  };\n\n  render() {\n    const { header, onClose, noBackdrop, size } = this.props;\n    const modalProps = { header, onClose, noBackdrop, size };\n    return (\n      <SimpleModal onSubmit={this.handleSubmit} {...modalProps}>\n        {this.renderModalContent}\n      </SimpleModal>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { isLoggedIn } from './users';\n\nexport function getAlmMembersUrl(key: string, url: string): string {\n  if (!url.endsWith('/')) {\n    url += '/';\n  }\n  if (isGithub(key)) {\n    return url.replace('github.com/', 'github.com/orgs/') + 'people';\n  }\n  return url + 'profile/members';\n}\n\nexport function getUserAlmKey(user: T.CurrentUser) {\n  return isLoggedIn(user) && user.externalProvider\n    ? sanitizeAlmId(user.externalProvider)\n    : undefined;\n}\n\nexport function hasAdvancedALMIntegration(user: T.CurrentUser) {\n  return (\n    isLoggedIn(user) && (isBitbucket(user.externalProvider) || isGithub(user.externalProvider))\n  );\n}\n\nexport function isBitbucket(almKey?: string): boolean {\n  return almKey ? almKey.startsWith('bitbucket') : false;\n}\n\nexport function isGithub(almKey?: string): boolean {\n  return almKey === 'github';\n}\n\nexport function isVSTS(almKey?: string): boolean {\n  return almKey === 'microsoft';\n}\n\nexport function isPersonal(organization?: T.AlmOrganization) {\n  return Boolean(organization && organization.personal);\n}\n\nexport function sanitizeAlmId(almKey: string) {\n  if (isBitbucket(almKey)) {\n    return 'bitbucket';\n  }\n  return almKey;\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport * as classNames from 'classnames';\nimport Tooltip from './Tooltip';\n\ninterface Option {\n  disabled?: boolean;\n  label: string;\n  tooltip?: string;\n  value: string;\n}\n\ninterface Props {\n  className?: string;\n  name: string;\n  onCheck: (value: string) => void;\n  options: Option[];\n  value?: string;\n}\n\nexport default class RadioToggle extends React.PureComponent<Props> {\n  static defaultProps = {\n    disabled: false,\n    value: null\n  };\n\n  handleChange = (e: React.SyntheticEvent<HTMLInputElement>) => {\n    const newValue = e.currentTarget.value;\n    this.props.onCheck(newValue);\n  };\n\n  renderOption = (option: Option) => {\n    const checked = option.value === this.props.value;\n    const htmlId = this.props.name + '__' + option.value;\n    return (\n      <li key={option.value}>\n        <input\n          checked={checked}\n          disabled={option.disabled}\n          id={htmlId}\n          name={this.props.name}\n          onChange={this.handleChange}\n          type=\"radio\"\n          value={option.value}\n        />\n        <Tooltip overlay={option.tooltip || undefined}>\n          <label htmlFor={htmlId}>{option.label}</label>\n        </Tooltip>\n      </li>\n    );\n  };\n\n  render() {\n    return (\n      <ul className={classNames('radio-toggle', this.props.className)}>\n        {this.props.options.map(this.renderOption)}\n      </ul>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { getJSON, postJSON, post, requestTryAndRepeatUntil, getCorsJSON } from '../helpers/request';\nimport throwGlobalError from '../app/utils/throwGlobalError';\nimport { AlmLanguagesStats } from '../apps/tutorials/analyzeProject/utils';\n\nexport function bindAlmOrganization(data: { installationId: string; organization: string }) {\n  return post('/api/alm_integration/bind_organization', data).catch(throwGlobalError);\n}\n\nexport function getAlmAppInfo(): Promise<{ application: T.AlmApplication }> {\n  return getJSON('/api/alm_integration/show_app_info').catch(throwGlobalError);\n}\n\nexport interface GetAlmOrganizationResponse {\n  almOrganization: T.AlmOrganization;\n  boundOrganization?: T.OrganizationBase;\n}\n\nexport function getAlmOrganization(data: {\n  installationId: string;\n}): Promise<GetAlmOrganizationResponse> {\n  return requestTryAndRepeatUntil(\n    () => getJSON('/api/alm_integration/show_organization', data),\n    { max: 25, slowThreshold: 20 },\n    () => true,\n    [404]\n  )\n    .catch(throwGlobalError)\n    .then(({ almOrganization, boundOrganization }) => ({\n      almOrganization: {\n        ...almOrganization,\n        name: almOrganization.name || almOrganization.key\n      },\n      boundOrganization\n    }));\n}\n\nexport function getRepositories(data: {\n  organization: string;\n}): Promise<{ repositories: T.AlmRepository[] }> {\n  return getJSON('/api/alm_integration/list_repositories', data).catch(throwGlobalError);\n}\n\nexport function listUnboundApplications(): Promise<T.AlmUnboundApplication[]> {\n  return getJSON('/api/alm_integration/list_unbound_applications').then(\n    ({ applications }) =>\n      applications.map((app: T.AlmUnboundApplication) => ({ ...app, name: app.name || app.key })),\n    throwGlobalError\n  );\n}\n\nexport function provisionProject(data: {\n  installationKeys: string[];\n  organization: string;\n}): Promise<{ projects: Array<{ projectKey: string }> }> {\n  return postJSON('/api/alm_integration/provision_projects', {\n    ...data,\n    installationKeys: data.installationKeys.join(',')\n  }).catch(throwGlobalError);\n}\n\nexport function getGithubLanguages(url: string): Promise<AlmLanguagesStats> {\n  // We don't want to throwGlobalError\n  const apiUrl = url.replace('https://github.com/', 'https://api.github.com/repos/');\n  return getCorsJSON(`${apiUrl}/languages`);\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\n/* eslint-disable jsx-a11y/no-static-element-interactions, jsx-a11y/no-noninteractive-tabindex */\nimport * as React from 'react';\nimport * as classNames from 'classnames';\n\ninterface Props {\n  finished?: boolean;\n  onOpen: VoidFunction;\n  open: boolean;\n  renderForm: () => React.ReactNode;\n  renderResult: () => React.ReactNode;\n  stepNumber: number;\n  stepTitle: React.ReactNode;\n}\n\nexport default function Step(props: Props) {\n  const className = classNames('boxed-group', 'onboarding-step', {\n    'is-open': props.open,\n    'is-finished': props.finished\n  });\n\n  const clickable = !props.open && props.finished;\n\n  const handleClick = (event: React.MouseEvent<HTMLDivElement>) => {\n    event.preventDefault();\n    props.onOpen();\n  };\n\n  return (\n    <div\n      className={className}\n      onClick={clickable ? handleClick : undefined}\n      role={clickable ? 'button' : undefined}\n      tabIndex={clickable ? 0 : undefined}>\n      <div className=\"onboarding-step-number\">{props.stepNumber}</div>\n      {!props.open && props.renderResult()}\n      <div className=\"boxed-group-header\">\n        <h2>{props.stepTitle}</h2>\n      </div>\n      {!props.open && <div className=\"boxed-group-inner\" />}\n      <div className={classNames({ hidden: !props.open })}>{props.renderForm()}</div>\n    </div>\n  );\n}\n","\nvar content = require(\"!!../../../../../node_modules/css-loader/dist/cjs.js??ref--6-1!../../../../../node_modules/postcss-loader/src/index.js??postcss!./styles.css\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../../../node_modules/css-loader/dist/cjs.js??ref--6-1!../../../../../node_modules/postcss-loader/src/index.js??postcss!./styles.css\", function() {\n\t\tvar newContent = require(\"!!../../../../../node_modules/css-loader/dist/cjs.js??ref--6-1!../../../../../node_modules/postcss-loader/src/index.js??postcss!./styles.css\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","exports = module.exports = require(\"../../../../../node_modules/css-loader/dist/runtime/api.js\")(false);\n// Module\nexports.push([module.id, \".onboarding-step{position:relative;padding-left:34px}.onboarding-step:not(.is-open):not(.is-finished){opacity:.4}.onboarding-step .boxed-group-actions{height:24px;line-height:24px}.onboarding-step hr{margin-left:-54px}.onboarding-step-number{position:absolute;top:15px;left:15px;width:24px;height:24px;line-height:24px;border-radius:24px;background-color:#b9b9b9;color:#fff;font-size:14px;text-align:center}.onboarding-step.is-open .onboarding-step-number{background-color:#236a97}.onboarding-step.is-finished{cursor:pointer;outline:none}\", \"\"]);\n\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { getJSON, postJSON, post } from '../helpers/request';\nimport throwGlobalError from '../app/utils/throwGlobalError';\n\n/** List tokens for given user login */\nexport function getTokens(login: string): Promise<T.UserToken[]> {\n  return getJSON('/api/user_tokens/search', { login }).then(r => r.userTokens, throwGlobalError);\n}\n\nexport function generateToken(data: { name: string; login?: string }): Promise<T.NewUserToken> {\n  return postJSON('/api/user_tokens/generate', data).catch(throwGlobalError);\n}\n\nexport function revokeToken(data: { name: string; login?: string }) {\n  return post('/api/user_tokens/revoke', data).catch(throwGlobalError);\n}\n"],"sourceRoot":""}