{"version":3,"sources":["webpack:///./src/main/js/components/common/BranchStatus.tsx","webpack:///./src/main/js/components/icons-components/WarningIcon.tsx","webpack:///./src/main/js/api/branches.ts","webpack:///./src/main/js/app/components/ComponentContext.tsx","webpack:///./node_modules/lodash/differenceBy.js","webpack:///../sonar-docs/src/tooltips/branches/no-branch-support.md","webpack:///../sonar-docs/src/tooltips/branches/single-branch.md","webpack:///./src/main/js/app/components/nav/component/ComponentNav.css?68e5","webpack:///./src/main/js/app/components/nav/component/ComponentNav.css","webpack:///./src/main/js/app/components/ComponentContainerNotFound.tsx","webpack:///./src/main/js/app/components/nav/component/ComponentNavBranchesMenuItem.tsx","webpack:///./src/main/js/app/components/nav/component/ComponentNavBranchesMenu.tsx","webpack:///./src/main/js/app/components/nav/component/ComponentNavBranch.tsx","webpack:///./src/main/js/app/components/nav/component/ComponentNavHeader.tsx","webpack:///./src/main/js/app/components/nav/component/ComponentNavWarnings.tsx","webpack:///./src/main/js/app/components/nav/component/ComponentNavMeta.tsx","webpack:///./src/main/js/app/components/nav/component/ComponentNavMenu.tsx","webpack:///./src/main/js/app/components/nav/component/ComponentNavLicenseNotif.tsx","webpack:///./src/main/js/app/components/nav/component/ComponentNavBgTaskNotif.tsx","webpack:///./src/main/js/app/components/nav/component/ComponentNav.tsx","webpack:///./src/main/js/app/components/ComponentContainer.tsx","webpack:///./src/main/js/components/docs/DocTooltip.tsx","webpack:///./src/main/js/helpers/almIntegrations.ts","webpack:///./src/main/js/apps/background-tasks/constants.ts","webpack:///./src/main/js/components/hoc/withAppState.tsx","webpack:///./src/main/js/api/ce.ts","webpack:///./src/main/js/api/nav.ts","webpack:///./src/main/js/components/common/OrganizationHelmet.tsx"],"names":["react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react_redux__WEBPACK_IMPORTED_MODULE_1__","_ui_Level__WEBPACK_IMPORTED_MODULE_2__","_store_rootReducer__WEBPACK_IMPORTED_MODULE_3__","__webpack_exports__","Object","state","_a","branchLike","component","status","level","small","d","WarningIcon","_Icon__WEBPACK_IMPORTED_MODULE_1__","_app_theme__WEBPACK_IMPORTED_MODULE_2__","className","_b","fill","size","style","getBranches","getPullRequests","deleteBranch","deletePullRequest","renameBranch","_helpers_request__WEBPACK_IMPORTED_MODULE_0__","_app_utils_throwGlobalError__WEBPACK_IMPORTED_MODULE_1__","project","then","r","branches","pullRequests","data","catch","name","ComponentContext","undefined","baseDifference","baseFlatten","baseIteratee","baseRest","isArrayLikeObject","last","differenceBy","array","values","iteratee","module","exports","content","i","options","hmr","transform","insertInto","locals","push","ComponentContainerNotFound","index_js_exposed","Helmet","defaultTitle","l10n","defer","id","react_router_es","to","ComponentNavBranchesMenuItem","props","__rest","displayName","helpers_branches","shouldBeIndented","isOrphan","key","onMouseEnter","onSelect","ref","innerRef","classnames","active","selected","urls","title","BranchIcon","big-spacer-left","BranchStatus","ComponentNavBranchesMenu_ComponentNavBranchesMenu","_super","ComponentNavBranchesMenu","_this","apply","this","arguments","query","getFilteredBranchLikes","toLowerCase","branchLikes","filter","matchBranchName","includes","matchPullRequestTitleOrId","handleSearchChange","setState","handleKeyDown","event","keyCode","preventDefault","openSelected","selectPrevious","selectNext","getSelected","router","getProjectBranchUrl","index","findIndex","b","length","handleSelect","find","currentBranchLike","renderSearch","SearchBox","autoFocus","onChange","onKeyDown","placeholder","value","renderBranchesList","items","map","previous","isPreviousOrphan","showDivider","showOrphanHeader","showPullRequestHeader","showShortLivingBranchHeader","isSelected","HelpTooltip","overlay","node","selectedBranchNode","listNode","__extends","prototype","componentDidMount","scrollToSelectedBranch","componentDidUpdate","smooth","scrolling","parent","render","showManageLink","qualifier","configuration","showSettings","Dropdown","noPadding","pathname","component_ComponentNavBranchesMenu","withRouter","ComponentNavBranch_ComponentNavBranch","ComponentNavBranch","mounted","dropdownOpen","handleClick","stopPropagation","currentTarget","blur","closeDropdown","renderMergeBranch","mergeBranch","index_es","defaultMessage","target","branch","renderOverlay","breadcrumbs","ComponentNavBranch_extends","componentWillReceiveProps","nextProps","location","componentWillUnmount","system","appState","branchesEnabled","theme","PlusCircleIcon","DocTooltip","doc","Promise","resolve","bind","Toggler","onRequestClose","open","canAdmin","onClose","href","onClick","DropdownIcon","component_ComponentNavBranch","withAppState","component_ComponentNavHeader","es","ownProps","organization","rootReducer","shouldLinkLast","lastItem","OrganizationHelmet","OrganizationAvatar","OrganizationLink","item","QualifierIcon","alm","url","rel","alt","almIntegrations","height","src","width","AnalysisWarningsModal","lazyLoad","all","e","ComponentNavWarnings","modal","handleCloseModal","ComponentNavWarnings_extends","warnings","String","component_ComponentNavMeta","currentUser","mainBranch","longBranch","currentPage","type","getCurrentPage","displayVersion","version","component_ComponentNavWarnings","analysisDate","DateTimeFormatter","date","Tooltip","mouseEnterDelay","users","Favorite","favorite","Boolean","isFavorite","HomePageSelect","DetachIcon","SETTINGS_URLS","ComponentNavMenu_ComponentNavMenu","ComponentNavMenu","getQuery","__assign","renderExtension","isAdmin","activeClassName","ComponentNavMenu_extends","isProject","isDeveloper","isPortfolio","isApplication","getConfiguration","renderDashboardLink","renderCodeLink","renderActivityLink","renderIssuesLink","isIssuesActive","startsWith","resolved","renderComponentMeasuresLink","renderSecurityReports","extensions","some","extension","renderAdministration","isSettingsActive","window","indexOf","adminLinks","renderAdministrationLinks","link","data-test","tagName","onToggleClick","aria-expanded","aria-haspopup","renderSettingsLink","renderBranchesLink","renderProfilesLink","renderQualityGateLink","renderCustomMeasuresLink","renderLinksLink","renderPermissionsLink","renderBackgroundTasksLink","renderUpdateKeyLink","renderWebhooksLink","renderAdminExtensions","renderDeletionLink","showQualityProfiles","showQualityGates","showManualMeasures","showLinks","showPermissions","showBackgroundTasks","showUpdateKey","renderExtensions","withoutSecurityExtension","NavBarTabs","component_ComponentNavMenu","ComponentNavLicenseNotif_ComponentNavLicenseNotif","ComponentNavLicenseNotif","loading","fetchIsValidLicense","marketplace","isValidLicense","ComponentNavLicenseNotif_extends","currentTask","errorType","Alert","display","variant","errorMessage","component_ComponentNavLicenseNotif","ComponentNavBgTaskNotif","ComponentNavBgTaskNotif_extends","renderMessage","messageKey","currentTaskOnSameBranch","isInProgress","isPending","constants","ALL","FAILED","pullRequest","pullRequestTitle","message","ComponentNav","populateRecentHistory","RecentHistory","add","ComponentNav_extends","prevProps","notifComponent","component_ComponentNavBgTaskNotif","ContextNavBar","notif","FETCH_STATUS_WAIT_TIME","ComponentContainer_ComponentContainer","ComponentContainer","addQualifier","ComponentContainer_assign","fetchBranches","breadcrumb","api_branches","concat","getCurrentBranchLike","registerBranchStatuses","fetchStatus","ce","current","queue","shouldFetchComponent_1","tasksInProgress","newCurrentTask","getCurrentTask","pendingTasks","getPendingTasks","newTasksInProgress","task","IN_PROGRESS","currentTaskChanged","progressChanged","differenceBy_default","clearTimeout","watchStatusTimer","setTimeout","PENDING","fetchComponent","fetchWarnings","isMain","isSameBranch","branchType","forEach","registerBranchStatus","qualityGateStatus","handleComponentChange","changes","handleBranchesChange","ComponentContainer_extends","api_nav","components","nav","componentWithQualifier","fetchOrganization","param","response","requireAuthorization","nav_component_ComponentNav","Provider","children","onBranchesChange","onComponentChange","mapDispatchToProps","rootActions","DocMarkdownBlock","_lazyLoad__WEBPACK_IMPORTED_MODULE_2__","close","default","document","addEventListener","removeEventListener","_controls_HelpTooltip__WEBPACK_IMPORTED_MODULE_1__","childProps","overlayProps","isTooltip","getAlmMembersUrl","getUserAlmKey","hasAdvancedALMIntegration","isBitbucket","isGithub","isVSTS","isPersonal","sanitizeAlmId","_users__WEBPACK_IMPORTED_MODULE_0__","endsWith","replace","user","externalProvider","almKey","personal","STATUSES","ALL_TYPES","CURRENTS","DEFAULT_FILTERS","DEBOUNCE_DELAY","ALL_EXCEPT_PENDING","SUCCESS","CANCELED","ONLY_CURRENTS","taskType","currents","minSubmittedAt","maxExecutedAt","WrappedComponent","Wrapper","_utils__WEBPACK_IMPORTED_MODULE_2__","getAnalysisStatus","getActivity","getStatus","getTask","cancelTask","cancelAllTasks","getTasksForComponent","getTypes","getWorkers","setWorkerCount","componentId","assign","additionalFields","taskTypes","count","getComponentNavigation","getMarketplaceNavigation","getSettingsNavigation","react_helmet__WEBPACK_IMPORTED_MODULE_1__","react_helmet__WEBPACK_IMPORTED_MODULE_1___default","n","a","titleTemplate"],"mappings":"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","file":"js/296.1562761687107.chunk.js","sourcesContent":["/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { connect } from 'react-redux';\nimport Level from '../ui/Level';\nimport { Store, getBranchStatusByBranchLike } from '../../store/rootReducer';\n\ninterface Props {\n  branchLike: T.BranchLike;\n  component: string;\n  status?: string;\n}\n\nexport function BranchStatus({ status }: Props) {\n  if (!status) {\n    return null;\n  }\n\n  return <Level level={status} small={true} />;\n}\n\nconst mapStateToProps = (state: Store, { branchLike, component }: Props) => {\n  const { status } = getBranchStatusByBranchLike(state, component, branchLike);\n  return { status };\n};\n\nexport default connect(mapStateToProps)(BranchStatus);\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport Icon, { IconProps } from './Icon';\nimport * as theme from '../../app/theme';\n\nexport default function WarningIcon({ className, fill = theme.warningIconColor, size }: IconProps) {\n  return (\n    <Icon className={className} size={size}>\n      <path\n        d=\"M9 12.242v-1.484c0-.14-.11-.258-.25-.258h-1.5c-.14 0-.25.117-.25.258v1.484c0 .14.11.258.25.258h1.5c.14 0 .25-.117.25-.258zM8.984 9.32l.141-3.586a.189.189 0 0 0-.078-.148C9 5.546 8.93 5.5 8.859 5.5H7.141c-.07 0-.141.047-.188.086-.055.039-.078.117-.078.164l.133 3.57c0 .102.117.18.265.18H8.72c.14 0 .258-.078.265-.18zm-.109-7.297l6 11A1 1 0 0 1 14 14.5H2a1 1 0 0 1-.875-1.477l6-11a.994.994 0 0 1 1.75 0z\"\n        style={{ fill }}\n      />\n    </Icon>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { getJSON, post } from '../helpers/request';\nimport throwGlobalError from '../app/utils/throwGlobalError';\n\nexport function getBranches(project: string): Promise<T.Branch[]> {\n  return getJSON('/api/project_branches/list', { project }).then(r => r.branches, throwGlobalError);\n}\n\nexport function getPullRequests(project: string): Promise<T.PullRequest[]> {\n  return getJSON('/api/project_pull_requests/list', { project }).then(\n    r => r.pullRequests,\n    throwGlobalError\n  );\n}\n\nexport function deleteBranch(data: { branch: string; project: string }) {\n  return post('/api/project_branches/delete', data).catch(throwGlobalError);\n}\n\nexport function deletePullRequest(data: { project: string; pullRequest: string }) {\n  return post('/api/project_pull_requests/delete', data).catch(throwGlobalError);\n}\n\nexport function renameBranch(project: string, name: string) {\n  return post('/api/project_branches/rename', { project, name }).catch(throwGlobalError);\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\n\ninterface ComponentContextType {\n  branchLike: T.BranchLike | undefined;\n  component: T.Component | undefined;\n}\n\nexport const ComponentContext = React.createContext<ComponentContextType>({\n  branchLike: undefined,\n  component: undefined\n});\n","var baseDifference = require('./_baseDifference'),\n    baseFlatten = require('./_baseFlatten'),\n    baseIteratee = require('./_baseIteratee'),\n    baseRest = require('./_baseRest'),\n    isArrayLikeObject = require('./isArrayLikeObject'),\n    last = require('./last');\n\n/**\n * This method is like `_.difference` except that it accepts `iteratee` which\n * is invoked for each element of `array` and `values` to generate the criterion\n * by which they're compared. The order and references of result values are\n * determined by the first array. The iteratee is invoked with one argument:\n * (value).\n *\n * **Note:** Unlike `_.pullAllBy`, this method returns a new array.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Array\n * @param {Array} array The array to inspect.\n * @param {...Array} [values] The values to exclude.\n * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n * @returns {Array} Returns the new array of filtered values.\n * @example\n *\n * _.differenceBy([2.1, 1.2], [2.3, 3.4], Math.floor);\n * // => [1.2]\n *\n * // The `_.property` iteratee shorthand.\n * _.differenceBy([{ 'x': 2 }, { 'x': 1 }], [{ 'x': 1 }], 'x');\n * // => [{ 'x': 2 }]\n */\nvar differenceBy = baseRest(function(array, values) {\n  var iteratee = last(values);\n  if (isArrayLikeObject(iteratee)) {\n    iteratee = undefined;\n  }\n  return isArrayLikeObject(array)\n    ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true), baseIteratee(iteratee, 2))\n    : [];\n});\n\nmodule.exports = differenceBy;\n","export default \"**Get the most out of SonarQube with branches analysis**\\n\\nAnalyze each branch of your project separately with the Developer Edition.\\n\\n---\\n\\n[Learn More](https://redirect.sonarsource.com/editions/developer.html)\\n\"","export default \"**Learn how to analyze branches in {instance}**\\n\\nQuickly setup branch analysis and get separate insights for each of your branches and pull requests.\\n\\n---\\n\\n[Branches Documentation](/branches/overview/)  \\n[Pull Request Analysis](/analysis/pull-request/)\\n\"","\nvar content = require(\"!!../../../../../../../node_modules/css-loader/dist/cjs.js??ref--6-1!../../../../../../../node_modules/postcss-loader/src/index.js??postcss!./ComponentNav.css\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../../../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../../../../../node_modules/css-loader/dist/cjs.js??ref--6-1!../../../../../../../node_modules/postcss-loader/src/index.js??postcss!./ComponentNav.css\", function() {\n\t\tvar newContent = require(\"!!../../../../../../../node_modules/css-loader/dist/cjs.js??ref--6-1!../../../../../../../node_modules/postcss-loader/src/index.js??postcss!./ComponentNav.css\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","exports = module.exports = require(\"../../../../../../../node_modules/css-loader/dist/runtime/api.js\")(false);\n// Module\nexports.push([module.id, \".navbar-context-branches{display:inline-flex;justify-content:center;align-items:center;flex-shrink:1!important;min-width:0;line-height:16px;margin-left:16px;font-size:13px}.navbar-context-branches .popup{min-width:430px;max-width:650px}.navbar-context-meta-branch-menu-title{padding-left:24px}.navbar-context-meta-branch-menu-item{display:flex!important;justify-content:space-between;align-items:center}.navbar-context-meta-branch-menu-item-name{flex:0 1 550px;min-width:0}.navbar-context-meta-branch-menu-item-actions{height:12px;margin-left:32px}\", \"\"]);\n\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { Helmet } from 'react-helmet';\nimport { Link } from 'react-router';\nimport { translate } from '../../helpers/l10n';\n\nexport default function ComponentContainerNotFound() {\n  return (\n    <>\n      <Helmet defaultTitle={translate('404_not_found')} defer={false} />\n      <div className=\"page-wrapper-simple\" id=\"bd\">\n        <div className=\"page-simple\" id=\"nonav\">\n          <h2 className=\"big-spacer-bottom\">{translate('dashboard.project_not_found')}</h2>\n          <p className=\"spacer-bottom\">{translate('dashboard.project_not_found.2')}</p>\n          <p>\n            <Link to=\"/\">{translate('go_back_to_homepage')}</Link>\n          </p>\n        </div>\n      </div>\n    </>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { Link } from 'react-router';\nimport * as classNames from 'classnames';\nimport BranchStatus from '../../../../components/common/BranchStatus';\nimport BranchIcon from '../../../../components/icons-components/BranchIcon';\nimport {\n  isShortLivingBranch,\n  getBranchLikeDisplayName,\n  getBranchLikeKey,\n  isMainBranch,\n  isPullRequest\n} from '../../../../helpers/branches';\nimport { translate } from '../../../../helpers/l10n';\nimport { getBranchLikeUrl } from '../../../../helpers/urls';\n\nexport interface Props {\n  branchLike: T.BranchLike;\n  component: T.Component;\n  onSelect: (branchLike: T.BranchLike) => void;\n  selected: boolean;\n  innerRef?: (node: HTMLLIElement) => void;\n}\n\nexport default function ComponentNavBranchesMenuItem({ branchLike, ...props }: Props) {\n  const handleMouseEnter = () => {\n    props.onSelect(branchLike);\n  };\n\n  const displayName = getBranchLikeDisplayName(branchLike);\n  const shouldBeIndented =\n    (isShortLivingBranch(branchLike) && !branchLike.isOrphan) || isPullRequest(branchLike);\n\n  return (\n    <li key={getBranchLikeKey(branchLike)} onMouseEnter={handleMouseEnter} ref={props.innerRef}>\n      <Link\n        className={classNames('navbar-context-meta-branch-menu-item', {\n          active: props.selected\n        })}\n        to={getBranchLikeUrl(props.component.key, branchLike)}>\n        <div\n          className=\"navbar-context-meta-branch-menu-item-name text-ellipsis\"\n          title={displayName}>\n          <BranchIcon\n            branchLike={branchLike}\n            className={classNames('little-spacer-right', { 'big-spacer-left': shouldBeIndented })}\n          />\n          {displayName}\n          {isMainBranch(branchLike) && (\n            <div className=\"outline-badge spacer-left\">{translate('branches.main_branch')}</div>\n          )}\n        </div>\n        <div className=\"big-spacer-left note\">\n          <BranchStatus branchLike={branchLike} component={props.component.key} />\n        </div>\n      </Link>\n    </li>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { Link } from 'react-router';\nimport ComponentNavBranchesMenuItem from './ComponentNavBranchesMenuItem';\nimport {\n  sortBranchesAsTree,\n  isLongLivingBranch,\n  isShortLivingBranch,\n  isSameBranchLike,\n  getBranchLikeKey,\n  isPullRequest,\n  isBranch\n} from '../../../../helpers/branches';\nimport { scrollToElement } from '../../../../helpers/scrolling';\nimport { translate } from '../../../../helpers/l10n';\nimport { getBranchLikeUrl } from '../../../../helpers/urls';\nimport SearchBox from '../../../../components/controls/SearchBox';\nimport HelpTooltip from '../../../../components/controls/HelpTooltip';\nimport { DropdownOverlay } from '../../../../components/controls/Dropdown';\nimport { withRouter, Router } from '../../../../components/hoc/withRouter';\n\ninterface Props {\n  branchLikes: T.BranchLike[];\n  canAdmin?: boolean;\n  component: T.Component;\n  currentBranchLike: T.BranchLike;\n  onClose: () => void;\n  router: Pick<Router, 'push'>;\n}\n\ninterface State {\n  query: string;\n  selected: T.BranchLike | undefined;\n}\n\nexport class ComponentNavBranchesMenu extends React.PureComponent<Props, State> {\n  listNode?: HTMLUListElement | null;\n  selectedBranchNode?: HTMLLIElement | null;\n  state: State = { query: '', selected: undefined };\n\n  componentDidMount() {\n    this.scrollToSelectedBranch(false);\n  }\n\n  componentDidUpdate() {\n    this.scrollToSelectedBranch(true);\n  }\n\n  scrollToSelectedBranch(smooth: boolean) {\n    if (this.listNode && this.selectedBranchNode) {\n      scrollToElement(this.selectedBranchNode, {\n        parent: this.listNode,\n        smooth\n      });\n    }\n  }\n\n  getFilteredBranchLikes = () => {\n    const query = this.state.query.toLowerCase();\n    return sortBranchesAsTree(this.props.branchLikes).filter(branchLike => {\n      const matchBranchName = isBranch(branchLike) && branchLike.name.toLowerCase().includes(query);\n      const matchPullRequestTitleOrId =\n        isPullRequest(branchLike) &&\n        (branchLike.title.toLowerCase().includes(query) ||\n          branchLike.key.toLowerCase().includes(query));\n      return matchBranchName || matchPullRequestTitleOrId;\n    });\n  };\n\n  handleSearchChange = (query: string) => this.setState({ query, selected: undefined });\n\n  handleKeyDown = (event: React.KeyboardEvent<HTMLInputElement>) => {\n    switch (event.keyCode) {\n      case 13:\n        event.preventDefault();\n        this.openSelected();\n        return;\n      case 38:\n        event.preventDefault();\n        this.selectPrevious();\n        return;\n      case 40:\n        event.preventDefault();\n        this.selectNext();\n        // keep this return to prevent fall-through in case more cases will be adder later\n        // eslint-disable-next-line no-useless-return\n        return;\n    }\n  };\n\n  openSelected = () => {\n    const selected = this.getSelected();\n    if (selected) {\n      this.props.router.push(this.getProjectBranchUrl(selected));\n    }\n  };\n\n  selectPrevious = () => {\n    const selected = this.getSelected();\n    const branchLikes = this.getFilteredBranchLikes();\n    const index = branchLikes.findIndex(b => isSameBranchLike(b, selected));\n    if (index > 0) {\n      this.setState({ selected: branchLikes[index - 1] });\n    }\n  };\n\n  selectNext = () => {\n    const selected = this.getSelected();\n    const branches = this.getFilteredBranchLikes();\n    const index = branches.findIndex(b => isSameBranchLike(b, selected));\n    if (index >= 0 && index < branches.length - 1) {\n      this.setState({ selected: branches[index + 1] });\n    }\n  };\n\n  handleSelect = (branchLike: T.BranchLike) => {\n    this.setState({ selected: branchLike });\n  };\n\n  getSelected = () => {\n    if (this.state.selected) {\n      return this.state.selected;\n    }\n\n    const branchLikes = this.getFilteredBranchLikes();\n    if (branchLikes.find(b => isSameBranchLike(b, this.props.currentBranchLike))) {\n      return this.props.currentBranchLike;\n    }\n\n    if (branchLikes.length > 0) {\n      return branchLikes[0];\n    }\n\n    return undefined;\n  };\n\n  getProjectBranchUrl = (branchLike: T.BranchLike) =>\n    getBranchLikeUrl(this.props.component.key, branchLike);\n\n  isOrphan = (branchLike: T.BranchLike) => {\n    return (isShortLivingBranch(branchLike) || isPullRequest(branchLike)) && branchLike.isOrphan;\n  };\n\n  renderSearch = () => (\n    <div className=\"menu-search\">\n      <SearchBox\n        autoFocus={true}\n        onChange={this.handleSearchChange}\n        onKeyDown={this.handleKeyDown}\n        placeholder={translate('branches.search_for_branches')}\n        value={this.state.query}\n      />\n    </div>\n  );\n\n  renderBranchesList = () => {\n    const branchLikes = this.getFilteredBranchLikes();\n    const selected = this.getSelected();\n\n    if (branchLikes.length === 0) {\n      return <div className=\"menu-message note\">{translate('no_results')}</div>;\n    }\n\n    const items = branchLikes.map((branchLike, index) => {\n      const isOrphan = this.isOrphan(branchLike);\n      const previous = index > 0 ? branchLikes[index - 1] : undefined;\n      const isPreviousOrphan = previous !== undefined && this.isOrphan(previous);\n      const showDivider = isLongLivingBranch(branchLike) || (isOrphan && !isPreviousOrphan);\n      const showOrphanHeader = isOrphan && !isPreviousOrphan;\n      const showPullRequestHeader =\n        !showOrphanHeader && isPullRequest(branchLike) && !isPullRequest(previous);\n      const showShortLivingBranchHeader =\n        !showOrphanHeader && isShortLivingBranch(branchLike) && !isShortLivingBranch(previous);\n      const isSelected = isSameBranchLike(branchLike, selected);\n      return (\n        <React.Fragment key={getBranchLikeKey(branchLike)}>\n          {showDivider && <li className=\"divider\" />}\n          {showOrphanHeader && (\n            <li className=\"menu-header\">\n              <div className=\"display-inline-block text-middle\">\n                {translate('branches.orphan_branches')}\n              </div>\n              <HelpTooltip\n                className=\"spacer-left\"\n                overlay={translate('branches.orphan_branches.tooltip')}\n              />\n            </li>\n          )}\n          {showPullRequestHeader && (\n            <li className=\"menu-header navbar-context-meta-branch-menu-title\">\n              {translate('branches.pull_requests')}\n            </li>\n          )}\n          {showShortLivingBranchHeader && (\n            <li className=\"menu-header navbar-context-meta-branch-menu-title\">\n              {translate('branches.short_lived_branches')}\n            </li>\n          )}\n          <ComponentNavBranchesMenuItem\n            branchLike={branchLike}\n            component={this.props.component}\n            innerRef={node =>\n              (this.selectedBranchNode = isSelected ? node : this.selectedBranchNode)\n            }\n            key={getBranchLikeKey(branchLike)}\n            onSelect={this.handleSelect}\n            selected={isSelected}\n          />\n        </React.Fragment>\n      );\n    });\n\n    return (\n      <ul className=\"menu menu-vertically-limited\" ref={node => (this.listNode = node)}>\n        {items}\n      </ul>\n    );\n  };\n\n  render() {\n    const { component } = this.props;\n    const showManageLink =\n      component.qualifier === 'TRK' &&\n      component.configuration &&\n      component.configuration.showSettings;\n\n    return (\n      <DropdownOverlay noPadding={true}>\n        {this.renderSearch()}\n        {this.renderBranchesList()}\n        {showManageLink && (\n          <div className=\"dropdown-bottom-hint text-right\">\n            <Link\n              className=\"text-muted\"\n              to={{ pathname: '/project/branches', query: { id: component.key } }}>\n              {translate('branches.manage')}\n            </Link>\n          </div>\n        )}\n      </DropdownOverlay>\n    );\n  }\n}\n\nexport default withRouter(ComponentNavBranchesMenu);\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport { Link } from 'react-router';\nimport ComponentNavBranchesMenu from './ComponentNavBranchesMenu';\nimport DocTooltip from '../../../../components/docs/DocTooltip';\nimport * as theme from '../../../theme';\nimport BranchIcon from '../../../../components/icons-components/BranchIcon';\nimport {\n  isShortLivingBranch,\n  isSameBranchLike,\n  getBranchLikeDisplayName,\n  isPullRequest\n} from '../../../../helpers/branches';\nimport { translate } from '../../../../helpers/l10n';\nimport PlusCircleIcon from '../../../../components/icons-components/PlusCircleIcon';\nimport HelpTooltip from '../../../../components/controls/HelpTooltip';\nimport Toggler from '../../../../components/controls/Toggler';\nimport DropdownIcon from '../../../../components/icons-components/DropdownIcon';\nimport { isSonarCloud } from '../../../../helpers/system';\nimport { getPortfolioAdminUrl } from '../../../../helpers/urls';\nimport { withAppState } from '../../../../components/hoc/withAppState';\n\ninterface Props {\n  appState: Pick<T.AppState, 'branchesEnabled'>;\n  branchLikes: T.BranchLike[];\n  component: T.Component;\n  currentBranchLike: T.BranchLike;\n  location?: any;\n}\n\ninterface State {\n  dropdownOpen: boolean;\n}\n\nexport class ComponentNavBranch extends React.PureComponent<Props, State> {\n  mounted = false;\n  state: State = { dropdownOpen: false };\n\n  componentDidMount() {\n    this.mounted = true;\n  }\n\n  componentWillReceiveProps(nextProps: Props) {\n    if (\n      nextProps.component !== this.props.component ||\n      !isSameBranchLike(nextProps.currentBranchLike, this.props.currentBranchLike) ||\n      nextProps.location !== this.props.location\n    ) {\n      this.setState({ dropdownOpen: false });\n    }\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  handleClick = (event: React.SyntheticEvent<HTMLElement>) => {\n    event.preventDefault();\n    event.stopPropagation();\n    event.currentTarget.blur();\n    this.setState(state => ({ dropdownOpen: !state.dropdownOpen }));\n  };\n\n  closeDropdown = () => {\n    if (this.mounted) {\n      this.setState({ dropdownOpen: false });\n    }\n  };\n\n  renderMergeBranch = () => {\n    const { currentBranchLike } = this.props;\n    if (isShortLivingBranch(currentBranchLike)) {\n      return currentBranchLike.isOrphan ? (\n        <span className=\"note big-spacer-left text-ellipsis flex-shrink\">\n          <span className=\"text-middle\">{translate('branches.orphan_branch')}</span>\n          <HelpTooltip\n            className=\"spacer-left\"\n            overlay={translate('branches.orphan_branches.tooltip')}\n          />\n        </span>\n      ) : (\n        <span className=\"note big-spacer-left\">\n          {translate('from')} <strong>{currentBranchLike.mergeBranch}</strong>\n        </span>\n      );\n    } else if (isPullRequest(currentBranchLike)) {\n      return (\n        <span className=\"note big-spacer-left text-ellipsis flex-shrink\">\n          <FormattedMessage\n            defaultMessage={translate('branches.pull_request.for_merge_into_x_from_y')}\n            id=\"branches.pull_request.for_merge_into_x_from_y\"\n            values={{\n              target: <strong>{currentBranchLike.target}</strong>,\n              branch: <strong>{currentBranchLike.branch}</strong>\n            }}\n          />\n        </span>\n      );\n    } else {\n      return null;\n    }\n  };\n\n  renderOverlay = () => {\n    return (\n      <>\n        <p>{translate('application.branches.help')}</p>\n        <hr className=\"spacer-top spacer-bottom\" />\n        <Link\n          className=\"spacer-left link-no-underline\"\n          to={getPortfolioAdminUrl(this.props.component.breadcrumbs[0].key, 'APP')}>\n          {translate('application.branches.link')}\n        </Link>\n      </>\n    );\n  };\n\n  render() {\n    const { branchLikes, currentBranchLike } = this.props;\n    const { configuration, breadcrumbs } = this.props.component;\n\n    if (isSonarCloud() && !this.props.appState.branchesEnabled) {\n      return null;\n    }\n\n    const displayName = getBranchLikeDisplayName(currentBranchLike);\n    const isApp = breadcrumbs && breadcrumbs[0] && breadcrumbs[0].qualifier === 'APP';\n\n    if (isApp && branchLikes.length < 2) {\n      return (\n        <div className=\"navbar-context-branches\">\n          <BranchIcon\n            branchLike={currentBranchLike}\n            className=\"little-spacer-right\"\n            fill={theme.gray80}\n          />\n          <span className=\"note\">{displayName}</span>\n          {configuration && configuration.showSettings && (\n            <HelpTooltip className=\"spacer-left\" overlay={this.renderOverlay()}>\n              <PlusCircleIcon className=\"text-middle\" fill={theme.blue} size={12} />\n            </HelpTooltip>\n          )}\n        </div>\n      );\n    } else {\n      if (!this.props.appState.branchesEnabled) {\n        return (\n          <div className=\"navbar-context-branches\">\n            <BranchIcon\n              branchLike={currentBranchLike}\n              className=\"little-spacer-right\"\n              fill={theme.gray80}\n            />\n            <span className=\"note\">{displayName}</span>\n            <DocTooltip\n              className=\"spacer-left\"\n              doc={import(/* webpackMode: \"eager\" */ 'Docs/tooltips/branches/no-branch-support.md')}>\n              <PlusCircleIcon fill={theme.gray71} size={12} />\n            </DocTooltip>\n          </div>\n        );\n      }\n\n      if (branchLikes.length < 2) {\n        return (\n          <div className=\"navbar-context-branches\">\n            <BranchIcon branchLike={currentBranchLike} className=\"little-spacer-right\" />\n            <span className=\"note\">{displayName}</span>\n            <DocTooltip\n              className=\"spacer-left\"\n              doc={import(/* webpackMode: \"eager\" */ 'Docs/tooltips/branches/single-branch.md')}>\n              <PlusCircleIcon fill={theme.blue} size={12} />\n            </DocTooltip>\n          </div>\n        );\n      }\n    }\n\n    return (\n      <div className=\"navbar-context-branches\">\n        <div className=\"dropdown\">\n          <Toggler\n            onRequestClose={this.closeDropdown}\n            open={this.state.dropdownOpen}\n            overlay={\n              <ComponentNavBranchesMenu\n                branchLikes={this.props.branchLikes}\n                canAdmin={configuration && configuration.showSettings}\n                component={this.props.component}\n                currentBranchLike={this.props.currentBranchLike}\n                onClose={this.closeDropdown}\n              />\n            }>\n            <a\n              className=\"link-base-color link-no-underline nowrap\"\n              href=\"#\"\n              onClick={this.handleClick}>\n              <BranchIcon branchLike={currentBranchLike} className=\"little-spacer-right\" />\n              <span className=\"text-limited text-top\" title={displayName}>\n                {displayName}\n              </span>\n              <DropdownIcon className=\"little-spacer-left\" />\n            </a>\n          </Toggler>\n        </div>\n        {this.renderMergeBranch()}\n      </div>\n    );\n  }\n}\n\nexport default withAppState(ComponentNavBranch);\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router';\nimport ComponentNavBranch from './ComponentNavBranch';\nimport QualifierIcon from '../../../../components/icons-components/QualifierIcon';\nimport { getOrganizationByKey, Store } from '../../../../store/rootReducer';\nimport OrganizationAvatar from '../../../../components/common/OrganizationAvatar';\nimport OrganizationHelmet from '../../../../components/common/OrganizationHelmet';\nimport OrganizationLink from '../../../../components/ui/OrganizationLink';\nimport { sanitizeAlmId } from '../../../../helpers/almIntegrations';\nimport { getProjectUrl, getBaseUrl } from '../../../../helpers/urls';\nimport { isSonarCloud } from '../../../../helpers/system';\nimport { isMainBranch } from '../../../../helpers/branches';\n\ninterface StateProps {\n  organization?: T.Organization;\n}\n\ninterface OwnProps {\n  branchLikes: T.BranchLike[];\n  component: T.Component;\n  currentBranchLike: T.BranchLike | undefined;\n  location?: any;\n}\n\ntype Props = StateProps & OwnProps;\n\nexport function ComponentNavHeader(props: Props) {\n  const { component, organization } = props;\n\n  return (\n    <header className=\"navbar-context-header\">\n      <OrganizationHelmet\n        organization={organization && isSonarCloud() ? organization : undefined}\n        title={component.name}\n      />\n      {organization && isSonarCloud() && (\n        <>\n          <OrganizationAvatar organization={organization} />\n          <OrganizationLink\n            className=\"navbar-context-header-breadcrumb-link link-base-color link-no-underline spacer-left\"\n            organization={organization}>\n            {organization.name}\n          </OrganizationLink>\n          <span className=\"slash-separator\" />\n        </>\n      )}\n      {renderBreadcrumbs(\n        component.breadcrumbs,\n        props.currentBranchLike !== undefined && !isMainBranch(props.currentBranchLike)\n      )}\n      {isSonarCloud() && component.alm && (\n        <a\n          className=\"link-no-underline\"\n          href={component.alm.url}\n          rel=\"noopener noreferrer\"\n          target=\"_blank\">\n          <img\n            alt={sanitizeAlmId(component.alm.key)}\n            className=\"text-text-top spacer-left\"\n            height={16}\n            src={`${getBaseUrl()}/images/sonarcloud/${sanitizeAlmId(component.alm.key)}.svg`}\n            width={16}\n          />\n        </a>\n      )}\n      {props.currentBranchLike && (\n        <ComponentNavBranch\n          branchLikes={props.branchLikes}\n          component={component}\n          currentBranchLike={props.currentBranchLike}\n          // to close dropdown on any location change\n          location={props.location}\n        />\n      )}\n    </header>\n  );\n}\n\nfunction renderBreadcrumbs(breadcrumbs: T.Breadcrumb[], shouldLinkLast: boolean) {\n  const lastItem = breadcrumbs[breadcrumbs.length - 1];\n  return breadcrumbs.map((item, index) => {\n    return (\n      <React.Fragment key={item.key}>\n        {index === 0 && <QualifierIcon className=\"spacer-right\" qualifier={lastItem.qualifier} />}\n        {shouldLinkLast || index < breadcrumbs.length - 1 ? (\n          <Link\n            className=\"navbar-context-header-breadcrumb-link link-base-color link-no-underline\"\n            title={item.name}\n            to={getProjectUrl(item.key)}>\n            {item.name}\n          </Link>\n        ) : (\n          <span className=\"navbar-context-header-breadcrumb-link\" title={item.name}>\n            {item.name}\n          </span>\n        )}\n        {index < breadcrumbs.length - 1 && <span className=\"slash-separator\" />}\n      </React.Fragment>\n    );\n  });\n}\n\nconst mapStateToProps = (state: Store, ownProps: OwnProps): StateProps => ({\n  organization: getOrganizationByKey(state, ownProps.component.organization)\n});\n\nexport default connect(mapStateToProps)(ComponentNavHeader);\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport { lazyLoad } from '../../../../components/lazyLoad';\nimport WarningIcon from '../../../../components/icons-components/WarningIcon';\nimport { translate, translateWithParameters } from '../../../../helpers/l10n';\n\nconst AnalysisWarningsModal = lazyLoad(() =>\n  import('../../../../components/common/AnalysisWarningsModal')\n);\n\ninterface Props {\n  warnings: string[];\n}\n\ninterface State {\n  modal: boolean;\n}\n\nexport default class ComponentNavWarnings extends React.PureComponent<Props, State> {\n  state: State = { modal: false };\n\n  handleClick = (event: React.MouseEvent<HTMLAnchorElement>) => {\n    event.preventDefault();\n    event.currentTarget.blur();\n    this.setState({ modal: true });\n  };\n\n  handleCloseModal = () => {\n    this.setState({ modal: false });\n  };\n\n  render() {\n    return (\n      <>\n        <div className=\"badge badge-focus badge-medium display-inline-flex-center js-component-analysis-warnings flex-1\">\n          <WarningIcon className=\"spacer-right\" />\n          <FormattedMessage\n            defaultMessage={translate('component_navigation.last_analsys_had_warnings')}\n            id=\"component_navigation.last_analsys_had_warnings\"\n            values={{\n              warnings: (\n                <a href=\"#\" onClick={this.handleClick}>\n                  {translateWithParameters(\n                    'component_navigation.x_warnings',\n                    String(this.props.warnings.length)\n                  )}\n                </a>\n              )\n            }}\n          />\n        </div>\n        {this.state.modal && (\n          <AnalysisWarningsModal onClose={this.handleCloseModal} warnings={this.props.warnings} />\n        )}\n      </>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { connect } from 'react-redux';\nimport ComponentNavWarnings from './ComponentNavWarnings';\nimport BranchStatus from '../../../../components/common/BranchStatus';\nimport DateTimeFormatter from '../../../../components/intl/DateTimeFormatter';\nimport Favorite from '../../../../components/controls/Favorite';\nimport HomePageSelect from '../../../../components/controls/HomePageSelect';\nimport Tooltip from '../../../../components/controls/Tooltip';\nimport DetachIcon from '../../../../components/icons-components/DetachIcon';\nimport {\n  isShortLivingBranch,\n  isLongLivingBranch,\n  isMainBranch,\n  isPullRequest\n} from '../../../../helpers/branches';\nimport { translate } from '../../../../helpers/l10n';\nimport { isLoggedIn } from '../../../../helpers/users';\nimport { getCurrentUser, Store } from '../../../../store/rootReducer';\n\nexport interface Props {\n  branchLike?: T.BranchLike;\n  currentUser: T.CurrentUser;\n  component: T.Component;\n  warnings: string[];\n}\n\nexport function ComponentNavMeta({ branchLike, component, currentUser, warnings }: Props) {\n  const mainBranch = !branchLike || isMainBranch(branchLike);\n  const longBranch = isLongLivingBranch(branchLike);\n  const currentPage = getCurrentPage(component, branchLike);\n  const displayVersion = component.version !== undefined && (mainBranch || longBranch);\n\n  return (\n    <div className=\"navbar-context-meta flex-0\">\n      {warnings.length > 0 && <ComponentNavWarnings warnings={warnings} />}\n      {component.analysisDate && (\n        <div className=\"spacer-left text-ellipsis\">\n          <DateTimeFormatter date={component.analysisDate} />\n        </div>\n      )}\n      {displayVersion && (\n        <Tooltip mouseEnterDelay={0.5} overlay={`${translate('version')} ${component.version}`}>\n          <div className=\"spacer-left text-limited\">\n            {translate('version')} {component.version}\n          </div>\n        </Tooltip>\n      )}\n      {isLoggedIn(currentUser) && (\n        <div className=\"navbar-context-meta-secondary\">\n          {mainBranch && (\n            <Favorite\n              component={component.key}\n              favorite={Boolean(component.isFavorite)}\n              qualifier={component.qualifier}\n            />\n          )}\n          {(mainBranch || longBranch) && currentPage !== undefined && (\n            <HomePageSelect className=\"spacer-left\" currentPage={currentPage} />\n          )}\n        </div>\n      )}\n      {(isShortLivingBranch(branchLike) || isPullRequest(branchLike)) && (\n        <div className=\"navbar-context-meta-secondary display-inline-flex-center\">\n          {isPullRequest(branchLike) && branchLike.url !== undefined && (\n            <a\n              className=\"display-inline-flex-center big-spacer-right\"\n              href={branchLike.url}\n              rel=\"noopener noreferrer\"\n              target=\"_blank\">\n              {translate('branches.see_the_pr')}\n              <DetachIcon className=\"little-spacer-left\" size={12} />\n            </a>\n          )}\n          <BranchStatus branchLike={branchLike} component={component.key} />\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport function getCurrentPage(component: T.Component, branchLike: T.BranchLike | undefined) {\n  let currentPage: T.HomePage | undefined;\n  if (component.qualifier === 'VW' || component.qualifier === 'SVW') {\n    currentPage = { type: 'PORTFOLIO', component: component.key };\n  } else if (component.qualifier === 'APP') {\n    const branch = isLongLivingBranch(branchLike) ? branchLike.name : undefined;\n    currentPage = { type: 'APPLICATION', component: component.key, branch };\n  } else if (component.qualifier === 'TRK') {\n    // when home page is set to the default branch of a project, its name is returned as `undefined`\n    const branch = isLongLivingBranch(branchLike) ? branchLike.name : undefined;\n    currentPage = { type: 'PROJECT', component: component.key, branch };\n  }\n  return currentPage;\n}\n\nconst mapStateToProps = (state: Store) => ({\n  currentUser: getCurrentUser(state)\n});\n\nexport default connect(mapStateToProps)(ComponentNavMeta);\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { Link } from 'react-router';\nimport * as classNames from 'classnames';\nimport Dropdown from '../../../../components/controls/Dropdown';\nimport { withAppState } from '../../../../components/hoc/withAppState';\nimport DropdownIcon from '../../../../components/icons-components/DropdownIcon';\nimport NavBarTabs from '../../../../components/nav/NavBarTabs';\nimport {\n  isShortLivingBranch,\n  isPullRequest,\n  isMainBranch,\n  getBranchLikeQuery\n} from '../../../../helpers/branches';\nimport { translate } from '../../../../helpers/l10n';\nimport { isSonarCloud } from '../../../../helpers/system';\n\nconst SETTINGS_URLS = [\n  '/project/admin',\n  '/project/branches',\n  '/project/settings',\n  '/project/quality_profiles',\n  '/project/quality_gate',\n  '/custom_measures',\n  '/project/links',\n  '/project_roles',\n  '/project/history',\n  'background_tasks',\n  '/project/key',\n  '/project/deletion',\n  '/project/webhooks'\n];\n\ninterface Props {\n  appState: Pick<T.AppState, 'branchesEnabled'>;\n  branchLike: T.BranchLike | undefined;\n  component: T.Component;\n  location?: any;\n}\n\nexport class ComponentNavMenu extends React.PureComponent<Props> {\n  isProject() {\n    return this.props.component.qualifier === 'TRK';\n  }\n\n  isDeveloper() {\n    return this.props.component.qualifier === 'DEV';\n  }\n\n  isPortfolio() {\n    const { qualifier } = this.props.component;\n    return qualifier === 'VW' || qualifier === 'SVW';\n  }\n\n  isApplication() {\n    return this.props.component.qualifier === 'APP';\n  }\n\n  getConfiguration() {\n    return this.props.component.configuration || {};\n  }\n\n  getQuery = () => {\n    return { id: this.props.component.key, ...getBranchLikeQuery(this.props.branchLike) };\n  };\n\n  renderDashboardLink() {\n    const pathname = this.isPortfolio() ? '/portfolio' : '/dashboard';\n    return (\n      <li>\n        <Link activeClassName=\"active\" to={{ pathname, query: this.getQuery() }}>\n          {translate('overview.page')}\n        </Link>\n      </li>\n    );\n  }\n\n  renderCodeLink() {\n    if (this.isDeveloper()) {\n      return null;\n    }\n\n    return (\n      <li>\n        <Link activeClassName=\"active\" to={{ pathname: '/code', query: this.getQuery() }}>\n          {this.isPortfolio() || this.isApplication()\n            ? translate('view_projects.page')\n            : translate('code.page')}\n        </Link>\n      </li>\n    );\n  }\n\n  renderActivityLink() {\n    const { branchLike } = this.props;\n\n    if (isShortLivingBranch(branchLike) || isPullRequest(branchLike)) {\n      return null;\n    }\n\n    return (\n      <li>\n        <Link\n          activeClassName=\"active\"\n          to={{ pathname: '/project/activity', query: this.getQuery() }}>\n          {translate('project_activity.page')}\n        </Link>\n      </li>\n    );\n  }\n\n  renderIssuesLink() {\n    const { location = { pathname: '' } } = this.props;\n    const isIssuesActive = location.pathname.startsWith('/project/issues');\n    return (\n      <li>\n        <Link\n          activeClassName=\"active\"\n          className={classNames({ active: isIssuesActive })}\n          to={{ pathname: '/project/issues', query: { ...this.getQuery(), resolved: 'false' } }}>\n          {translate('issues.page')}\n        </Link>\n      </li>\n    );\n  }\n\n  renderComponentMeasuresLink() {\n    return (\n      <li>\n        <Link\n          activeClassName=\"active\"\n          to={{ pathname: '/component_measures', query: this.getQuery() }}>\n          {translate('layout.measures')}\n        </Link>\n      </li>\n    );\n  }\n\n  renderSecurityReports() {\n    const { branchLike, component } = this.props;\n    const { extensions = [] } = component;\n\n    if (isShortLivingBranch(branchLike) || isPullRequest(branchLike)) {\n      return null;\n    }\n\n    const hasSecurityReportsEnabled = extensions.some(extension =>\n      extension.key.startsWith('securityreport/')\n    );\n\n    if (!hasSecurityReportsEnabled) {\n      return null;\n    }\n\n    return (\n      <li>\n        <Link\n          activeClassName=\"active\"\n          to={{\n            pathname: '/project/extension/securityreport/securityreport',\n            query: this.getQuery()\n          }}>\n          {translate('layout.security_reports')}\n        </Link>\n      </li>\n    );\n  }\n\n  renderAdministration() {\n    const { branchLike } = this.props;\n\n    if (!this.getConfiguration().showSettings || (branchLike && !isMainBranch(branchLike))) {\n      return null;\n    }\n\n    const isSettingsActive = SETTINGS_URLS.some(url => window.location.href.indexOf(url) !== -1);\n\n    const adminLinks = this.renderAdministrationLinks();\n    if (!adminLinks.some(link => link != null)) {\n      return null;\n    }\n\n    return (\n      <Dropdown\n        data-test=\"administration\"\n        overlay={<ul className=\"menu\">{adminLinks}</ul>}\n        tagName=\"li\">\n        {({ onToggleClick, open }) => (\n          <a\n            aria-expanded={open}\n            aria-haspopup=\"true\"\n            className={classNames('dropdown-toggle', { active: isSettingsActive || open })}\n            href=\"#\"\n            id=\"component-navigation-admin\"\n            onClick={onToggleClick}>\n            {translate('layout.settings')}\n            <DropdownIcon className=\"little-spacer-left\" />\n          </a>\n        )}\n      </Dropdown>\n    );\n  }\n\n  renderAdministrationLinks() {\n    return [\n      this.renderSettingsLink(),\n      this.renderBranchesLink(),\n      this.renderProfilesLink(),\n      this.renderQualityGateLink(),\n      this.renderCustomMeasuresLink(),\n      this.renderLinksLink(),\n      this.renderPermissionsLink(),\n      this.renderBackgroundTasksLink(),\n      this.renderUpdateKeyLink(),\n      this.renderWebhooksLink(),\n      ...this.renderAdminExtensions(),\n      this.renderDeletionLink()\n    ];\n  }\n\n  renderSettingsLink() {\n    if (!this.getConfiguration().showSettings || this.isApplication() || this.isPortfolio()) {\n      return null;\n    }\n    return (\n      <li key=\"settings\">\n        <Link\n          activeClassName=\"active\"\n          to={{ pathname: '/project/settings', query: this.getQuery() }}>\n          {translate('project_settings.page')}\n        </Link>\n      </li>\n    );\n  }\n\n  renderBranchesLink() {\n    if (\n      !this.props.appState.branchesEnabled ||\n      !this.isProject() ||\n      !this.getConfiguration().showSettings\n    ) {\n      return null;\n    }\n\n    return (\n      <li key=\"branches\">\n        <Link\n          activeClassName=\"active\"\n          to={{ pathname: '/project/branches', query: { id: this.props.component.key } }}>\n          {translate('project_branches.page')}\n        </Link>\n      </li>\n    );\n  }\n\n  renderProfilesLink() {\n    if (!this.getConfiguration().showQualityProfiles) {\n      return null;\n    }\n    return (\n      <li key=\"profiles\">\n        <Link\n          activeClassName=\"active\"\n          to={{ pathname: '/project/quality_profiles', query: { id: this.props.component.key } }}>\n          {translate('project_quality_profiles.page')}\n        </Link>\n      </li>\n    );\n  }\n\n  renderQualityGateLink() {\n    if (!this.getConfiguration().showQualityGates) {\n      return null;\n    }\n    return (\n      <li key=\"quality_gate\">\n        <Link\n          activeClassName=\"active\"\n          to={{ pathname: '/project/quality_gate', query: { id: this.props.component.key } }}>\n          {translate('project_quality_gate.page')}\n        </Link>\n      </li>\n    );\n  }\n\n  renderCustomMeasuresLink() {\n    if (isSonarCloud() || !this.getConfiguration().showManualMeasures) {\n      return null;\n    }\n    return (\n      <li key=\"custom_measures\">\n        <Link\n          activeClassName=\"active\"\n          to={{ pathname: '/custom_measures', query: { id: this.props.component.key } }}>\n          {translate('custom_measures.page')}\n        </Link>\n      </li>\n    );\n  }\n\n  renderLinksLink() {\n    if (!this.getConfiguration().showLinks) {\n      return null;\n    }\n    return (\n      <li key=\"links\">\n        <Link\n          activeClassName=\"active\"\n          to={{ pathname: '/project/links', query: { id: this.props.component.key } }}>\n          {translate('project_links.page')}\n        </Link>\n      </li>\n    );\n  }\n\n  renderPermissionsLink() {\n    if (!this.getConfiguration().showPermissions) {\n      return null;\n    }\n    return (\n      <li key=\"permissions\">\n        <Link\n          activeClassName=\"active\"\n          to={{ pathname: '/project_roles', query: { id: this.props.component.key } }}>\n          {translate('permissions.page')}\n        </Link>\n      </li>\n    );\n  }\n\n  renderBackgroundTasksLink() {\n    if (!this.getConfiguration().showBackgroundTasks) {\n      return null;\n    }\n    return (\n      <li key=\"background_tasks\">\n        <Link\n          activeClassName=\"active\"\n          to={{ pathname: '/project/background_tasks', query: { id: this.props.component.key } }}>\n          {translate('background_tasks.page')}\n        </Link>\n      </li>\n    );\n  }\n\n  renderUpdateKeyLink() {\n    if (!this.getConfiguration().showUpdateKey) {\n      return null;\n    }\n    return (\n      <li key=\"update_key\">\n        <Link\n          activeClassName=\"active\"\n          to={{ pathname: '/project/key', query: { id: this.props.component.key } }}>\n          {translate('update_key.page')}\n        </Link>\n      </li>\n    );\n  }\n\n  renderWebhooksLink() {\n    if (!this.getConfiguration().showSettings || !this.isProject()) {\n      return null;\n    }\n    return (\n      <li key=\"webhooks\">\n        <Link\n          activeClassName=\"active\"\n          to={{ pathname: '/project/webhooks', query: { id: this.props.component.key } }}>\n          {translate('webhooks.page')}\n        </Link>\n      </li>\n    );\n  }\n\n  renderDeletionLink() {\n    const { qualifier } = this.props.component;\n\n    if (!this.getConfiguration().showSettings) {\n      return null;\n    }\n\n    if (qualifier !== 'TRK' && qualifier !== 'VW' && qualifier !== 'APP') {\n      return null;\n    }\n\n    return (\n      <li key=\"project_delete\">\n        <Link\n          activeClassName=\"active\"\n          to={{ pathname: '/project/deletion', query: { id: this.props.component.key } }}>\n          {translate('deletion.page')}\n        </Link>\n      </li>\n    );\n  }\n\n  renderExtension = ({ key, name }: T.Extension, isAdmin: boolean) => {\n    const pathname = isAdmin ? `/project/admin/extension/${key}` : `/project/extension/${key}`;\n    const query = { id: this.props.component.key, qualifier: this.props.component.qualifier };\n    return (\n      <li key={key}>\n        <Link activeClassName=\"active\" to={{ pathname, query }}>\n          {name}\n        </Link>\n      </li>\n    );\n  };\n\n  renderAdminExtensions() {\n    if (this.props.branchLike && !isMainBranch(this.props.branchLike)) {\n      return [];\n    }\n    const extensions = this.getConfiguration().extensions || [];\n    return extensions.map(e => this.renderExtension(e, true));\n  }\n\n  renderExtensions() {\n    const extensions = this.props.component.extensions || [];\n    const withoutSecurityExtension = extensions.filter(\n      extension => !extension.key.startsWith('securityreport/')\n    );\n    if (\n      withoutSecurityExtension.length === 0 ||\n      (this.props.branchLike && !isMainBranch(this.props.branchLike))\n    ) {\n      return null;\n    }\n\n    return (\n      <Dropdown\n        data-test=\"extensions\"\n        overlay={\n          <ul className=\"menu\">\n            {withoutSecurityExtension.map(e => this.renderExtension(e, false))}\n          </ul>\n        }\n        tagName=\"li\">\n        {({ onToggleClick, open }) => (\n          <a\n            aria-expanded={open}\n            aria-haspopup=\"true\"\n            className={classNames('dropdown-toggle', { active: open })}\n            href=\"#\"\n            id=\"component-navigation-more\"\n            onClick={onToggleClick}>\n            {translate('more')}\n            <DropdownIcon className=\"little-spacer-left\" />\n          </a>\n        )}\n      </Dropdown>\n    );\n  }\n\n  render() {\n    return (\n      <NavBarTabs>\n        {this.renderDashboardLink()}\n        {this.renderIssuesLink()}\n        {this.renderSecurityReports()}\n        {this.renderComponentMeasuresLink()}\n        {this.renderCodeLink()}\n        {this.renderActivityLink()}\n        {this.renderAdministration()}\n        {this.renderExtensions()}\n      </NavBarTabs>\n    );\n  }\n}\n\nexport default withAppState(ComponentNavMenu);\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { Link } from 'react-router';\nimport { translate } from '../../../../helpers/l10n';\nimport { isValidLicense } from '../../../../api/marketplace';\nimport { withAppState } from '../../../../components/hoc/withAppState';\nimport { Alert } from '../../../../components/ui/Alert';\n\ninterface Props {\n  appState: Pick<T.AppState, 'canAdmin'>;\n  currentTask?: T.Task;\n}\n\ninterface State {\n  isValidLicense?: boolean;\n  loading: boolean;\n}\n\nexport class ComponentNavLicenseNotif extends React.PureComponent<Props, State> {\n  mounted = false;\n  state: State = { loading: false };\n\n  componentDidMount() {\n    this.mounted = true;\n    this.fetchIsValidLicense();\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  fetchIsValidLicense = () => {\n    this.setState({ loading: true });\n    isValidLicense().then(\n      ({ isValidLicense }) => {\n        if (this.mounted) {\n          this.setState({ isValidLicense, loading: false });\n        }\n      },\n      () => {\n        if (this.mounted) {\n          this.setState({ loading: false });\n        }\n      }\n    );\n  };\n\n  render() {\n    const { currentTask } = this.props;\n    const { isValidLicense, loading } = this.state;\n\n    if (loading || !currentTask || !currentTask.errorType) {\n      return null;\n    }\n\n    if (isValidLicense && currentTask.errorType !== 'LICENSING_LOC') {\n      return (\n        <Alert display=\"banner\" variant=\"error\">\n          {translate('component_navigation.status.last_blocked_due_to_bad_license')}\n        </Alert>\n      );\n    }\n\n    return (\n      <Alert display=\"banner\" variant=\"error\">\n        <span className=\"little-spacer-right\">{currentTask.errorMessage}</span>\n        {this.props.appState.canAdmin ? (\n          <Link to=\"/admin/extension/license/app\">\n            {translate('license.component_navigation.button', currentTask.errorType)}.\n          </Link>\n        ) : (\n          translate('please_contact_administrator')\n        )}\n      </Alert>\n    );\n  }\n}\n\nexport default withAppState(ComponentNavLicenseNotif);\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { Link } from 'react-router';\nimport { FormattedMessage } from 'react-intl';\nimport ComponentNavLicenseNotif from './ComponentNavLicenseNotif';\nimport { STATUSES } from '../../../../apps/background-tasks/constants';\nimport { getComponentBackgroundTaskUrl } from '../../../../helpers/urls';\nimport { hasMessage, translate } from '../../../../helpers/l10n';\nimport { Alert } from '../../../../components/ui/Alert';\n\ninterface Props {\n  component: T.Component;\n  currentTask?: T.Task;\n  currentTaskOnSameBranch?: boolean;\n  isInProgress?: boolean;\n  isPending?: boolean;\n}\n\nexport default class ComponentNavBgTaskNotif extends React.PureComponent<Props> {\n  renderMessage(messageKey: string, status?: string, branch?: string) {\n    const { component } = this.props;\n    const canSeeBackgroundTasks =\n      component.configuration && component.configuration.showBackgroundTasks;\n\n    let url;\n    if (canSeeBackgroundTasks) {\n      messageKey += '.admin';\n      url = (\n        <Link to={getComponentBackgroundTaskUrl(component.key, status)}>\n          {translate('background_tasks.page')}\n        </Link>\n      );\n    }\n\n    return (\n      <FormattedMessage\n        defaultMessage={translate(messageKey)}\n        id={messageKey}\n        values={{ branch, url }}\n      />\n    );\n  }\n\n  render() {\n    const { currentTask, currentTaskOnSameBranch, isInProgress, isPending } = this.props;\n    if (isInProgress) {\n      return (\n        <Alert display=\"banner\" variant=\"info\">\n          {this.renderMessage('component_navigation.status.in_progress')}\n        </Alert>\n      );\n    } else if (isPending) {\n      return (\n        <Alert display=\"banner\" variant=\"info\">\n          {this.renderMessage('component_navigation.status.pending', STATUSES.ALL)}\n        </Alert>\n      );\n    } else if (currentTask && currentTask.status === STATUSES.FAILED) {\n      if (\n        currentTask.errorType &&\n        hasMessage('license.component_navigation.button', currentTask.errorType)\n      ) {\n        return <ComponentNavLicenseNotif currentTask={currentTask} />;\n      }\n      const branch =\n        currentTask.branch ||\n        `${currentTask.pullRequest}${\n          currentTask.pullRequestTitle ? ' - ' + currentTask.pullRequestTitle : ''\n        }`;\n      let message;\n      if (currentTaskOnSameBranch === false && branch) {\n        message = this.renderMessage(\n          'component_navigation.status.failed_branch',\n          undefined,\n          branch\n        );\n      } else {\n        message = this.renderMessage('component_navigation.status.failed');\n      }\n\n      return (\n        <Alert display=\"banner\" variant=\"error\">\n          {message}\n        </Alert>\n      );\n    }\n    return null;\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport ComponentNavHeader from './ComponentNavHeader';\nimport ComponentNavMeta from './ComponentNavMeta';\nimport ComponentNavMenu from './ComponentNavMenu';\nimport ComponentNavBgTaskNotif from './ComponentNavBgTaskNotif';\nimport RecentHistory from '../../RecentHistory';\nimport * as theme from '../../../theme';\nimport ContextNavBar from '../../../../components/nav/ContextNavBar';\nimport { STATUSES } from '../../../../apps/background-tasks/constants';\nimport './ComponentNav.css';\n\ninterface Props {\n  branchLikes: T.BranchLike[];\n  currentBranchLike: T.BranchLike | undefined;\n  component: T.Component;\n  currentTask?: T.Task;\n  currentTaskOnSameBranch?: boolean;\n  isInProgress?: boolean;\n  isPending?: boolean;\n  location: {};\n  warnings: string[];\n}\n\nexport default class ComponentNav extends React.PureComponent<Props> {\n  mounted = false;\n\n  componentDidMount() {\n    this.populateRecentHistory();\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    if (this.props.component.key !== prevProps.component.key) {\n      this.populateRecentHistory();\n    }\n  }\n\n  populateRecentHistory = () => {\n    const { breadcrumbs } = this.props.component;\n    const { qualifier } = breadcrumbs[breadcrumbs.length - 1];\n    if (['TRK', 'VW', 'APP', 'DEV'].indexOf(qualifier) !== -1) {\n      RecentHistory.add(\n        this.props.component.key,\n        this.props.component.name,\n        qualifier.toLowerCase(),\n        this.props.component.organization\n      );\n    }\n  };\n\n  render() {\n    const { component, currentBranchLike, currentTask, isInProgress, isPending } = this.props;\n    let notifComponent;\n    if (isInProgress || isPending || (currentTask && currentTask.status === STATUSES.FAILED)) {\n      notifComponent = (\n        <ComponentNavBgTaskNotif\n          component={component}\n          currentTask={currentTask}\n          currentTaskOnSameBranch={this.props.currentTaskOnSameBranch}\n          isInProgress={isInProgress}\n          isPending={isPending}\n        />\n      );\n    }\n    return (\n      <ContextNavBar\n        height={notifComponent ? theme.contextNavHeightRaw + 30 : theme.contextNavHeightRaw}\n        id=\"context-navigation\"\n        notif={notifComponent}>\n        <div className=\"navbar-context-justified\">\n          <ComponentNavHeader\n            branchLikes={this.props.branchLikes}\n            component={component}\n            currentBranchLike={currentBranchLike}\n            // to close dropdown on any location change\n            location={this.props.location}\n          />\n          <ComponentNavMeta\n            branchLike={currentBranchLike}\n            component={component}\n            warnings={this.props.warnings}\n          />\n        </div>\n        <ComponentNavMenu\n          branchLike={currentBranchLike}\n          component={component}\n          // to re-render selected menu item\n          location={this.props.location}\n        />\n      </ContextNavBar>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { connect } from 'react-redux';\nimport { differenceBy } from 'lodash';\nimport { ComponentContext } from './ComponentContext';\nimport ComponentContainerNotFound from './ComponentContainerNotFound';\nimport ComponentNav from './nav/component/ComponentNav';\nimport { getBranches, getPullRequests } from '../../api/branches';\nimport { getTasksForComponent, getAnalysisStatus } from '../../api/ce';\nimport { getComponentData } from '../../api/components';\nimport { getComponentNavigation } from '../../api/nav';\nimport {\n  fetchOrganization,\n  requireAuthorization,\n  registerBranchStatus\n} from '../../store/rootActions';\nimport { STATUSES } from '../../apps/background-tasks/constants';\nimport {\n  isPullRequest,\n  isBranch,\n  isMainBranch,\n  isLongLivingBranch,\n  isShortLivingBranch,\n  getBranchLikeQuery\n} from '../../helpers/branches';\nimport { isSonarCloud } from '../../helpers/system';\nimport { withRouter, Router, Location } from '../../components/hoc/withRouter';\n\ninterface Props {\n  children: React.ReactElement;\n  fetchOrganization: (organization: string) => void;\n  location: Pick<Location, 'query'>;\n  registerBranchStatus: (branchLike: T.BranchLike, component: string, status: T.Status) => void;\n  requireAuthorization: (router: Pick<Router, 'replace'>) => void;\n  router: Pick<Router, 'replace'>;\n}\n\ninterface State {\n  branchLike?: T.BranchLike;\n  branchLikes: T.BranchLike[];\n  component?: T.Component;\n  currentTask?: T.Task;\n  isPending: boolean;\n  loading: boolean;\n  tasksInProgress?: T.Task[];\n  warnings: string[];\n}\n\nconst FETCH_STATUS_WAIT_TIME = 3000;\n\nexport class ComponentContainer extends React.PureComponent<Props, State> {\n  watchStatusTimer?: number;\n  mounted = false;\n  state: State = { branchLikes: [], isPending: false, loading: true, warnings: [] };\n\n  componentDidMount() {\n    this.mounted = true;\n    this.fetchComponent();\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    if (\n      prevProps.location.query.id !== this.props.location.query.id ||\n      prevProps.location.query.branch !== this.props.location.query.branch ||\n      prevProps.location.query.pullRequest !== this.props.location.query.pullRequest\n    ) {\n      this.fetchComponent();\n    }\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n    window.clearTimeout(this.watchStatusTimer);\n  }\n\n  addQualifier = (component: T.Component) => ({\n    ...component,\n    qualifier: component.breadcrumbs[component.breadcrumbs.length - 1].qualifier\n  });\n\n  fetchComponent() {\n    const { branch, id: key, pullRequest } = this.props.location.query;\n    this.setState({ loading: true });\n\n    const onError = (param?: any) => {\n      if (this.mounted) {\n        let response: Response;\n\n        if (param && param.response) {\n          response = param.response;\n        } else {\n          response = param;\n        }\n\n        if (response && response.status === 403) {\n          this.props.requireAuthorization(this.props.router);\n        } else {\n          this.setState({ component: undefined, loading: false });\n        }\n      }\n    };\n\n    Promise.all([\n      getComponentNavigation({ component: key, branch, pullRequest }),\n      getComponentData({ component: key, branch, pullRequest })\n    ])\n      .then(([nav, { component }]) => {\n        const componentWithQualifier = this.addQualifier({ ...nav, ...component });\n\n        if (isSonarCloud()) {\n          this.props.fetchOrganization(componentWithQualifier.organization);\n        }\n        return componentWithQualifier;\n      }, onError)\n      .then(this.fetchBranches)\n      .then(\n        ({ branchLike, branchLikes, component }) => {\n          if (this.mounted) {\n            this.setState({\n              branchLike,\n              branchLikes,\n              component,\n              loading: false\n            });\n            this.fetchStatus(component);\n            this.fetchWarnings(component, branchLike);\n          }\n        },\n        () => {}\n      );\n  }\n\n  fetchBranches = (\n    component: T.Component\n  ): Promise<{\n    branchLike?: T.BranchLike;\n    branchLikes: T.BranchLike[];\n    component: T.Component;\n  }> => {\n    const breadcrumb = component.breadcrumbs.find(({ qualifier }) => {\n      return ['APP', 'TRK'].includes(qualifier);\n    });\n\n    if (breadcrumb) {\n      const { key } = breadcrumb;\n      return Promise.all([\n        getBranches(key),\n        breadcrumb.qualifier === 'APP' ? Promise.resolve([]) : getPullRequests(key)\n      ]).then(([branches, pullRequests]) => {\n        const branchLikes = [...branches, ...pullRequests];\n        const branchLike = this.getCurrentBranchLike(branchLikes);\n\n        this.registerBranchStatuses(branchLikes, component);\n\n        return { branchLike, branchLikes, component };\n      });\n    } else {\n      return Promise.resolve({ branchLikes: [], component });\n    }\n  };\n\n  fetchStatus = (component: T.Component) => {\n    getTasksForComponent(component.key).then(\n      ({ current, queue }) => {\n        if (this.mounted) {\n          let shouldFetchComponent = false;\n          this.setState(\n            ({ branchLike, component, currentTask, tasksInProgress }) => {\n              const newCurrentTask = this.getCurrentTask(current, branchLike);\n              const pendingTasks = this.getPendingTasks(queue, branchLike);\n              const newTasksInProgress = pendingTasks.filter(\n                task => task.status === STATUSES.IN_PROGRESS\n              );\n\n              const currentTaskChanged =\n                currentTask && newCurrentTask && currentTask.id !== newCurrentTask.id;\n              const progressChanged =\n                tasksInProgress &&\n                (newTasksInProgress.length !== tasksInProgress.length ||\n                  differenceBy(newTasksInProgress, tasksInProgress, 'id').length > 0);\n\n              shouldFetchComponent = Boolean(currentTaskChanged || progressChanged);\n              if (\n                !shouldFetchComponent &&\n                component &&\n                (newTasksInProgress.length > 0 || !component.analysisDate)\n              ) {\n                // Refresh the status as long as there is tasks in progress or no analysis\n                window.clearTimeout(this.watchStatusTimer);\n                this.watchStatusTimer = window.setTimeout(\n                  () => this.fetchStatus(component),\n                  FETCH_STATUS_WAIT_TIME\n                );\n              }\n\n              const isPending = pendingTasks.some(task => task.status === STATUSES.PENDING);\n              return {\n                currentTask: newCurrentTask,\n                isPending,\n                tasksInProgress: newTasksInProgress\n              };\n            },\n            () => {\n              if (shouldFetchComponent) {\n                this.fetchComponent();\n              }\n            }\n          );\n        }\n      },\n      () => {}\n    );\n  };\n\n  fetchWarnings = (component: T.Component, branchLike?: T.BranchLike) => {\n    if (component.qualifier === 'TRK') {\n      getAnalysisStatus({\n        component: component.key,\n        ...getBranchLikeQuery(branchLike)\n      }).then(\n        ({ component }) => {\n          this.setState({ warnings: component.warnings });\n        },\n        () => {}\n      );\n    }\n  };\n\n  getCurrentBranchLike = (branchLikes: T.BranchLike[]) => {\n    const { query } = this.props.location;\n    return query.pullRequest\n      ? branchLikes.find(b => isPullRequest(b) && b.key === query.pullRequest)\n      : branchLikes.find(b => isBranch(b) && (query.branch ? b.name === query.branch : b.isMain));\n  };\n\n  getCurrentTask = (current: T.Task, branchLike?: T.BranchLike) => {\n    if (!current) {\n      return undefined;\n    }\n\n    return current.status === STATUSES.FAILED || this.isSameBranch(current, branchLike)\n      ? current\n      : undefined;\n  };\n\n  getPendingTasks = (pendingTasks: T.Task[], branchLike?: T.BranchLike) => {\n    return pendingTasks.filter(task => this.isSameBranch(task, branchLike));\n  };\n\n  isSameBranch = (\n    task: Pick<T.Task, 'branch' | 'branchType' | 'pullRequest'>,\n    branchLike?: T.BranchLike\n  ) => {\n    if (branchLike && !isMainBranch(branchLike)) {\n      if (isPullRequest(branchLike)) {\n        return branchLike.key === task.pullRequest;\n      }\n      if (isShortLivingBranch(branchLike) || isLongLivingBranch(branchLike)) {\n        return branchLike.type === task.branchType && branchLike.name === task.branch;\n      }\n    }\n    return !task.branch && !task.pullRequest;\n  };\n\n  registerBranchStatuses = (branchLikes: T.BranchLike[], component: T.Component) => {\n    branchLikes.forEach(branchLike => {\n      if (branchLike.status) {\n        this.props.registerBranchStatus(\n          branchLike,\n          component.key,\n          branchLike.status.qualityGateStatus\n        );\n      }\n    });\n  };\n\n  handleComponentChange = (changes: Partial<T.Component>) => {\n    if (this.mounted) {\n      this.setState(state => {\n        if (state.component) {\n          const newComponent: T.Component = { ...state.component, ...changes };\n          return { component: newComponent };\n        }\n        return null;\n      });\n    }\n  };\n\n  handleBranchesChange = () => {\n    if (this.mounted && this.state.component) {\n      this.fetchBranches(this.state.component).then(\n        ({ branchLike, branchLikes }) => {\n          if (this.mounted) {\n            this.setState({ branchLike, branchLikes });\n          }\n        },\n        () => {}\n      );\n    }\n  };\n\n  render() {\n    const { component, loading } = this.state;\n\n    if (!loading && !component) {\n      return <ComponentContainerNotFound />;\n    }\n\n    const { branchLike, branchLikes, currentTask, isPending, tasksInProgress } = this.state;\n    const isInProgress = tasksInProgress && tasksInProgress.length > 0;\n\n    return (\n      <div>\n        {component && !['FIL', 'UTS'].includes(component.qualifier) && (\n          <ComponentNav\n            branchLikes={branchLikes}\n            component={component}\n            currentBranchLike={branchLike}\n            currentTask={currentTask}\n            currentTaskOnSameBranch={currentTask && this.isSameBranch(currentTask, branchLike)}\n            isInProgress={isInProgress}\n            isPending={isPending}\n            location={this.props.location}\n            warnings={this.state.warnings}\n          />\n        )}\n        {loading ? (\n          <div className=\"page page-limited\">\n            <i className=\"spinner\" />\n          </div>\n        ) : (\n          <ComponentContext.Provider value={{ branchLike, component }}>\n            {React.cloneElement(this.props.children, {\n              branchLike,\n              branchLikes,\n              component,\n              isInProgress,\n              isPending,\n              onBranchesChange: this.handleBranchesChange,\n              onComponentChange: this.handleComponentChange\n            })}\n          </ComponentContext.Provider>\n        )}\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = { fetchOrganization, registerBranchStatus, requireAuthorization };\n\nexport default withRouter(\n  connect(\n    null,\n    mapDispatchToProps\n  )(ComponentContainer)\n);\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport HelpTooltip from '../controls/HelpTooltip';\nimport { lazyLoad } from '../lazyLoad';\n\nconst DocMarkdownBlock = lazyLoad(() => import('./DocMarkdownBlock'));\n\ninterface Props {\n  className?: string;\n  children?: React.ReactNode;\n  // Use as `import(/* webpackMode: \"eager\" */ 'Docs/tooltips/foo/bar.md')`\n  doc: Promise<{ default: string }>;\n  overlayProps?: T.Dict<string>;\n}\n\ninterface State {\n  content?: string;\n  open: boolean;\n}\n\nexport default class DocTooltip extends React.PureComponent<Props, State> {\n  mounted = false;\n  state: State = { open: false };\n\n  componentDidMount() {\n    this.mounted = true;\n    this.props.doc.then(\n      ({ default: content }) => {\n        if (this.mounted) {\n          this.setState({ content });\n        }\n      },\n      () => {}\n    );\n    document.addEventListener('scroll', this.close, true);\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n    document.removeEventListener('scroll', this.close, true);\n  }\n\n  close = () => {\n    if (this.mounted) {\n      this.setState({ open: false });\n    }\n  };\n\n  render() {\n    return this.state.content ? (\n      <HelpTooltip\n        className={this.props.className}\n        overlay={\n          <div className=\"abs-width-300\">\n            <DocMarkdownBlock\n              childProps={this.props.overlayProps}\n              className=\"cut-margins\"\n              content={this.state.content}\n              isTooltip={true}\n            />\n          </div>\n        }>\n        {this.props.children}\n      </HelpTooltip>\n    ) : (\n      this.props.children || null\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { isLoggedIn } from './users';\n\nexport function getAlmMembersUrl(key: string, url: string): string {\n  if (!url.endsWith('/')) {\n    url += '/';\n  }\n  if (isGithub(key)) {\n    return url.replace('github.com/', 'github.com/orgs/') + 'people';\n  }\n  return url + 'profile/members';\n}\n\nexport function getUserAlmKey(user: T.CurrentUser) {\n  return isLoggedIn(user) && user.externalProvider\n    ? sanitizeAlmId(user.externalProvider)\n    : undefined;\n}\n\nexport function hasAdvancedALMIntegration(user: T.CurrentUser) {\n  return (\n    isLoggedIn(user) && (isBitbucket(user.externalProvider) || isGithub(user.externalProvider))\n  );\n}\n\nexport function isBitbucket(almKey?: string): boolean {\n  return almKey ? almKey.startsWith('bitbucket') : false;\n}\n\nexport function isGithub(almKey?: string): boolean {\n  return almKey === 'github';\n}\n\nexport function isVSTS(almKey?: string): boolean {\n  return almKey === 'microsoft';\n}\n\nexport function isPersonal(organization?: T.AlmOrganization) {\n  return Boolean(organization && organization.personal);\n}\n\nexport function sanitizeAlmId(almKey: string) {\n  if (isBitbucket(almKey)) {\n    return 'bitbucket';\n  }\n  return almKey;\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { Query } from './utils';\n\nexport const STATUSES = {\n  ALL: '__ALL__',\n  ALL_EXCEPT_PENDING: '__ALL_EXCEPT_PENDING__',\n  PENDING: 'PENDING',\n  IN_PROGRESS: 'IN_PROGRESS',\n  SUCCESS: 'SUCCESS',\n  FAILED: 'FAILED',\n  CANCELED: 'CANCELED'\n};\n\nexport const ALL_TYPES = 'ALL_TYPES';\n\nexport const CURRENTS = {\n  ALL: '__ALL__',\n  ONLY_CURRENTS: 'CURRENTS'\n};\n\nexport const DATE = {\n  ANY: 'ANY',\n  TODAY: 'TODAY',\n  CUSTOM: 'CUSTOM'\n};\n\nexport const DEFAULT_FILTERS: Query = {\n  status: STATUSES.ALL_EXCEPT_PENDING,\n  taskType: ALL_TYPES,\n  currents: CURRENTS.ALL,\n  minSubmittedAt: undefined,\n  maxExecutedAt: undefined,\n  query: ''\n};\n\nexport const DATE_FORMAT = 'YYYY-MM-DD';\n\nexport const DEBOUNCE_DELAY = 250;\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { connect } from 'react-redux';\nimport { getWrappedDisplayName } from './utils';\nimport { Store, getAppState } from '../../store/rootReducer';\n\nexport function withAppState<P>(\n  WrappedComponent: React.ComponentClass<P & { appState: Partial<T.AppState> }>\n) {\n  class Wrapper extends React.Component<P & { appState: T.AppState }> {\n    static displayName = getWrappedDisplayName(WrappedComponent, 'withAppState');\n\n    render() {\n      return <WrappedComponent {...this.props} />;\n    }\n  }\n\n  function mapStateToProps(state: Store) {\n    return { appState: getAppState(state) };\n  }\n\n  return connect(mapStateToProps)(Wrapper);\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { getJSON, post, RequestData } from '../helpers/request';\nimport throwGlobalError from '../app/utils/throwGlobalError';\n\nexport function getAnalysisStatus(data: {\n  component: string;\n  branch?: string;\n  pullRequest?: string;\n}): Promise<{\n  component: {\n    branch?: string;\n    key: string;\n    name: string;\n    organization?: string;\n    pullRequest?: string;\n    warnings: string[];\n  };\n}> {\n  return getJSON('/api/ce/analysis_status', data).catch(throwGlobalError);\n}\n\nexport function getActivity(data: RequestData): Promise<{ tasks: T.Task[] }> {\n  return getJSON('/api/ce/activity', data);\n}\n\nexport function getStatus(\n  componentId?: string\n): Promise<{ failing: number; inProgress: number; pending: number; pendingTime?: number }> {\n  const data = {};\n  if (componentId) {\n    Object.assign(data, { componentId });\n  }\n  return getJSON('/api/ce/activity_status', data);\n}\n\nexport function getTask(id: string, additionalFields?: string[]): Promise<T.Task> {\n  return getJSON('/api/ce/task', { id, additionalFields }).then(r => r.task);\n}\n\nexport function cancelTask(id: string): Promise<any> {\n  return post('/api/ce/cancel', { id }).then(() => getTask(id), () => getTask(id));\n}\n\nexport function cancelAllTasks(): Promise<any> {\n  return post('/api/ce/cancel_all');\n}\n\nexport function getTasksForComponent(\n  component: string\n): Promise<{ queue: T.Task[]; current: T.Task }> {\n  return getJSON('/api/ce/component', { component }).catch(throwGlobalError);\n}\n\nexport function getTypes(): Promise<string[]> {\n  return getJSON('/api/ce/task_types').then(r => r.taskTypes);\n}\n\nexport function getWorkers(): Promise<{ canSetWorkerCount: boolean; value: number }> {\n  return getJSON('/api/ce/worker_count').catch(throwGlobalError);\n}\n\nexport function setWorkerCount(count: number): Promise<void | Response> {\n  return post('/api/ce/set_worker_count', { count }).catch(throwGlobalError);\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { getJSON } from '../helpers/request';\nimport throwGlobalError from '../app/utils/throwGlobalError';\n\nexport function getGlobalNavigation(): Promise<T.AppState> {\n  return getJSON('/api/navigation/global');\n}\n\nexport function getComponentNavigation(\n  data: { component: string } & T.BranchParameters\n): Promise<any> {\n  return getJSON('/api/navigation/component', data).catch(throwGlobalError);\n}\n\nexport function getMarketplaceNavigation(): Promise<{ serverId: string; ncloc: number }> {\n  return getJSON('/api/navigation/marketplace').catch(throwGlobalError);\n}\n\nexport function getSettingsNavigation(): Promise<any> {\n  return getJSON('/api/navigation/settings').catch(throwGlobalError);\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport Helmet from 'react-helmet';\n\ninterface Props {\n  organization?: { name: string };\n  title: string;\n}\n\nexport default function OrganizationHelmet({ title, organization }: Props) {\n  const defaultTitle = title + (organization ? ' - ' + organization.name : '');\n  return <Helmet defaultTitle={defaultTitle} titleTemplate={'%s - ' + defaultTitle} />;\n}\n"],"sourceRoot":""}