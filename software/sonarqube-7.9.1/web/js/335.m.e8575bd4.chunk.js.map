{"version":3,"sources":["webpack:///./src/main/js/apps/create/organization/AlmApplicationInstalling.tsx","webpack:///./src/main/js/apps/create/organization/AutoOrganizationBind.tsx","webpack:///./src/main/js/apps/create/components/OrganizationAvatarInput.tsx","webpack:///./src/main/js/apps/create/components/OrganizationKeyInput.tsx","webpack:///./src/main/js/apps/create/components/OrganizationUrlInput.tsx","webpack:///./src/main/js/apps/create/organization/OrganizationDetailsForm.tsx","webpack:///./src/main/js/apps/create/organization/OrganizationDetailsStep.tsx","webpack:///./src/main/js/apps/create/components/FreeCardPlan.tsx","webpack:///./src/main/js/apps/create/organization/PlanSelect.tsx","webpack:///./src/main/js/apps/create/components/PaidCardPlan.tsx","webpack:///./src/main/js/apps/create/organization/PlanStep.tsx","webpack:///./src/main/js/apps/create/organization/AutoOrganizationCreate.tsx","webpack:///./src/main/js/apps/create/organization/AutoPersonalOrganizationBind.tsx","webpack:///./src/main/js/apps/create/organization/ManualOrganizationCreate.tsx","webpack:///./src/main/js/apps/create/organization/RemoteOrganizationChoose.tsx","webpack:///./src/main/js/apps/create/organization/CreateOrganization.tsx","webpack:///./src/main/js/apps/create/organization/actions.ts","webpack:///./src/main/js/components/controls/RadioToggle.tsx","webpack:///./src/main/js/app/utils/addGlobalSuccessMessage.ts","webpack:///./src/main/js/apps/tutorials/components/Step.tsx","webpack:///./src/main/js/apps/tutorials/styles.css?5461","webpack:///./src/main/js/apps/tutorials/styles.css","webpack:///./src/main/js/apps/organizations/actions.ts"],"names":["AlmApplicationInstalling","_ref","almKey","index_js_exposed","DeferredSpinner","customSpinner","className","Object","l10n","almIntegrations","AutoOrganizationBind_AutoOrganizationBind","[object Object]","props","super","this","mounted","handleChange","key","setState","organization","handleSubmit","event","preventDefault","state","submitting","onBindOrganization","then","stopSubmitting","getInitialSelectedOrganization","unboundOrganizations","length","_this$state","id","onSubmit","OrganizationSelect","onChange","organizations","Alert","display","variant","react_router_es","target","to","pathname","buttons","disabled","OrganizationAvatarInput_OrganizationAvatarInput","error","undefined","editing","touched","value","currentTarget","trim","validateUrl","handleBlur","handleFocus","initialValue","Boolean","url","valid_url","isInvalid","isValidUrl","isValid","ValidationInput","description","label","name","OrganizationAvatar","avatar","classnames","is-invalid","is-valid","onBlur","onFocus","placeholder","type","OrganizationKeyInput_OrganizationKeyInput","checkFreeKey","validating","catch","validateKey","debounce_default","test","required","urls","replace","autoFocus","maxLength","OrganizationUrlInput_OrganizationUrlInput","OrganizationDetailsForm_OrganizationDetailsForm","handleAdditionalClick","additional","handleAvatarUpdate","handleDescriptionUpdate","handleKeyUpdate","handleNameUpdate","handleUrlUpdate","canSubmit","onContinue","_this$props","infoBlock","keyReadOnly","onClick","DropdownIcon","turned","hidden","htmlFor","rows","submitText","OrganizationDetailsStep_OrganizationDetailsStep","renderForm","children","renderResult","AlertSuccessIcon","Step","finished","onOpen","open","stepNumber","stepTitle","FreeCardPlan","_a","almName","hasWarning","FreeCardPlan_rest","showInfo","showWarning","RadioCard","assign","title","titleInfo","utils","index_es","defaultMessage","values","alm","Plan","PaidCardPlan","isRecommended","startingPrice","PaidCardPlan_rest","recommended","price","UpgradeOrganizationAdvantages","PlanSelect_PlanSelect","handleFreePlanClick","Free","handlePaidPlanClick","Paid","almApplication","almOrganization","plan","hasPrivateRepo","privateRepos","onlyPrivateRepo","publicRepos","cards","selected","aria-label","role","reverse","BillingForm","withCurrentUser","BillingFormShim","PlanStep_PlanStep","handlePlanChange","handleFreePlanSubmit","createOrganization","onDone","subscriptionPlans","ready","onCommit","onFailToUpgrade","onUpgradeFail","organizationKey","renderFormFields","renderSubmitGroup","extensions","Filters","AutoOrganizationCreate_AutoOrganizationCreate","handleBindOrganization","alm_integration","installationId","almInstallId","onOrgCreated","handleCreateOrganization","membersSync","almUrl","Promise","reject","handleOptionChange","filter","Create","_this$props2","step","hasUnboundOrgs","handleOrgDetailsStepOpen","OrganizationDetails","alt","src","concat","width","handleCancelImport","RadioToggle","onCheck","options","Bind","href","rel","handleOrgDetailsFinish","AutoPersonalOrganizationBind_AutoPersonalOrganizationBind","updateOrganization","importPersonalOrg","personalAvatar","small","personalName","ManualOrganizationCreate_ManualOrganizationCreate","organization_RemoteOrganizationChoose","unboundInstallationId","router","push","query","handleInstallAppClick","storage","Date","now","toString","handleInstallationChange","renderOption","height","almUnboundApplications","boundOrganization","boundAvatar","boundName","IdentityProviderLink","identityProvider","installationUrl","Select","clearable","labelKey","optionRenderer","sortBy_default","o","toLowerCase","valueKey","valueRenderer","CreateOrganization_CreateOrganization","_this","almOrgLoading","bindingExistingOrg","loading","deleteOrganization","fetchAlmApplication","application","fetchAlmOrganization","_ref2","resolve","setValidOrgKey","_ref3","isStoredTimestampValid","fetchAlmUnboundApplications","fetchSubscriptionPlans","billing","updateUrlQuery","handleOrgCreated","skipOnboarding","tab","handlePlanDone","timestampKey","storedTimestamp","date_fns","Number","onTabChange","updateUrlState","getHeader","strings","keys","times_default","i","join","_ref4","find","Math","ceil","random","stopLoading","arguments","location","renderContent","currentUser","_ref5$tab","commonProps","hasAutoImport","Tabs","tabs","node","userOrganizations","_ref6","_ref6$actions","actions","personalOrganization","admin","pages","bindAndRedirectToOrganizationSettings","initRequests","all","prevProps","prevQuery","addGlobalSuccessMessage","header","startedPrice","Helmet","titleTemplate","A11ySkipTarget","anchor","mapDispatchToProps","__rest","dispatch","newOrganization","store_organizations","changes","promises","users","__webpack_exports__","whenLoggedIn","withUserOrganizations","es","__webpack_require__","d","react__WEBPACK_IMPORTED_MODULE_0__","classnames__WEBPACK_IMPORTED_MODULE_1__","_Tooltip__WEBPACK_IMPORTED_MODULE_2__","e","newValue","option","checked","htmlId","overlay","tooltip","map","defaultProps","_getStore__WEBPACK_IMPORTED_MODULE_0__","_store_globalMessages__WEBPACK_IMPORTED_MODULE_1__","message","is-open","is-finished","clickable","tabIndex","content","module","hmr","transform","insertInto","locals","exports","_api_organizations__WEBPACK_IMPORTED_MODULE_0__","_store_organizations__WEBPACK_IMPORTED_MODULE_1__","_store_globalMessages__WEBPACK_IMPORTED_MODULE_2__","_helpers_l10n__WEBPACK_IMPORTED_MODULE_3__"],"mappings":"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","file":"js/335.m.e8575bd4.chunk.js","sourcesContent":["/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport DeferredSpinner from '../../../components/common/DeferredSpinner';\nimport { sanitizeAlmId } from '../../../helpers/almIntegrations';\nimport { translate, translateWithParameters } from '../../../helpers/l10n';\n\nexport default function AlmApplicationInstalling({ almKey }: { almKey?: string }) {\n  return (\n    <DeferredSpinner\n      customSpinner={\n        <div className=\"sonarcloud page page-limited\">\n          <div className=\"huge-spacer-top text-center\">\n            <i className=\"spinner\" />\n            <p className=\"big-spacer-top\">\n              {translateWithParameters(\n                'onboarding.import_organization.installing',\n                almKey ? translate(sanitizeAlmId(almKey)) : 'ALM'\n              )}\n            </p>\n          </div>\n        </div>\n      }\n    />\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { Link } from 'react-router';\nimport OrganizationSelect from '../components/OrganizationSelect';\nimport DeferredSpinner from '../../../components/common/DeferredSpinner';\nimport { Alert } from '../../../components/ui/Alert';\nimport { SubmitButton } from '../../../components/ui/buttons';\nimport { translate, translateWithParameters } from '../../../helpers/l10n';\nimport { isGithub } from '../../../helpers/almIntegrations';\n\ninterface Props {\n  almKey: string;\n  onBindOrganization: (organization: string) => Promise<void>;\n  unboundOrganizations: T.Organization[];\n}\n\ninterface State {\n  organization: string;\n  submitting: boolean;\n}\n\nexport default class AutoOrganizationBind extends React.PureComponent<Props, State> {\n  mounted = false;\n\n  constructor(props: Props) {\n    super(props);\n    this.state = { organization: this.getInitialSelectedOrganization(props), submitting: false };\n  }\n\n  componentDidMount() {\n    this.mounted = true;\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  getInitialSelectedOrganization(props: Props) {\n    if (props.unboundOrganizations.length === 1) {\n      return props.unboundOrganizations[0].key;\n    }\n    return '';\n  }\n\n  handleChange = ({ key }: T.Organization) => {\n    this.setState({ organization: key });\n  };\n\n  handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    const { organization } = this.state;\n    if (organization) {\n      this.setState({ submitting: true });\n      this.props.onBindOrganization(organization).then(this.stopSubmitting, this.stopSubmitting);\n    }\n  };\n\n  stopSubmitting = () => {\n    if (this.mounted) {\n      this.setState({ submitting: false });\n    }\n  };\n\n  render() {\n    const { almKey } = this.props;\n    const { organization, submitting } = this.state;\n    return (\n      <form id=\"bind-organization-form\" onSubmit={this.handleSubmit}>\n        <OrganizationSelect\n          onChange={this.handleChange}\n          organization={organization}\n          organizations={this.props.unboundOrganizations}\n        />\n        {isGithub(almKey) && (\n          <Alert className=\"abs-width-400 big-spacer-top\" display=\"block\" variant=\"info\">\n            {translateWithParameters(\n              'onboarding.import_organization.bind_members_not_sync_info_x',\n              translate('organization', almKey)\n            )}\n            <Link\n              className=\"spacer-left\"\n              target=\"_blank\"\n              to={{ pathname: '/documentation/organizations/manage-team/' }}>\n              {translate('learn_more')}\n            </Link>\n          </Alert>\n        )}\n        <div className=\"display-flex-center big-spacer-top\">\n          <SubmitButton disabled={submitting || !organization}>\n            {translate('onboarding.import_organization.bind')}\n          </SubmitButton>\n          {submitting && <DeferredSpinner className=\"spacer-left\" />}\n        </div>\n      </form>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport * as classNames from 'classnames';\nimport { isWebUri } from 'valid-url';\nimport ValidationInput from '../../../components/controls/ValidationInput';\nimport { translate } from '../../../helpers/l10n';\nimport OrganizationAvatar from '../../../components/common/OrganizationAvatar';\n\ninterface Props {\n  initialValue?: string;\n  name?: string;\n  onChange: (value: string | undefined) => void;\n}\n\ninterface State {\n  editing: boolean;\n  error?: string;\n  touched: boolean;\n  value: string;\n}\n\nexport default class OrganizationAvatarInput extends React.PureComponent<Props, State> {\n  state: State = { error: undefined, editing: false, touched: false, value: '' };\n\n  componentDidMount() {\n    if (this.props.initialValue) {\n      const value = this.props.initialValue;\n      const error = this.validateUrl(value);\n      this.setState({ error, touched: Boolean(error), value });\n    }\n  }\n\n  handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const value = event.currentTarget.value.trim();\n    const error = this.validateUrl(value);\n    this.setState({ error, touched: true, value });\n    this.props.onChange(error === undefined ? value : undefined);\n  };\n\n  handleBlur = () => {\n    this.setState({ editing: false });\n  };\n\n  handleFocus = () => {\n    this.setState({ editing: true });\n  };\n\n  validateUrl(url: string) {\n    if (url.length > 0 && !isWebUri(url)) {\n      return translate('onboarding.create_organization.url.error');\n    }\n    return undefined;\n  }\n\n  render() {\n    const isInvalid = this.state.touched && !this.state.editing && this.state.error !== undefined;\n    const isValidUrl = this.state.error === undefined && this.state.value !== '';\n    const isValid = this.state.touched && isValidUrl;\n    return (\n      <ValidationInput\n        description={translate('onboarding.create_organization.avatar.description')}\n        error={this.state.error}\n        id=\"organization-avatar\"\n        isInvalid={isInvalid}\n        isValid={isValid}\n        label={translate('onboarding.create_organization.avatar')}>\n        <>\n          {(isValidUrl || this.props.name) && (\n            <OrganizationAvatar\n              className=\"display-block spacer-bottom\"\n              organization={{\n                avatar: isValidUrl ? this.state.value : undefined,\n                name: this.props.name || ''\n              }}\n            />\n          )}\n          <input\n            className={classNames('input-super-large', 'text-middle', {\n              'is-invalid': isInvalid,\n              'is-valid': isValid\n            })}\n            id=\"organization-avatar\"\n            onBlur={this.handleBlur}\n            onChange={this.handleChange}\n            onFocus={this.handleFocus}\n            placeholder={translate('onboarding.create_organization.avatar.placeholder')}\n            type=\"text\"\n            value={this.state.value}\n          />\n        </>\n      </ValidationInput>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport * as classNames from 'classnames';\nimport { debounce } from 'lodash';\nimport { getOrganization } from '../../../api/organizations';\nimport ValidationInput from '../../../components/controls/ValidationInput';\nimport { translate } from '../../../helpers/l10n';\nimport { getHostUrl } from '../../../helpers/urls';\n\ninterface Props {\n  initialValue?: string;\n  onChange: (value: string | undefined) => void;\n}\n\ninterface State {\n  error?: string;\n  touched: boolean;\n  validating: boolean;\n  value: string;\n}\n\nexport default class OrganizationKeyInput extends React.PureComponent<Props, State> {\n  mounted = false;\n  constructor(props: Props) {\n    super(props);\n    this.state = { error: undefined, touched: false, validating: false, value: '' };\n    this.checkFreeKey = debounce(this.checkFreeKey, 250);\n  }\n\n  componentDidMount() {\n    this.mounted = true;\n    if (this.props.initialValue !== undefined) {\n      this.setState({ value: this.props.initialValue });\n      this.validateKey(this.props.initialValue);\n    }\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  checkFreeKey = (key: string) => {\n    this.setState({ validating: true });\n    return getOrganization(key)\n      .then(organization => {\n        if (this.mounted) {\n          if (organization === undefined) {\n            this.setState({ error: undefined, validating: false });\n            this.props.onChange(key);\n          } else {\n            this.setState({\n              error: translate('onboarding.create_organization.organization_name.taken'),\n              touched: true,\n              validating: false\n            });\n            this.props.onChange(undefined);\n          }\n        }\n      })\n      .catch(() => {\n        if (this.mounted) {\n          this.setState({ error: undefined, validating: false });\n          this.props.onChange(key);\n        }\n      });\n  };\n\n  handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const { value } = event.currentTarget;\n    this.setState({ touched: true, value });\n    this.validateKey(value);\n  };\n\n  validateKey(key: string) {\n    if (key.length > 255 || !/^[a-z0-9][a-z0-9-]*[a-z0-9]?$/.test(key)) {\n      this.setState({\n        error: translate('onboarding.create_organization.organization_name.error'),\n        touched: true\n      });\n      this.props.onChange(undefined);\n    } else {\n      this.checkFreeKey(key);\n    }\n  }\n\n  render() {\n    const isInvalid = this.state.touched && this.state.error !== undefined;\n    const isValid = this.state.touched && !this.state.validating && this.state.error === undefined;\n    return (\n      <ValidationInput\n        error={this.state.error}\n        id=\"organization-key\"\n        isInvalid={isInvalid}\n        isValid={isValid}\n        label={translate('onboarding.create_organization.organization_name')}\n        required={true}>\n        <div className=\"display-inline-flex-baseline\">\n          <span className=\"little-spacer-right\">\n            {getHostUrl().replace(/https*:\\/\\//, '') + '/organizations/'}\n          </span>\n          <input\n            autoFocus={true}\n            className={classNames('input-super-large', {\n              'is-invalid': isInvalid,\n              'is-valid': isValid\n            })}\n            id=\"organization-key\"\n            maxLength={255}\n            onChange={this.handleChange}\n            type=\"text\"\n            value={this.state.value}\n          />\n        </div>\n      </ValidationInput>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport * as classNames from 'classnames';\nimport { isWebUri } from 'valid-url';\nimport ValidationInput from '../../../components/controls/ValidationInput';\nimport { translate } from '../../../helpers/l10n';\n\ninterface Props {\n  initialValue?: string;\n  onChange: (value: string | undefined) => void;\n}\n\ninterface State {\n  editing: boolean;\n  error?: string;\n  touched: boolean;\n  value: string;\n}\n\nexport default class OrganizationUrlInput extends React.PureComponent<Props, State> {\n  state: State = { error: undefined, editing: false, touched: false, value: '' };\n\n  componentDidMount() {\n    if (this.props.initialValue) {\n      const value = this.props.initialValue;\n      const error = this.validateUrl(value);\n      this.setState({ error, touched: Boolean(error), value });\n    }\n  }\n\n  handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const value = event.currentTarget.value.trim();\n    const error = this.validateUrl(value);\n    this.setState({ error, touched: true, value });\n    this.props.onChange(error === undefined ? value : undefined);\n  };\n\n  handleBlur = () => {\n    this.setState({ editing: false });\n  };\n\n  handleFocus = () => {\n    this.setState({ editing: true });\n  };\n\n  validateUrl(url: string) {\n    if (url.length > 0 && !isWebUri(url)) {\n      return translate('onboarding.create_organization.url.error');\n    }\n    return undefined;\n  }\n\n  render() {\n    const isInvalid = this.state.touched && !this.state.editing && this.state.error !== undefined;\n    const isValid = this.state.touched && this.state.error === undefined && this.state.value !== '';\n    return (\n      <ValidationInput\n        error={this.state.error}\n        id=\"organization-url\"\n        isInvalid={isInvalid}\n        isValid={isValid}\n        label={translate('onboarding.create_organization.url')}>\n        <input\n          className={classNames('input-super-large', 'text-middle', {\n            'is-invalid': isInvalid,\n            'is-valid': isValid\n          })}\n          id=\"organization-url\"\n          onBlur={this.handleBlur}\n          onChange={this.handleChange}\n          onFocus={this.handleFocus}\n          type=\"text\"\n          value={this.state.value}\n        />\n      </ValidationInput>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport DeferredSpinner from '../../../components/common/DeferredSpinner';\nimport DropdownIcon from '../../../components/icons-components/DropdownIcon';\nimport OrganizationAvatarInput from '../components/OrganizationAvatarInput';\nimport OrganizationKeyInput from '../components/OrganizationKeyInput';\nimport OrganizationUrlInput from '../components/OrganizationUrlInput';\nimport { ResetButtonLink, SubmitButton } from '../../../components/ui/buttons';\nimport { translate } from '../../../helpers/l10n';\n\ntype RequiredOrganization = Required<T.OrganizationBase>;\n\ninterface Props {\n  infoBlock?: React.ReactNode;\n  keyReadOnly?: boolean;\n  onContinue: (organization: T.Organization) => Promise<void>;\n  organization?: T.Organization;\n  submitText: string;\n}\n\ninterface State {\n  additional: boolean;\n  avatar?: string;\n  description?: string;\n  key?: string;\n  name?: string;\n  submitting: boolean;\n  url?: string;\n}\n\ntype ValidState = Pick<State, Exclude<keyof State, RequiredOrganization>> & RequiredOrganization;\n\nexport default class OrganizationDetailsForm extends React.PureComponent<Props, State> {\n  mounted = false;\n\n  constructor(props: Props) {\n    super(props);\n    const { organization } = props;\n    this.state = {\n      additional: false,\n      avatar: (organization && organization.avatar) || '',\n      description: (organization && organization.description) || '',\n      key: (organization && organization.key) || undefined,\n      name: (organization && organization.name) || '',\n      submitting: false,\n      url: (organization && organization.url) || ''\n    };\n  }\n\n  componentDidMount() {\n    this.mounted = true;\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  canSubmit(state: State): state is ValidState {\n    return Boolean(\n      state.key !== undefined &&\n        state.name !== undefined &&\n        state.description !== undefined &&\n        state.avatar !== undefined &&\n        state.url !== undefined\n    );\n  }\n\n  handleAdditionalClick = () => {\n    this.setState(state => ({ additional: !state.additional }));\n  };\n\n  handleAvatarUpdate = (avatar: string | undefined) => {\n    this.setState({ avatar });\n  };\n\n  handleDescriptionUpdate = (event: React.ChangeEvent<HTMLTextAreaElement>) => {\n    this.setState({ description: event.currentTarget.value });\n  };\n\n  handleKeyUpdate = (key: string | undefined) => {\n    this.setState({ key });\n  };\n\n  handleNameUpdate = (event: React.ChangeEvent<HTMLInputElement>) => {\n    this.setState({ name: event.currentTarget.value });\n  };\n\n  handleUrlUpdate = (url: string | undefined) => {\n    this.setState({ url });\n  };\n\n  handleSubmit = (event: React.FormEvent) => {\n    event.preventDefault();\n    const { state } = this;\n    if (this.canSubmit(state)) {\n      this.setState({ submitting: true });\n      this.props\n        .onContinue({\n          avatar: state.avatar,\n          description: state.description,\n          key: state.key,\n          name: state.name,\n          url: state.url\n        })\n        .then(this.stopSubmitting, this.stopSubmitting);\n    }\n  };\n\n  stopSubmitting = () => {\n    if (this.mounted) {\n      this.setState({ submitting: false });\n    }\n  };\n\n  render() {\n    const { submitting } = this.state;\n    const { infoBlock, keyReadOnly } = this.props;\n    return (\n      <form id=\"organization-form\" onSubmit={this.handleSubmit}>\n        {!keyReadOnly && (\n          <OrganizationKeyInput initialValue={this.state.key} onChange={this.handleKeyUpdate} />\n        )}\n        <div className=\"big-spacer-top\">\n          <ResetButtonLink onClick={this.handleAdditionalClick}>\n            {translate(\n              this.state.additional\n                ? 'onboarding.create_organization.hide_additional_info'\n                : 'onboarding.create_organization.add_additional_info'\n            )}\n            <DropdownIcon className=\"little-spacer-left\" turned={this.state.additional} />\n          </ResetButtonLink>\n        </div>\n        <div className=\"js-additional-info\" hidden={!this.state.additional}>\n          <div className=\"big-spacer-top\">\n            <label htmlFor=\"organization-display-name\">\n              <strong>{translate('onboarding.create_organization.display_name')}</strong>\n            </label>\n            <div className=\"little-spacer-top\">\n              <input\n                className=\"input-super-large text-middle\"\n                id=\"organization-display-name\"\n                maxLength={255}\n                onChange={this.handleNameUpdate}\n                type=\"text\"\n                value={this.state.name}\n              />\n            </div>\n            <div className=\"note abs-width-400\">\n              {translate('onboarding.create_organization.display_name.description')}\n            </div>\n          </div>\n          <div className=\"big-spacer-top\">\n            <OrganizationAvatarInput\n              initialValue={this.state.avatar}\n              name={this.state.name}\n              onChange={this.handleAvatarUpdate}\n            />\n          </div>\n          <div className=\"big-spacer-top\">\n            <label htmlFor=\"organization-description\">\n              <strong>{translate('onboarding.create_organization.description')}</strong>\n            </label>\n            <div className=\"little-spacer-top\">\n              <textarea\n                className=\"input-super-large text-middle\"\n                id=\"organization-description\"\n                maxLength={256}\n                onChange={this.handleDescriptionUpdate}\n                rows={3}\n                value={this.state.description}\n              />\n            </div>\n          </div>\n          <div className=\"big-spacer-top\">\n            <OrganizationUrlInput initialValue={this.state.url} onChange={this.handleUrlUpdate} />\n          </div>\n        </div>\n\n        {infoBlock}\n\n        <div className=\"display-flex-center big-spacer-top\">\n          <SubmitButton disabled={submitting || !this.canSubmit(this.state)}>\n            {this.props.submitText}\n          </SubmitButton>\n          {submitting && <DeferredSpinner className=\"spacer-left\" />}\n        </div>\n      </form>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport Step from '../../tutorials/components/Step';\nimport { translate } from '../../../helpers/l10n';\nimport AlertSuccessIcon from '../../../components/icons-components/AlertSuccessIcon';\n\ninterface Props {\n  children: React.ReactNode;\n  finished: boolean;\n  onOpen: () => void;\n  open: boolean;\n  organization?: T.Organization;\n  stepTitle?: string;\n}\nexport default class OrganizationDetailsStep extends React.PureComponent<Props> {\n  renderForm = () => {\n    return <div className=\"boxed-group-inner\">{this.props.children}</div>;\n  };\n\n  renderResult = () => {\n    const { organization } = this.props;\n    return organization ? (\n      <div className=\"boxed-group-actions display-flex-center\">\n        <AlertSuccessIcon className=\"spacer-right\" />\n        <strong className=\"text-limited\">{organization.key}</strong>\n      </div>\n    ) : null;\n  };\n\n  render() {\n    return (\n      <Step\n        finished={this.props.finished}\n        onOpen={this.props.onOpen}\n        open={this.props.open}\n        renderForm={this.renderForm}\n        renderResult={this.renderResult}\n        stepNumber={1}\n        stepTitle={\n          this.props.stepTitle || translate('onboarding.create_organization.enter_org_details')\n        }\n      />\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport RadioCard, { RadioCardProps } from '../../../components/controls/RadioCard';\nimport { Alert } from '../../../components/ui/Alert';\nimport { formatPrice } from '../organization/utils';\nimport { translate } from '../../../helpers/l10n';\n\ninterface Props extends RadioCardProps {\n  almName?: string;\n  hasWarning: boolean;\n}\n\nexport default function FreeCardPlan({ almName, hasWarning, ...props }: Props) {\n  const showInfo = almName && props.disabled;\n  const showWarning = almName && hasWarning && !props.disabled;\n\n  return (\n    <RadioCard title={translate('billing.free_plan.title')} titleInfo={formatPrice(0)} {...props}>\n      <div className=\"spacer-left\">\n        <ul className=\"big-spacer-left note\">\n          <li className=\"little-spacer-bottom\">\n            {translate('billing.free_plan.all_projects_analyzed_public')}\n          </li>\n          <li>{translate('billing.free_plan.anyone_can_browse_source_code')}</li>\n        </ul>\n      </div>\n      {showWarning && (\n        <Alert variant=\"warning\">\n          <FormattedMessage\n            defaultMessage={translate('billing.free_plan.private_repo_warning')}\n            id=\"billing.free_plan.private_repo_warning\"\n            values={{ alm: almName }}\n          />\n        </Alert>\n      )}\n      {showInfo && (\n        <Alert variant=\"info\">\n          <FormattedMessage\n            defaultMessage={translate('billing.free_plan.not_available_info')}\n            id=\"billing.free_plan.not_available_info\"\n            values={{ alm: almName }}\n          />\n        </Alert>\n      )}\n    </RadioCard>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport FreeCardPlan from '../components/FreeCardPlan';\nimport PaidCardPlan from '../components/PaidCardPlan';\nimport { translate } from '../../../helpers/l10n';\n\nexport enum Plan {\n  Free = 'free',\n  Paid = 'paid'\n}\n\ninterface Props {\n  almApplication?: T.AlmApplication;\n  almOrganization?: T.AlmOrganization;\n  onChange: (plan: Plan) => void;\n  plan: Plan;\n  startingPrice: number;\n}\n\nexport default class PlanSelect extends React.PureComponent<Props> {\n  handleFreePlanClick = () => {\n    this.props.onChange(Plan.Free);\n  };\n\n  handlePaidPlanClick = () => {\n    this.props.onChange(Plan.Paid);\n  };\n\n  render() {\n    const { almApplication, almOrganization, plan } = this.props;\n    const hasPrivateRepo = Boolean(almOrganization && almOrganization.privateRepos > 0);\n    const onlyPrivateRepo = Boolean(\n      hasPrivateRepo && almOrganization && almOrganization.publicRepos === 0\n    );\n\n    const cards = [\n      <PaidCardPlan\n        isRecommended={hasPrivateRepo}\n        key=\"paid\"\n        onClick={this.handlePaidPlanClick}\n        selected={plan === Plan.Paid}\n        startingPrice={this.props.startingPrice}\n      />,\n      <FreeCardPlan\n        almName={almApplication && almApplication.name}\n        disabled={onlyPrivateRepo}\n        hasWarning={hasPrivateRepo && plan === Plan.Free}\n        key=\"free\"\n        onClick={this.handleFreePlanClick}\n        selected={plan === Plan.Free}\n      />\n    ];\n\n    return (\n      <div\n        aria-label={translate('onboarding.create_organization.choose_plan')}\n        className=\"display-flex-row huge-spacer-bottom\"\n        role=\"radiogroup\">\n        {hasPrivateRepo ? cards : cards.reverse()}\n      </div>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport { Link } from 'react-router';\nimport UpgradeOrganizationAdvantages from './UpgradeOrganizationAdvantages';\nimport RadioCard, { RadioCardProps } from '../../../components/controls/RadioCard';\nimport { formatPrice } from '../organization/utils';\nimport { translate } from '../../../helpers/l10n';\n\ninterface Props extends RadioCardProps {\n  isRecommended: boolean;\n  startingPrice?: number;\n}\n\nexport default function PaidCardPlan({ isRecommended, startingPrice, ...props }: Props) {\n  return (\n    <RadioCard\n      recommended={isRecommended ? translate('billing.paid_plan.recommended') : undefined}\n      title={translate('billing.paid_plan.title')}\n      titleInfo={\n        startingPrice !== undefined && (\n          <FormattedMessage\n            defaultMessage={translate('billing.price_from_x')}\n            id=\"billing.price_from_x\"\n            values={{\n              price: <span className=\"big\">{formatPrice(startingPrice)}</span>\n            }}\n          />\n        )\n      }\n      {...props}>\n      <UpgradeOrganizationAdvantages />\n      <div className=\"big-spacer-left\">\n        <Link className=\"spacer-left\" target=\"_blank\" to=\"/about/pricing\">\n          {translate('billing.pricing.learn_more')}\n        </Link>\n      </div>\n    </RadioCard>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport PlanSelect, { Plan } from './PlanSelect';\nimport BillingFormShim from '../components/BillingFormShim';\nimport DeferredSpinner from '../../../components/common/DeferredSpinner';\nimport Step from '../../tutorials/components/Step';\nimport { SubmitButton } from '../../../components/ui/buttons';\nimport { withCurrentUser } from '../../../components/hoc/withCurrentUser';\nimport { getExtensionStart } from '../../../helpers/extensions';\nimport { translate } from '../../../helpers/l10n';\n\nconst BillingForm = withCurrentUser(BillingFormShim);\n\ninterface Props {\n  almApplication?: T.AlmApplication;\n  almOrganization?: T.AlmOrganization;\n  createOrganization: () => Promise<string>;\n  onDone: () => void;\n  onUpgradeFail?: () => void;\n  open: boolean;\n  subscriptionPlans: T.SubscriptionPlan[];\n}\n\ninterface State {\n  plan: Plan;\n  ready: boolean;\n  submitting: boolean;\n}\n\nexport default class PlanStep extends React.PureComponent<Props, State> {\n  mounted = false;\n\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      plan: props.almOrganization && props.almOrganization.privateRepos > 0 ? Plan.Paid : Plan.Free,\n      ready: false,\n      submitting: false\n    };\n  }\n\n  componentDidMount() {\n    this.mounted = true;\n    getExtensionStart('billing/billing').then(\n      () => {\n        if (this.mounted) {\n          this.setState({ ready: true });\n        }\n      },\n      () => {}\n    );\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  handlePlanChange = (plan: Plan) => {\n    this.setState({ plan });\n  };\n\n  stopSubmitting = () => {\n    if (this.mounted) {\n      this.setState({ submitting: false });\n    }\n  };\n\n  handleFreePlanSubmit = (event: React.FormEvent) => {\n    event.preventDefault();\n    this.setState({ submitting: true });\n    return this.props.createOrganization().then(() => {\n      this.props.onDone();\n      this.stopSubmitting();\n    }, this.stopSubmitting);\n  };\n\n  renderForm = () => {\n    const { submitting } = this.state;\n    const { subscriptionPlans } = this.props;\n    const startingPrice = subscriptionPlans && subscriptionPlans[0] && subscriptionPlans[0].price;\n    return (\n      <div className=\"boxed-group-inner\">\n        {this.state.ready && (\n          <>\n            <PlanSelect\n              almApplication={this.props.almApplication}\n              almOrganization={this.props.almOrganization}\n              onChange={this.handlePlanChange}\n              plan={this.state.plan}\n              startingPrice={startingPrice}\n            />\n\n            {this.state.plan === Plan.Paid ? (\n              <BillingForm\n                onCommit={this.props.onDone}\n                onFailToUpgrade={this.props.onUpgradeFail}\n                organizationKey={this.props.createOrganization}\n                subscriptionPlans={this.props.subscriptionPlans}>\n                {({ onSubmit, renderFormFields, renderSubmitGroup }) => (\n                  <form id=\"organization-paid-plan-form\" onSubmit={onSubmit}>\n                    {renderFormFields()}\n                    <div className=\"billing-input-large big-spacer-top\">\n                      {renderSubmitGroup(\n                        translate('onboarding.create_organization.create_and_upgrade')\n                      )}\n                    </div>\n                  </form>\n                )}\n              </BillingForm>\n            ) : (\n              <form\n                className=\"display-flex-center big-spacer-top\"\n                id=\"organization-free-plan-form\"\n                onSubmit={this.handleFreePlanSubmit}>\n                <SubmitButton disabled={submitting}>\n                  {translate('my_account.create_organization')}\n                </SubmitButton>\n                {submitting && <DeferredSpinner className=\"spacer-left\" />}\n              </form>\n            )}\n          </>\n        )}\n      </div>\n    );\n  };\n\n  render() {\n    const { almOrganization } = this.props;\n    const stepTitle = translate(\n      almOrganization && almOrganization.privateRepos > 0 && almOrganization.publicRepos === 0\n        ? 'onboarding.create_organization.enter_payment_details'\n        : 'onboarding.create_organization.choose_plan'\n    );\n\n    return (\n      <Step\n        finished={false}\n        onOpen={() => {}}\n        open={this.props.open}\n        renderForm={this.renderForm}\n        renderResult={() => null}\n        stepNumber={2}\n        stepTitle={stepTitle}\n      />\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport AutoOrganizationBind from './AutoOrganizationBind';\nimport OrganizationDetailsForm from './OrganizationDetailsForm';\nimport OrganizationDetailsStep from './OrganizationDetailsStep';\nimport PlanStep from './PlanStep';\nimport { Step } from './utils';\nimport { Alert } from '../../../components/ui/Alert';\nimport { ClearButton } from '../../../components/ui/buttons';\nimport RadioToggle from '../../../components/controls/RadioToggle';\nimport { bindAlmOrganization } from '../../../api/alm-integration';\nimport { sanitizeAlmId, getAlmMembersUrl, isGithub } from '../../../helpers/almIntegrations';\nimport { translate, translateWithParameters } from '../../../helpers/l10n';\nimport { getBaseUrl } from '../../../helpers/urls';\n\nenum Filters {\n  Bind = 'bind',\n  Create = 'create'\n}\n\ninterface Props {\n  almApplication: T.AlmApplication;\n  almInstallId: string;\n  almOrganization: T.AlmOrganization;\n  className?: string;\n  createOrganization: (\n    organization: T.Organization & { installationId?: string }\n  ) => Promise<string>;\n  handleCancelImport: () => void;\n  handleOrgDetailsFinish: (organization: T.Organization) => Promise<void>;\n  handleOrgDetailsStepOpen: () => void;\n  onDone: () => void;\n  onOrgCreated: (organization: string) => void;\n  onUpgradeFail: () => void;\n  organization?: T.Organization;\n  step: Step;\n  subscriptionPlans?: T.SubscriptionPlan[];\n  unboundOrganizations: T.Organization[];\n}\n\ninterface State {\n  filter?: Filters;\n}\n\nexport default class AutoOrganizationCreate extends React.PureComponent<Props, State> {\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      filter: props.unboundOrganizations.length === 0 ? Filters.Create : undefined\n    };\n  }\n\n  handleBindOrganization = (organization: string) => {\n    return bindAlmOrganization({\n      organization,\n      installationId: this.props.almInstallId\n    }).then(() => this.props.onOrgCreated(organization));\n  };\n\n  handleCreateOrganization = () => {\n    const { almApplication, almOrganization, organization } = this.props;\n    if (!organization) {\n      return Promise.reject();\n    }\n    return this.props.createOrganization({\n      ...organization,\n      alm: {\n        key: almApplication.key,\n        membersSync: true,\n        url: almOrganization.almUrl\n      },\n      installationId: this.props.almInstallId\n    });\n  };\n\n  handleOptionChange = (filter: Filters) => {\n    this.setState({ filter });\n  };\n\n  render() {\n    const {\n      almApplication,\n      almOrganization,\n      className,\n      organization,\n      step,\n      subscriptionPlans,\n      unboundOrganizations\n    } = this.props;\n    const { filter } = this.state;\n    const hasUnboundOrgs = unboundOrganizations.length > 0;\n    const almKey = sanitizeAlmId(almApplication.key);\n    return (\n      <div className={className}>\n        <OrganizationDetailsStep\n          finished={organization !== undefined}\n          onOpen={this.props.handleOrgDetailsStepOpen}\n          open={step === Step.OrganizationDetails}\n          organization={organization}\n          stepTitle={translate('onboarding.import_organization.import_org_details')}>\n          <div className=\"huge-spacer-bottom\">\n            <p className=\"display-flex-center big-spacer-bottom\">\n              <FormattedMessage\n                defaultMessage={translate('onboarding.import_organization_x')}\n                id=\"onboarding.import_organization_x\"\n                values={{\n                  avatar: (\n                    <img\n                      alt={almApplication.name}\n                      className=\"little-spacer-left\"\n                      src={`${getBaseUrl()}/images/sonarcloud/${sanitizeAlmId(\n                        almApplication.key\n                      )}.svg`}\n                      width={16}\n                    />\n                  ),\n                  name: <strong>{almOrganization.name}</strong>\n                }}\n              />\n              <ClearButton className=\"little-spacer-left\" onClick={this.props.handleCancelImport} />\n            </p>\n\n            {hasUnboundOrgs && (\n              <RadioToggle\n                name=\"filter\"\n                onCheck={this.handleOptionChange}\n                options={[\n                  {\n                    label: translate('onboarding.import_organization.create_new'),\n                    value: Filters.Create\n                  },\n                  {\n                    label: translate('onboarding.import_organization.bind_existing'),\n                    value: Filters.Bind\n                  }\n                ]}\n                value={filter}\n              />\n            )}\n          </div>\n\n          {filter === Filters.Create && (\n            <OrganizationDetailsForm\n              infoBlock={\n                isGithub(almKey) && (\n                  <Alert className=\"abs-width-600 big-spacer-top\" display=\"block\" variant=\"info\">\n                    <p>\n                      {translateWithParameters(\n                        'onboarding.import_organization.members_sync_info_x',\n                        translate('organization', almKey),\n                        almOrganization.name,\n                        translate(almKey)\n                      )}\n                    </p>\n                    <a\n                      href={getAlmMembersUrl(almApplication.key, almOrganization.almUrl)}\n                      rel=\"noopener noreferrer\"\n                      target=\"_blank\">\n                      {translateWithParameters(\n                        'organization.members.see_all_members_on_x',\n                        translate(almKey)\n                      )}\n                    </a>\n                  </Alert>\n                )\n              }\n              onContinue={this.props.handleOrgDetailsFinish}\n              organization={almOrganization}\n              submitText={translate('continue')}\n            />\n          )}\n          {filter === Filters.Bind && (\n            <AutoOrganizationBind\n              almKey={almKey}\n              onBindOrganization={this.handleBindOrganization}\n              unboundOrganizations={unboundOrganizations}\n            />\n          )}\n        </OrganizationDetailsStep>\n\n        {subscriptionPlans !== undefined && filter !== Filters.Bind && (\n          <PlanStep\n            almApplication={this.props.almApplication}\n            almOrganization={this.props.almOrganization}\n            createOrganization={this.handleCreateOrganization}\n            onDone={this.props.onDone}\n            onUpgradeFail={this.props.onUpgradeFail}\n            open={step === Step.Plan}\n            subscriptionPlans={subscriptionPlans}\n          />\n        )}\n      </div>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport OrganizationDetailsForm from './OrganizationDetailsForm';\nimport OrganizationDetailsStep from './OrganizationDetailsStep';\nimport PlanStep from './PlanStep';\nimport { Step } from './utils';\nimport { ClearButton } from '../../../components/ui/buttons';\nimport OrganizationAvatar from '../../../components/common/OrganizationAvatar';\nimport { getBaseUrl } from '../../../helpers/urls';\nimport { translate } from '../../../helpers/l10n';\nimport { sanitizeAlmId } from '../../../helpers/almIntegrations';\n\ninterface Props {\n  almApplication: T.AlmApplication;\n  almInstallId?: string;\n  almOrganization: T.AlmOrganization;\n  handleCancelImport: () => void;\n  handleOrgDetailsFinish: (organization: T.Organization) => Promise<void>;\n  handleOrgDetailsStepOpen: () => void;\n  importPersonalOrg: T.Organization;\n  onDone: () => void;\n  organization?: T.Organization;\n  step: Step;\n  subscriptionPlans?: T.SubscriptionPlan[];\n  updateOrganization: (\n    organization: T.Organization & { installationId?: string }\n  ) => Promise<string>;\n}\n\nexport default class AutoPersonalOrganizationBind extends React.PureComponent<Props> {\n  handleCreateOrganization = () => {\n    const { organization } = this.props;\n    if (!organization) {\n      return Promise.reject();\n    }\n    return this.props.updateOrganization({\n      ...organization,\n      installationId: this.props.almInstallId\n    });\n  };\n\n  handleOrgDetailsFinish = (organization: T.Organization) => {\n    return this.props.handleOrgDetailsFinish({\n      ...organization,\n      key: this.props.importPersonalOrg.key\n    });\n  };\n\n  render() {\n    const { almApplication, importPersonalOrg, organization, step, subscriptionPlans } = this.props;\n    return (\n      <>\n        <OrganizationDetailsStep\n          finished={organization !== undefined}\n          onOpen={this.props.handleOrgDetailsStepOpen}\n          open={step === Step.OrganizationDetails}\n          organization={organization}\n          stepTitle={translate('onboarding.import_organization.personal.import_org_details')}>\n          <div className=\"display-flex-center big-spacer-bottom\">\n            <FormattedMessage\n              defaultMessage={translate('onboarding.import_personal_organization_x')}\n              id=\"onboarding.import_personal_organization_x\"\n              values={{\n                avatar: (\n                  <img\n                    alt={almApplication.name}\n                    className=\"little-spacer-left\"\n                    src={`${getBaseUrl()}/images/sonarcloud/${sanitizeAlmId(\n                      almApplication.key\n                    )}.svg`}\n                    width={16}\n                  />\n                ),\n                name: <strong>{this.props.almOrganization.name}</strong>,\n                personalAvatar: importPersonalOrg && (\n                  <OrganizationAvatar organization={importPersonalOrg} small={true} />\n                ),\n                personalName: importPersonalOrg && <strong>{importPersonalOrg.name}</strong>\n              }}\n            />\n            <ClearButton className=\"little-spacer-left\" onClick={this.props.handleCancelImport} />\n          </div>\n          <OrganizationDetailsForm\n            keyReadOnly={true}\n            onContinue={this.handleOrgDetailsFinish}\n            organization={importPersonalOrg}\n            submitText={translate('continue')}\n          />\n        </OrganizationDetailsStep>\n        {subscriptionPlans !== undefined && (\n          <PlanStep\n            almApplication={this.props.almApplication}\n            almOrganization={this.props.almOrganization}\n            createOrganization={this.handleCreateOrganization}\n            onDone={this.props.onDone}\n            open={step === Step.Plan}\n            subscriptionPlans={subscriptionPlans}\n          />\n        )}\n      </>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport OrganizationDetailsForm from './OrganizationDetailsForm';\nimport OrganizationDetailsStep from './OrganizationDetailsStep';\nimport PlanStep from './PlanStep';\nimport { Step } from './utils';\nimport { translate } from '../../../helpers/l10n';\n\ninterface Props {\n  createOrganization: (organization: T.Organization) => Promise<string>;\n  className?: string;\n  onUpgradeFail: () => void;\n  handleOrgDetailsFinish: (organization: T.Organization) => Promise<void>;\n  handleOrgDetailsStepOpen: () => void;\n  onDone: () => void;\n  organization?: T.Organization;\n  step: Step;\n  subscriptionPlans?: T.SubscriptionPlan[];\n}\n\nexport default class ManualOrganizationCreate extends React.PureComponent<Props> {\n  handleCreateOrganization = () => {\n    const { organization } = this.props;\n    if (!organization) {\n      return Promise.reject();\n    }\n    return this.props.createOrganization(organization);\n  };\n\n  render() {\n    const { className, organization, subscriptionPlans } = this.props;\n    return (\n      <div className={className}>\n        <OrganizationDetailsStep\n          finished={organization !== undefined}\n          onOpen={this.props.handleOrgDetailsStepOpen}\n          open={this.props.step === Step.OrganizationDetails}\n          organization={organization}>\n          <OrganizationDetailsForm\n            onContinue={this.props.handleOrgDetailsFinish}\n            organization={organization}\n            submitText={translate('continue')}\n          />\n        </OrganizationDetailsStep>\n\n        {subscriptionPlans !== undefined && (\n          <PlanStep\n            createOrganization={this.handleCreateOrganization}\n            onDone={this.props.onDone}\n            onUpgradeFail={this.props.onUpgradeFail}\n            open={this.props.step === Step.Plan}\n            subscriptionPlans={subscriptionPlans}\n          />\n        )}\n      </div>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport * as classNames from 'classnames';\nimport { WithRouterProps, withRouter } from 'react-router';\nimport { FormattedMessage } from 'react-intl';\nimport { sortBy } from 'lodash';\nimport { serializeQuery, ORGANIZATION_IMPORT_BINDING_IN_PROGRESS_TIMESTAMP } from './utils';\nimport IdentityProviderLink from '../../../components/ui/IdentityProviderLink';\nimport OrganizationAvatar from '../../../components/common/OrganizationAvatar';\nimport Select from '../../../components/controls/Select';\nimport { Alert } from '../../../components/ui/Alert';\nimport { SubmitButton } from '../../../components/ui/buttons';\nimport { sanitizeAlmId } from '../../../helpers/almIntegrations';\nimport { translate, translateWithParameters } from '../../../helpers/l10n';\nimport { save } from '../../../helpers/storage';\nimport { getBaseUrl } from '../../../helpers/urls';\n\ninterface Props {\n  almApplication: T.AlmApplication;\n  almInstallId?: string;\n  almOrganization?: T.AlmOrganization;\n  almUnboundApplications: T.AlmUnboundApplication[];\n  boundOrganization?: T.OrganizationBase;\n  className?: string;\n}\n\ninterface State {\n  unboundInstallationId: string;\n}\n\nexport class RemoteOrganizationChoose extends React.PureComponent<Props & WithRouterProps, State> {\n  state: State = { unboundInstallationId: '' };\n\n  handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n\n    const { unboundInstallationId } = this.state;\n    if (unboundInstallationId) {\n      this.props.router.push({\n        pathname: '/create-organization',\n        query: serializeQuery({\n          almInstallId: unboundInstallationId,\n          almKey: this.props.almApplication.key\n        })\n      });\n    }\n  };\n\n  handleInstallAppClick = () => {\n    save(ORGANIZATION_IMPORT_BINDING_IN_PROGRESS_TIMESTAMP, Date.now().toString(10));\n  };\n\n  handleInstallationChange = ({ installationId }: T.AlmUnboundApplication) => {\n    this.setState({ unboundInstallationId: installationId });\n  };\n\n  renderOption = (organization: T.AlmUnboundApplication) => {\n    const { almApplication } = this.props;\n    return (\n      <span>\n        <img\n          alt={almApplication.name}\n          className=\"spacer-right\"\n          height={14}\n          src={`${getBaseUrl()}/images/sonarcloud/${sanitizeAlmId(almApplication.key)}.svg`}\n        />\n        {organization.name}\n      </span>\n    );\n  };\n\n  render() {\n    const {\n      almApplication,\n      almInstallId,\n      almOrganization,\n      almUnboundApplications,\n      boundOrganization,\n      className\n    } = this.props;\n    const { unboundInstallationId } = this.state;\n    return (\n      <div className={classNames('boxed-group', className)}>\n        <div className=\"boxed-group-header\">\n          <h2>{translate('onboarding.import_organization.import_org_details')}</h2>\n        </div>\n        <div className=\"boxed-group-inner\">\n          {almInstallId && !almOrganization && (\n            <Alert className=\"big-spacer-bottom width-60\" variant=\"error\">\n              <div className=\"markdown\">\n                {translate('onboarding.import_organization.org_not_found')}\n                <ul>\n                  <li>{translate('onboarding.import_organization.org_not_found.tips_1')}</li>\n                  <li>{translate('onboarding.import_organization.org_not_found.tips_2')}</li>\n                </ul>\n              </div>\n            </Alert>\n          )}\n          {almOrganization && boundOrganization && (\n            <Alert className=\"big-spacer-bottom width-60\" variant=\"error\">\n              <FormattedMessage\n                defaultMessage={translate('onboarding.import_organization.already_bound_x')}\n                id=\"onboarding.import_organization.already_bound_x\"\n                values={{\n                  avatar: (\n                    <img\n                      alt={almApplication.name}\n                      className=\"little-spacer-left\"\n                      src={`${getBaseUrl()}/images/sonarcloud/${sanitizeAlmId(\n                        almApplication.key\n                      )}.svg`}\n                      width={16}\n                    />\n                  ),\n                  name: <strong>{almOrganization.name}</strong>,\n                  boundAvatar: (\n                    <OrganizationAvatar\n                      className=\"little-spacer-left\"\n                      organization={boundOrganization}\n                      small={true}\n                    />\n                  ),\n                  boundName: <strong>{boundOrganization.name}</strong>\n                }}\n              />\n            </Alert>\n          )}\n          <div className=\"display-flex-center\">\n            <div className=\"display-inline-block\">\n              <IdentityProviderLink\n                className=\"display-inline-block\"\n                identityProvider={almApplication}\n                onClick={this.handleInstallAppClick}\n                small={true}\n                url={almApplication.installationUrl}>\n                {translate(\n                  'onboarding.import_organization.choose_organization_button',\n                  almApplication.key\n                )}\n              </IdentityProviderLink>\n            </div>\n            {almUnboundApplications.length > 0 && (\n              <div className=\"display-flex-stretch\">\n                <div className=\"vertical-pipe-separator\">\n                  <div className=\"vertical-separator \" />\n                  <span className=\"note\">{translate('or')}</span>\n                  <div className=\"vertical-separator\" />\n                </div>\n                <form className=\"big-spacer-top big-spacer-bottom\" onSubmit={this.handleSubmit}>\n                  <div className=\"form-field abs-width-400\">\n                    <label className=\"text-normal\" htmlFor=\"select-unbound-installation\">\n                      {translateWithParameters(\n                        'onboarding.import_organization.choose_unbound_installation_x',\n                        translate(sanitizeAlmId(almApplication.key))\n                      )}\n                    </label>\n                    <Select\n                      className=\"input-super-large\"\n                      clearable={false}\n                      id=\"select-unbound-installation\"\n                      labelKey=\"name\"\n                      onChange={this.handleInstallationChange}\n                      optionRenderer={this.renderOption}\n                      options={sortBy(almUnboundApplications, o => o.name.toLowerCase())}\n                      placeholder={translate('onboarding.import_organization.choose_organization')}\n                      value={unboundInstallationId}\n                      valueKey=\"installationId\"\n                      valueRenderer={this.renderOption}\n                    />\n                  </div>\n                  <SubmitButton disabled={!unboundInstallationId}>\n                    {translate('continue')}\n                  </SubmitButton>\n                </form>\n              </div>\n            )}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default withRouter(RemoteOrganizationChoose);\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport * as classNames from 'classnames';\nimport { differenceInMinutes } from 'date-fns';\nimport { times } from 'lodash';\nimport { connect } from 'react-redux';\nimport { Helmet } from 'react-helmet';\nimport { withRouter, WithRouterProps } from 'react-router';\nimport { createOrganization, updateOrganization } from './actions';\nimport {\n  ORGANIZATION_IMPORT_REDIRECT_TO_PROJECT_TIMESTAMP,\n  parseQuery,\n  serializeQuery,\n  Query,\n  ORGANIZATION_IMPORT_BINDING_IN_PROGRESS_TIMESTAMP,\n  Step,\n  BIND_ORGANIZATION_REDIRECT_TO_ORG_TIMESTAMP,\n  BIND_ORGANIZATION_KEY\n} from './utils';\nimport AlmApplicationInstalling from './AlmApplicationInstalling';\nimport AutoOrganizationCreate from './AutoOrganizationCreate';\nimport AutoPersonalOrganizationBind from './AutoPersonalOrganizationBind';\nimport ManualOrganizationCreate from './ManualOrganizationCreate';\nimport RemoteOrganizationChoose from './RemoteOrganizationChoose';\nimport A11ySkipTarget from '../../../app/components/a11y/A11ySkipTarget';\nimport DeferredSpinner from '../../../components/common/DeferredSpinner';\nimport Tabs from '../../../components/controls/Tabs';\nimport { whenLoggedIn } from '../../../components/hoc/whenLoggedIn';\nimport { withUserOrganizations } from '../../../components/hoc/withUserOrganizations';\nimport { deleteOrganization } from '../../organizations/actions';\nimport {\n  getAlmAppInfo,\n  getAlmOrganization,\n  GetAlmOrganizationResponse,\n  listUnboundApplications,\n  bindAlmOrganization\n} from '../../../api/alm-integration';\nimport { getSubscriptionPlans } from '../../../api/billing';\nimport * as api from '../../../api/organizations';\nimport {\n  hasAdvancedALMIntegration,\n  isPersonal,\n  sanitizeAlmId\n} from '../../../helpers/almIntegrations';\nimport { translate, translateWithParameters } from '../../../helpers/l10n';\nimport { addWhitePageClass, removeWhitePageClass } from '../../../helpers/pages';\nimport { get, remove } from '../../../helpers/storage';\nimport { slugify } from '../../../helpers/strings';\nimport { getOrganizationUrl } from '../../../helpers/urls';\nimport { skipOnboarding } from '../../../store/users';\nimport addGlobalSuccessMessage from '../../../app/utils/addGlobalSuccessMessage';\nimport '../../tutorials/styles.css'; // TODO remove me\n\ninterface Props {\n  createOrganization: (\n    organization: T.Organization & { installationId?: string }\n  ) => Promise<string>;\n  currentUser: T.LoggedInUser;\n  deleteOrganization: (key: string) => Promise<void>;\n  updateOrganization: (\n    organization: T.Organization & { installationId?: string }\n  ) => Promise<string>;\n  userOrganizations: T.Organization[];\n  skipOnboarding: () => void;\n}\n\ninterface State {\n  almApplication?: T.AlmApplication;\n  almOrganization?: T.AlmOrganization;\n  almOrgLoading: boolean;\n  almUnboundApplications: T.AlmUnboundApplication[];\n  bindingExistingOrg: boolean;\n  boundOrganization?: T.OrganizationBase;\n  loading: boolean;\n  organization?: T.Organization;\n  step: Step;\n  subscriptionPlans?: T.SubscriptionPlan[];\n}\n\ntype StateWithAutoImport = State & Required<Pick<State, 'almApplication'>>;\n\ntype TabKeys = 'auto' | 'manual';\n\ninterface LocationState {\n  tab?: TabKeys;\n}\n\nexport class CreateOrganization extends React.PureComponent<Props & WithRouterProps, State> {\n  mounted = false;\n  state: State = {\n    almOrgLoading: false,\n    almUnboundApplications: [],\n    bindingExistingOrg: false,\n    loading: true,\n    step: Step.OrganizationDetails\n  };\n\n  componentDidMount() {\n    this.mounted = true;\n    addWhitePageClass();\n\n    const query = parseQuery(this.props.location.query);\n\n    //highjack the process for the organization settings\n    if (\n      hasAdvancedALMIntegration(this.props.currentUser) &&\n      query.almInstallId &&\n      this.isStoredTimestampValid(BIND_ORGANIZATION_REDIRECT_TO_ORG_TIMESTAMP)\n    ) {\n      this.bindAndRedirectToOrganizationSettings(query.almInstallId);\n    } else {\n      const initRequests = [this.fetchSubscriptionPlans()];\n      if (hasAdvancedALMIntegration(this.props.currentUser)) {\n        initRequests.push(this.fetchAlmApplication());\n\n        if (query.almInstallId) {\n          this.fetchAlmOrganization(query.almInstallId);\n        } else {\n          initRequests.push(this.fetchAlmUnboundApplications());\n        }\n      }\n      Promise.all(initRequests).then(this.stopLoading, this.stopLoading);\n    }\n  }\n\n  componentDidUpdate(prevProps: WithRouterProps) {\n    const prevQuery = parseQuery(prevProps.location.query);\n    const query = parseQuery(this.props.location.query);\n    if (this.state.almApplication && prevQuery.almInstallId !== query.almInstallId) {\n      if (query.almInstallId) {\n        this.fetchAlmOrganization(query.almInstallId);\n      } else {\n        this.setState({ almOrganization: undefined, boundOrganization: undefined, loading: true });\n        this.fetchAlmUnboundApplications().then(this.stopLoading, this.stopLoading);\n      }\n    }\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n    removeWhitePageClass();\n  }\n\n  deleteOrganization = () => {\n    if (this.state.organization) {\n      this.props.deleteOrganization(this.state.organization.key);\n    }\n  };\n\n  fetchAlmApplication = () => {\n    return getAlmAppInfo().then(({ application }) => {\n      if (this.mounted) {\n        this.setState({ almApplication: application });\n      }\n    });\n  };\n\n  fetchAlmOrganization = (installationId: string) => {\n    this.setState({ almOrgLoading: true });\n    return getAlmOrganization({ installationId })\n      .then(({ almOrganization, boundOrganization }) => {\n        if (boundOrganization) {\n          return Promise.resolve({ almOrganization, boundOrganization });\n        }\n        return this.setValidOrgKey(almOrganization);\n      })\n      .then(\n        ({ almOrganization, boundOrganization }: GetAlmOrganizationResponse) => {\n          if (this.mounted) {\n            if (\n              boundOrganization &&\n              boundOrganization.key &&\n              !this.isStoredTimestampValid(ORGANIZATION_IMPORT_BINDING_IN_PROGRESS_TIMESTAMP)\n            ) {\n              this.props.router.push({\n                pathname: getOrganizationUrl(boundOrganization.key)\n              });\n            } else {\n              this.setState({ almOrganization, almOrgLoading: false, boundOrganization });\n            }\n          }\n        },\n        () => {\n          if (this.mounted) {\n            this.setState({ almOrgLoading: false });\n          }\n        }\n      );\n  };\n\n  fetchAlmUnboundApplications = () => {\n    return listUnboundApplications().then(almUnboundApplications => {\n      if (this.mounted) {\n        this.setState({ almUnboundApplications });\n      }\n    });\n  };\n\n  fetchSubscriptionPlans = () => {\n    return getSubscriptionPlans().then(subscriptionPlans => {\n      if (this.mounted) {\n        this.setState({ subscriptionPlans });\n      }\n    });\n  };\n\n  handleCancelImport = () => {\n    this.updateUrlQuery({ almInstallId: undefined, almKey: undefined });\n  };\n\n  handleOrgCreated = (organization: string) => {\n    this.props.skipOnboarding();\n    if (this.isStoredTimestampValid(ORGANIZATION_IMPORT_REDIRECT_TO_PROJECT_TIMESTAMP)) {\n      this.props.router.push({\n        pathname: '/projects/create',\n        state: { organization, tab: this.state.almOrganization ? 'auto' : 'manual' }\n      });\n    } else {\n      this.props.router.push({ pathname: getOrganizationUrl(organization) });\n    }\n  };\n\n  handleOrgDetailsFinish = (organization: T.Organization) => {\n    this.setState({ organization, step: Step.Plan });\n    return Promise.resolve();\n  };\n\n  handleOrgDetailsStepOpen = () => {\n    this.setState({ step: Step.OrganizationDetails });\n  };\n\n  handlePlanDone = () => {\n    if (this.state.organization) {\n      this.handleOrgCreated(this.state.organization.key);\n    }\n  };\n\n  hasAutoImport(state: State): state is StateWithAutoImport {\n    return Boolean(state.almApplication);\n  }\n\n  isStoredTimestampValid = (timestampKey: string) => {\n    const storedTimestamp = get(timestampKey);\n    remove(timestampKey);\n    return storedTimestamp && differenceInMinutes(Date.now(), Number(storedTimestamp)) < 10;\n  };\n\n  onTabChange = (tab: TabKeys) => {\n    this.updateUrlState({ tab });\n  };\n\n  bindAndRedirectToOrganizationSettings(installationId: string) {\n    const organizationKey = get(BIND_ORGANIZATION_KEY) || '';\n    remove(BIND_ORGANIZATION_KEY);\n\n    this.setState({ bindingExistingOrg: true });\n\n    bindAlmOrganization({\n      installationId,\n      organization: organizationKey\n    }).then(\n      () => {\n        this.props.router.push({\n          pathname: `/organizations/${organizationKey}`\n        });\n        addGlobalSuccessMessage(translate('organization.bind.success'));\n      },\n      () => {}\n    );\n  }\n\n  getHeader = (bindingExistingOrg: boolean, importPersonalOrg: boolean) => {\n    if (bindingExistingOrg) {\n      return translate('onboarding.binding_organization');\n    } else if (importPersonalOrg) {\n      return translate('onboarding.import_organization.personal.page.header');\n    } else {\n      return translate('onboarding.create_organization.page.header');\n    }\n  };\n\n  setValidOrgKey = (almOrganization: T.AlmOrganization) => {\n    const key = slugify(almOrganization.key);\n    const keys = [key, ...times(9, i => `${key}-${i + 1}`)];\n    return api\n      .getOrganizations({ organizations: keys.join(',') })\n      .then(\n        ({ organizations }) => {\n          const availableKey = keys.find(key => !organizations.find(o => o.key === key));\n          return availableKey || `${key}-${Math.ceil(Math.random() * 1000) + 10}`;\n        },\n        () => key\n      )\n      .then(key => {\n        return { almOrganization: { ...almOrganization, key } };\n      });\n  };\n\n  stopLoading = () => {\n    if (this.mounted) {\n      this.setState({ loading: false });\n    }\n  };\n\n  updateUrlQuery = (query: Partial<Query> = {}) => {\n    this.props.router.push({\n      pathname: this.props.location.pathname,\n      query: serializeQuery({ ...parseQuery(this.props.location.query), ...query }),\n      state: this.props.location.state\n    });\n  };\n\n  updateUrlState = (state: Partial<LocationState> = {}) => {\n    this.props.router.replace({\n      pathname: this.props.location.pathname,\n      query: this.props.location.query,\n      state: { ...(this.props.location.state || {}), ...state }\n    });\n  };\n\n  renderContent = (almInstallId?: string, importPersonalOrg?: T.Organization) => {\n    const { currentUser, location } = this.props;\n    const { state } = this;\n    const { organization, step, subscriptionPlans } = state;\n    const { tab = 'auto' } = (location.state || {}) as LocationState;\n\n    const commonProps = {\n      handleOrgDetailsFinish: this.handleOrgDetailsFinish,\n      handleOrgDetailsStepOpen: this.handleOrgDetailsStepOpen,\n      onDone: this.handlePlanDone,\n      organization,\n      step,\n      subscriptionPlans\n    };\n\n    if (!this.hasAutoImport(state)) {\n      return (\n        <ManualOrganizationCreate\n          {...commonProps}\n          createOrganization={this.props.createOrganization}\n          onUpgradeFail={this.deleteOrganization}\n          organization={this.state.organization}\n          step={this.state.step}\n        />\n      );\n    }\n\n    const { almApplication, almOrganization, boundOrganization } = state;\n\n    if (importPersonalOrg && almOrganization && almApplication) {\n      return (\n        <AutoPersonalOrganizationBind\n          {...commonProps}\n          almApplication={almApplication}\n          almInstallId={almInstallId}\n          almOrganization={almOrganization}\n          handleCancelImport={this.handleCancelImport}\n          importPersonalOrg={importPersonalOrg}\n          subscriptionPlans={subscriptionPlans}\n          updateOrganization={this.props.updateOrganization}\n        />\n      );\n    }\n\n    return (\n      <>\n        <Tabs<TabKeys>\n          onChange={this.onTabChange}\n          selected={tab || 'auto'}\n          tabs={[\n            {\n              key: 'auto',\n              node: translateWithParameters(\n                'onboarding.import_organization.import_from_x',\n                translate(sanitizeAlmId(almApplication.key))\n              )\n            },\n            {\n              key: 'manual',\n              node: translate('onboarding.create_organization.create_manually')\n            }\n          ]}\n        />\n\n        <ManualOrganizationCreate\n          {...commonProps}\n          className={classNames({ hidden: tab !== 'manual' && this.hasAutoImport(state) })}\n          createOrganization={this.props.createOrganization}\n          onUpgradeFail={this.deleteOrganization}\n        />\n\n        {almInstallId && almOrganization && !boundOrganization ? (\n          <AutoOrganizationCreate\n            {...commonProps}\n            almApplication={almApplication}\n            almInstallId={almInstallId}\n            almOrganization={almOrganization}\n            className={classNames({ hidden: tab !== 'auto' })}\n            createOrganization={this.props.createOrganization}\n            handleCancelImport={this.handleCancelImport}\n            onOrgCreated={this.handleOrgCreated}\n            onUpgradeFail={this.deleteOrganization}\n            unboundOrganizations={this.props.userOrganizations.filter(\n              ({ actions = {}, alm, key }) =>\n                !alm && key !== currentUser.personalOrganization && actions.admin\n            )}\n          />\n        ) : (\n          <RemoteOrganizationChoose\n            almApplication={almApplication}\n            almInstallId={almInstallId}\n            almOrganization={almOrganization}\n            almUnboundApplications={state.almUnboundApplications}\n            boundOrganization={boundOrganization}\n            className={classNames({ hidden: tab !== 'auto' })}\n          />\n        )}\n      </>\n    );\n  };\n\n  render() {\n    const { currentUser, location } = this.props;\n    const query = parseQuery(location.query);\n\n    if (this.state.almOrgLoading) {\n      return <AlmApplicationInstalling almKey={query.almKey} />;\n    }\n\n    const { almOrganization, bindingExistingOrg, subscriptionPlans } = this.state;\n    const importPersonalOrg = isPersonal(almOrganization)\n      ? this.props.userOrganizations.find(o => o.key === currentUser.personalOrganization)\n      : undefined;\n    const header = this.getHeader(bindingExistingOrg, !!importPersonalOrg);\n\n    const startedPrice = subscriptionPlans && subscriptionPlans[0] && subscriptionPlans[0].price;\n\n    return (\n      <>\n        <Helmet title={header} titleTemplate=\"%s\" />\n        <div className=\"page page-limited huge-spacer-top huge-spacer-bottom\">\n          <A11ySkipTarget anchor=\"create_org_main\" />\n\n          <header className=\"page-header huge-spacer-bottom\">\n            <h1 className=\"page-title huge big-spacer-bottom\">\n              <strong>{header}</strong>\n            </h1>\n            {!importPersonalOrg && startedPrice !== undefined && (\n              <p className=\"page-description\">\n                {translate('onboarding.create_organization.page.description')}\n              </p>\n            )}\n          </header>\n          {this.state.loading ? (\n            <DeferredSpinner />\n          ) : (\n            this.renderContent(query.almInstallId, importPersonalOrg)\n          )}\n        </div>\n      </>\n    );\n  }\n}\n\nconst mapDispatchToProps = {\n  createOrganization: createOrganization as any,\n  deleteOrganization: deleteOrganization as any,\n  updateOrganization: updateOrganization as any,\n  skipOnboarding: skipOnboarding as any\n};\n\nexport default whenLoggedIn(\n  withUserOrganizations(\n    withRouter(\n      connect(\n        null,\n        mapDispatchToProps\n      )(CreateOrganization)\n    )\n  )\n);\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { Dispatch } from 'redux';\nimport { bindAlmOrganization } from '../../../api/alm-integration';\nimport * as api from '../../../api/organizations';\nimport * as actions from '../../../store/organizations';\nimport { isGithub } from '../../../helpers/almIntegrations';\n\nexport function createOrganization({\n  alm,\n  ...organization\n}: T.Organization & { installationId?: string }) {\n  return (dispatch: Dispatch) => {\n    return api\n      .createOrganization({ ...organization, name: organization.name || organization.key })\n      .then((newOrganization: T.Organization) => {\n        dispatch(actions.createOrganization({ ...newOrganization, alm }));\n        if (alm && alm.membersSync && isGithub(alm.key)) {\n          api.syncMembers(newOrganization.key);\n        }\n        return newOrganization.key;\n      });\n  };\n}\n\nexport function updateOrganization(organization: T.Organization & { installationId?: string }) {\n  return (dispatch: Dispatch) => {\n    const { key, installationId, ...changes } = organization;\n    const promises = [api.updateOrganization(key, changes)];\n    if (installationId) {\n      promises.push(bindAlmOrganization({ organization: key, installationId }));\n    }\n    return Promise.all(promises).then(() => {\n      dispatch(actions.updateOrganization(key, changes));\n      return organization.key;\n    });\n  };\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport * as classNames from 'classnames';\nimport Tooltip from './Tooltip';\n\ninterface Option {\n  disabled?: boolean;\n  label: string;\n  tooltip?: string;\n  value: string;\n}\n\ninterface Props {\n  className?: string;\n  name: string;\n  onCheck: (value: string) => void;\n  options: Option[];\n  value?: string;\n}\n\nexport default class RadioToggle extends React.PureComponent<Props> {\n  static defaultProps = {\n    disabled: false,\n    value: null\n  };\n\n  handleChange = (e: React.SyntheticEvent<HTMLInputElement>) => {\n    const newValue = e.currentTarget.value;\n    this.props.onCheck(newValue);\n  };\n\n  renderOption = (option: Option) => {\n    const checked = option.value === this.props.value;\n    const htmlId = this.props.name + '__' + option.value;\n    return (\n      <li key={option.value}>\n        <input\n          checked={checked}\n          disabled={option.disabled}\n          id={htmlId}\n          name={this.props.name}\n          onChange={this.handleChange}\n          type=\"radio\"\n          value={option.value}\n        />\n        <Tooltip overlay={option.tooltip || undefined}>\n          <label htmlFor={htmlId}>{option.label}</label>\n        </Tooltip>\n      </li>\n    );\n  };\n\n  render() {\n    return (\n      <ul className={classNames('radio-toggle', this.props.className)}>\n        {this.props.options.map(this.renderOption)}\n      </ul>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport getStore from './getStore';\nimport * as globalMessages from '../../store/globalMessages';\n\nexport default function addGlobalSuccessMessage(message: string): void {\n  const store = getStore();\n  store.dispatch(globalMessages.addGlobalSuccessMessage(message));\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\n/* eslint-disable jsx-a11y/no-static-element-interactions, jsx-a11y/no-noninteractive-tabindex */\nimport * as React from 'react';\nimport * as classNames from 'classnames';\n\ninterface Props {\n  finished?: boolean;\n  onOpen: VoidFunction;\n  open: boolean;\n  renderForm: () => React.ReactNode;\n  renderResult: () => React.ReactNode;\n  stepNumber: number;\n  stepTitle: React.ReactNode;\n}\n\nexport default function Step(props: Props) {\n  const className = classNames('boxed-group', 'onboarding-step', {\n    'is-open': props.open,\n    'is-finished': props.finished\n  });\n\n  const clickable = !props.open && props.finished;\n\n  const handleClick = (event: React.MouseEvent<HTMLDivElement>) => {\n    event.preventDefault();\n    props.onOpen();\n  };\n\n  return (\n    <div\n      className={className}\n      onClick={clickable ? handleClick : undefined}\n      role={clickable ? 'button' : undefined}\n      tabIndex={clickable ? 0 : undefined}>\n      <div className=\"onboarding-step-number\">{props.stepNumber}</div>\n      {!props.open && props.renderResult()}\n      <div className=\"boxed-group-header\">\n        <h2>{props.stepTitle}</h2>\n      </div>\n      {!props.open && <div className=\"boxed-group-inner\" />}\n      <div className={classNames({ hidden: !props.open })}>{props.renderForm()}</div>\n    </div>\n  );\n}\n","\nvar content = require(\"!!../../../../../node_modules/css-loader/dist/cjs.js??ref--6-1!../../../../../node_modules/postcss-loader/src/index.js??postcss!./styles.css\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../../../node_modules/css-loader/dist/cjs.js??ref--6-1!../../../../../node_modules/postcss-loader/src/index.js??postcss!./styles.css\", function() {\n\t\tvar newContent = require(\"!!../../../../../node_modules/css-loader/dist/cjs.js??ref--6-1!../../../../../node_modules/postcss-loader/src/index.js??postcss!./styles.css\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","exports = module.exports = require(\"../../../../../node_modules/css-loader/dist/runtime/api.js\")(false);\n// Module\nexports.push([module.id, \".onboarding-step{position:relative;padding-left:34px}.onboarding-step:not(.is-open):not(.is-finished){opacity:.4}.onboarding-step .boxed-group-actions{height:24px;line-height:24px}.onboarding-step hr{margin-left:-54px}.onboarding-step-number{position:absolute;top:15px;left:15px;width:24px;height:24px;line-height:24px;border-radius:24px;background-color:#b9b9b9;color:#fff;font-size:14px;text-align:center}.onboarding-step.is-open .onboarding-step-number{background-color:#236a97}.onboarding-step.is-finished{cursor:pointer;outline:none}\", \"\"]);\n\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { Dispatch } from 'redux';\nimport * as api from '../../api/organizations';\nimport * as actions from '../../store/organizations';\nimport { addGlobalSuccessMessage } from '../../store/globalMessages';\nimport { translate } from '../../helpers/l10n';\n\nexport function updateOrganization(key: string, changes: T.OrganizationBase) {\n  return (dispatch: Dispatch<any>) => {\n    return api.updateOrganization(key, changes).then(() => {\n      dispatch(actions.updateOrganization(key, changes));\n      dispatch(addGlobalSuccessMessage(translate('organization.updated')));\n    });\n  };\n}\n\nexport function deleteOrganization(key: string) {\n  return (dispatch: Dispatch<any>) => {\n    return api.deleteOrganization(key).then(() => {\n      dispatch(actions.deleteOrganization(key));\n    });\n  };\n}\n"],"sourceRoot":""}