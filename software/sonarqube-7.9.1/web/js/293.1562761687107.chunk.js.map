{"version":3,"sources":["webpack:///./src/main/js/components/common/RestartButton.tsx","webpack:///./src/main/js/components/controls/BoxedGroupAccordion.tsx","webpack:///./src/main/js/components/common/StatusIndicator.css?1954","webpack:///./src/main/js/components/common/StatusIndicator.css","webpack:///./src/main/js/apps/system/styles.css?d742","webpack:///./src/main/js/apps/system/styles.css","webpack:///./src/main/js/apps/system/components/info-items/HealthCauseItem.tsx","webpack:///./src/main/js/components/common/StatusIndicator.tsx","webpack:///./src/main/js/apps/system/components/info-items/HealthItem.tsx","webpack:///./src/main/js/apps/system/utils.ts","webpack:///./src/main/js/apps/system/components/info-items/SysInfoItem.tsx","webpack:///./src/main/js/apps/system/components/info-items/Section.tsx","webpack:///./src/main/js/apps/system/components/info-items/HealthCard.tsx","webpack:///./src/main/js/apps/system/components/ClusterSysInfos.tsx","webpack:///./src/main/js/apps/system/components/ChangeLogLevelForm.tsx","webpack:///./src/main/js/apps/system/components/PageActions.tsx","webpack:///./src/main/js/apps/system/components/PageHeader.tsx","webpack:///./src/main/js/apps/system/components/StandaloneSysInfos.tsx","webpack:///./src/main/js/apps/system/components/system-upgrade/SystemUpgradeIntermediate.tsx","webpack:///./src/main/js/apps/system/components/system-upgrade/SystemUpgradeItem.tsx","webpack:///./src/main/js/apps/system/components/system-upgrade/SystemUpgradeForm.tsx","webpack:///./src/main/js/apps/system/components/system-upgrade/SystemUpgradeNotif.tsx","webpack:///./src/main/js/apps/system/components/App.tsx","webpack:///./src/main/js/components/controls/Modal.tsx","webpack:///./src/main/js/app/components/embed-docs-modal/Suggestions.tsx","webpack:///./src/main/js/components/controls/SimpleModal.tsx","webpack:///./src/main/js/components/controls/ConfirmModal.tsx","webpack:///./src/main/js/components/intl/DateFormatter.tsx","webpack:///./src/main/js/components/controls/ConfirmButton.tsx","webpack:///./src/main/js/components/controls/ModalButton.tsx","webpack:///./src/main/js/components/controls/ClipboardButton.tsx","webpack:///./src/main/js/components/icons-components/ChevronDownIcon.tsx","webpack:///./src/main/js/components/icons-components/OpenCloseIcon.tsx","webpack:///./src/main/js/api/system.ts","webpack:///./src/main/js/app/components/AdminContext.tsx"],"names":["RestartButton","_super","_this","apply","this","arguments","handleConfirm","Object","_api_system__WEBPACK_IMPORTED_MODULE_4__","then","props","fetchSystemStatus","__extends","prototype","render","_a","className","systemStatus","react__WEBPACK_IMPORTED_MODULE_0__","_controls_ConfirmButton__WEBPACK_IMPORTED_MODULE_2__","confirmButtonText","_helpers_l10n__WEBPACK_IMPORTED_MODULE_3__","modalBody","modalHeader","onConfirm","onClick","_ui_buttons__WEBPACK_IMPORTED_MODULE_5__","classnames__WEBPACK_IMPORTED_MODULE_1__","disabled","BoxedGroupAccordion","state","hoveringInner","handleClick","data","onDetailEnter","setState","onDetailLeave","open","renderHeader","title","no-hover","role","_icons_components_OpenCloseIcon__WEBPACK_IMPORTED_MODULE_2__","onMouseEnter","onMouseLeave","children","content","__webpack_require__","module","i","options","hmr","transform","insertInto","undefined","locals","exports","push","HealthCauseItem","health","healthCause","index_js_exposed","Alert","classnames","display","variant","StatusIndicator_StatusIndicator","color","size","small-status-indicator","big-status-indicator","HealthItem","biggerHealth","name","healthCauses","hasHealthCauses","length","statusIndicator","toLowerCase","map","cause","idx","key","Tooltip","overlay","l10n","LOGS_LEVELS","DEFAULT_LOG_LEVEL","APP_NODES_FIELD","CE_FIELD_PREFIX","CE_LOGGING_FIELD","HA_FIELD","HEALTH_CAUSES_FIELD","HEALTH_FIELD","LOGS_LEVEL_FIELD","NAME_FIELD","NCLOC_FIELD","PLUGINS_FIELD","SEARCH_NODES_FIELD","SEARCH_PREFIX","SERVER_ID_FIELD","SETTINGS_FIELD","STATE_FIELD","STATS_FIELD","SYSTEM_FIELD","VERSION_FIELD","WEB_LOGGING_FIELD","WEB_PREFIX","ignoreInfoFields","sysInfoObject","omit_default","getHealth","getHealthCauses","getLogsLevel","isLogInfoBlock","Boolean","hasLoggingInfo","sortBy_default","logLevel","indexOf","getAppNodes","sysInfoData","utils_isCluster","getServerId","getVersion","getClusterVersion","appNodes","getSystemLogsLevel","logLevels","getNodeName","nodeInfo","getSystemData","statData","statistics","measures","__assign","getClusterMainCardSection","getStandaloneMainSections","omitBy_default","value","includes","startsWith","parseQuery","memoize_default","urlQuery","expandedCards","helpers_query","expand","serializeQuery","query","sortUpgrades","upgrades","upgrade","Number","version","split","groupUpgrades","groupedVersions","groupBy_default","keys","SysInfoItem","Array","JSON","stringify","SysInfoItem_typeof","BooleanItem","ObjectItem","AlertSuccessIcon","AlertErrorIcon","map_default","Section","items","id","style","wordBreak","HealthCard","_b","mainSection","sections","each_default","item","_typeof","groupSections","showFields","showSections","showLogLevelWarning","section","ClusterSysInfos","toggleCard","node","getSearchNodes","ChangeLogLevelForm","call","handleFormSubmit","event","preventDefault","newLevel","updating","system","onChange","handleLevelChange","currentTarget","header","Modal","contentLabel","onRequestClose","onClose","onSubmit","level","checked","type","htmlFor","infoMsg","buttons","PageActions","handleLogsLevelOpen","openLogsLevelForm","handleLogsLevelChange","onLogLevelChange","handleLogsLevelClose","removeElementFocus","blur","PageActions_extends","componentWillReceiveProps","nextProps","suffix","now","infoUrl","urls","logsUrl","canDownloadLogs","Dropdown","download","href","rel","target","DropdownIcon","serverId","Date","getFullYear","getMonth","getDate","getHours","getMinutes","canRestart","AdminContext","Consumer","components_ChangeLogLevelForm","cluster","PageHeader","isCluster","loading","showActions","components_PageActions","ClipboardButton","copyValue","dates","label","StandAloneSysInfos","Web","pickBy_default","_","Compute Engine","Search Engine","getStandaloneSecondarySections","SystemUpgradeIntermediate","showMore","toggleIntermediatVersions","SystemUpgradeIntermediate_extends","turned","DateFormatter","date","releaseDate","long","formattedDate","changeLogUrl","description","SystemUpgradeItem","systemUpgrades","lastUpgrade","index_es","defaultMessage","values","system_upgrade_SystemUpgradeIntermediate","slice","downloadUrl","SystemUpgradeForm","upgrading","SystemUpgradeForm_extends","SystemUpgradeNotif","mounted","openSystemUpgradeForm","fetchSystemUpgrade","handleOpenSystemUpgradeForm","handleCloseSystemUpgradeForm","SystemUpgradeNotif_extends","componentDidMount","componentWillUnmount","system_upgrade_SystemUpgradeForm","App_App","App","fetchSysInfo","toggleSysInfoCards","toggledCard","location","filter","card","concat","updateQuery","newQuery","App_assign","router","replace","pathname","App_extends","renderSysInfo","Suggestions","suggestions","Helmet_default","a","system_upgrade_SystemUpgradeNotif","__webpack_exports__","es","react_modal__WEBPACK_IMPORTED_MODULE_1__","classnames__WEBPACK_IMPORTED_MODULE_2__","modal-small","modal-medium","modal-large","isOpen","overlayClassName","modal-no-backdrop","noBackdrop","_SuggestionsContext__WEBPACK_IMPORTED_MODULE_1__","addSuggestions","removeSuggestions","SuggestionsInner","componentDidUpdate","prevProps","SimpleModal","submitting","stopSubmitting","handleCloseClick","submit","handleSubmitClick","result","modalProps","__rest","_Modal__WEBPACK_IMPORTED_MODULE_1__","onCloseClick","onFormSubmit","onSubmitClick","ConfirmModal","handleSubmit","confirmData","renderModalContent","confirmDisable","headerDescription","isDestructive","_c","cancelButtonText","_helpers_l10n__WEBPACK_IMPORTED_MODULE_4__","_common_DeferredSpinner__WEBPACK_IMPORTED_MODULE_2__","_ui_buttons__WEBPACK_IMPORTED_MODULE_3__","autoFocus","_SimpleModal__WEBPACK_IMPORTED_MODULE_1__","formatterOption","year","month","day","longFormatterOption","react_intl__WEBPACK_IMPORTED_MODULE_1__","_helpers_dates__WEBPACK_IMPORTED_MODULE_2__","ConfirmButton","renderConfirmModal","modalHeaderDescription","confirmModalProps","_ConfirmModal__WEBPACK_IMPORTED_MODULE_1__","_ModalButton__WEBPACK_IMPORTED_MODULE_2__","modal","ModalButton","handleButtonClick","handleCloseModal","tooltipShown","showTooltip","setTimeout","copyButton","clipboard","clipboard__WEBPACK_IMPORTED_MODULE_2__","on","destroy","_Tooltip__WEBPACK_IMPORTED_MODULE_3__","_helpers_l10n__WEBPACK_IMPORTED_MODULE_5__","visible","_ui_buttons__WEBPACK_IMPORTED_MODULE_4__","data-clipboard-text","innerRef","d","ChevronDownIcon","_Icon__WEBPACK_IMPORTED_MODULE_1__","fill","OpenCloseIcon","_ChevronDownIcon__WEBPACK_IMPORTED_MODULE_1__","_ChevronRightcon__WEBPACK_IMPORTED_MODULE_2__","setLogLevel","getSystemInfo","getSystemStatus","getSystemUpgrades","getMigrationStatus","migrateDatabase","restart","waitSystemUPStatus","_helpers_request__WEBPACK_IMPORTED_MODULE_0__","_app_utils_throwGlobalError__WEBPACK_IMPORTED_MODULE_1__","catch","max","slowThreshold","status","defaultPendingPlugins","defaultSystemStatus","installing","removing","fetchPendingPlugins","pendingPlugins"],"mappings":"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","file":"js/293.1562761687107.chunk.js","sourcesContent":["/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport * as classNames from 'classnames';\nimport ConfirmButton from '../controls/ConfirmButton';\nimport { translate } from '../../helpers/l10n';\nimport { restart } from '../../api/system';\nimport { Button } from '../ui/buttons';\n\ninterface Props {\n  className?: string;\n  fetchSystemStatus: () => void;\n  systemStatus: T.SysStatus;\n}\n\nexport default class RestartButton extends React.PureComponent<Props> {\n  handleConfirm = () => {\n    return restart().then(this.props.fetchSystemStatus);\n  };\n\n  render() {\n    const { className, systemStatus } = this.props;\n    return (\n      <ConfirmButton\n        confirmButtonText={translate('restart')}\n        modalBody={\n          <>\n            <p className=\"spacer-top spacer-bottom\">\n              {translate('system.are_you_sure_to_restart')}\n            </p>\n            <p>{translate('system.forcing_shutdown_not_recommended')}</p>\n          </>\n        }\n        modalHeader={translate('system.restart_server')}\n        onConfirm={this.handleConfirm}>\n        {({ onClick }) => (\n          <Button\n            className={classNames('button-red', className)}\n            disabled={systemStatus !== 'UP'}\n            onClick={onClick}>\n            {systemStatus === 'RESTARTING'\n              ? translate('system.restart_in_progress')\n              : translate('system.restart_server')}\n          </Button>\n        )}\n      </ConfirmButton>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport * as classNames from 'classnames';\nimport OpenCloseIcon from '../icons-components/OpenCloseIcon';\n\ninterface Props {\n  children: React.ReactNode;\n  className?: string;\n  data?: string;\n  onClick: (data?: string) => void;\n  open: boolean;\n  renderHeader?: () => React.ReactNode;\n  title: React.ReactNode;\n}\n\ninterface State {\n  hoveringInner: boolean;\n}\n\nexport default class BoxedGroupAccordion extends React.PureComponent<Props, State> {\n  state: State = { hoveringInner: false };\n\n  handleClick = () => {\n    this.props.onClick(this.props.data);\n  };\n\n  onDetailEnter = () => {\n    this.setState({ hoveringInner: true });\n  };\n\n  onDetailLeave = () => {\n    this.setState({ hoveringInner: false });\n  };\n\n  render() {\n    const { className, open, renderHeader, title } = this.props;\n    return (\n      <div\n        className={classNames('boxed-group boxed-group-accordion', className, {\n          'no-hover': this.state.hoveringInner\n        })}>\n        <div className=\"boxed-group-header\" onClick={this.handleClick} role=\"listitem\">\n          <span className=\"boxed-group-accordion-title\">\n            <OpenCloseIcon className=\"little-spacer-right\" open={open} />\n            {title}\n          </span>\n          {renderHeader && renderHeader()}\n        </div>\n        {open && (\n          <div\n            className=\"boxed-group-inner\"\n            onMouseEnter={this.onDetailEnter}\n            onMouseLeave={this.onDetailLeave}>\n            {this.props.children}\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n","\nvar content = require(\"!!../../../../../node_modules/css-loader/dist/cjs.js??ref--6-1!../../../../../node_modules/postcss-loader/src/index.js??postcss!./StatusIndicator.css\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../../../node_modules/css-loader/dist/cjs.js??ref--6-1!../../../../../node_modules/postcss-loader/src/index.js??postcss!./StatusIndicator.css\", function() {\n\t\tvar newContent = require(\"!!../../../../../node_modules/css-loader/dist/cjs.js??ref--6-1!../../../../../node_modules/postcss-loader/src/index.js??postcss!./StatusIndicator.css\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","exports = module.exports = require(\"../../../../../node_modules/css-loader/dist/runtime/api.js\")(false);\n// Module\nexports.push([module.id, \".status-indicator{display:inline-block;box-sizing:border-box;width:16px;height:16px;border-radius:16px;margin:4px}.status-indicator.small-status-indicator{width:8px;height:8px;border-radius:8px;margin:8px}.status-indicator.big-status-indicator{width:24px;height:24px;border-radius:24px;margin:0}.status-indicator.red{position:relative;z-index:2;background-color:#d4333f}.status-indicator.red:after{position:absolute;z-index:3;display:block;width:6px;height:2px;top:3px;left:1px;background-color:#fff;content:\\\"\\\"}.status-indicator.yellow{background-color:#eabe06}.status-indicator.green{background-color:#0a0}.status-indicator.orange{background-color:#ed7d20}.status-indicator.gray{background-color:#b4b4b4}\", \"\"]);\n\n","\nvar content = require(\"!!../../../../../node_modules/css-loader/dist/cjs.js??ref--6-1!../../../../../node_modules/postcss-loader/src/index.js??postcss!./styles.css\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../../../node_modules/css-loader/dist/cjs.js??ref--6-1!../../../../../node_modules/postcss-loader/src/index.js??postcss!./styles.css\", function() {\n\t\tvar newContent = require(\"!!../../../../../node_modules/css-loader/dist/cjs.js??ref--6-1!../../../../../node_modules/postcss-loader/src/index.js??postcss!./styles.css\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","exports = module.exports = require(\"../../../../../node_modules/css-loader/dist/runtime/api.js\")(false);\n// Module\nexports.push([module.id, \".system-info-health-title{margin-top:24px;margin-bottom:16px}.system-info-health-info{margin-top:-12px}.system-info-copy-paste-id-info{max-width:550px;padding:8px 16px;clear:both;line-height:1.8}.system-info-health-info .status-indicator{position:relative;top:8px}.system-info-health-info.no-margin .status-indicator{margin:0}.system-info-section~.system-info-section{margin-top:16px}.system-info-section-item-name{width:25vw;overflow:hidden;text-overflow:ellipsis}.system-upgrade-version{padding:8px}.system-upgrade-version~.system-upgrade-version{margin-top:10px;padding-top:18px;border-top:1px solid #e6e6e6}.system-upgrade-intermediate{padding:6px 10px}\", \"\"]);\n\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport * as classNames from 'classnames';\nimport { Alert } from '../../../../components/ui/Alert';\n\ninterface Props {\n  className?: string;\n  health: T.HealthType;\n  healthCause: string;\n}\n\nexport default function HealthCauseItem({ className, health, healthCause }: Props) {\n  return (\n    <Alert\n      className={classNames('boxed-group-accordion-alert', className)}\n      display=\"inline\"\n      variant={health === 'RED' ? 'error' : 'warning'}>\n      {healthCause}\n    </Alert>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport * as classNames from 'classnames';\nimport './StatusIndicator.css';\n\ninterface Props {\n  className?: string;\n  color?: string;\n  size?: string;\n}\n\nexport default function StatusIndicator({ className, color, size }: Props) {\n  return (\n    <i\n      className={classNames(\n        'status-indicator',\n        color,\n        {\n          'small-status-indicator': size === 'small',\n          'big-status-indicator': size === 'big'\n        },\n        className\n      )}\n    />\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport * as classNames from 'classnames';\nimport HealthCauseItem from './HealthCauseItem';\nimport StatusIndicator from '../../../../components/common/StatusIndicator';\nimport Tooltip from '../../../../components/controls/Tooltip';\nimport { translateWithParameters } from '../../../../helpers/l10n';\n\ninterface Props {\n  biggerHealth?: boolean;\n  name?: string;\n  className?: string;\n  health: T.HealthType;\n  healthCauses?: string[];\n}\n\nexport default function HealthItem({ biggerHealth, className, name, health, healthCauses }: Props) {\n  const hasHealthCauses = healthCauses && healthCauses.length > 0 && health !== 'GREEN';\n  const statusIndicator = (\n    <StatusIndicator color={health.toLowerCase()} size={biggerHealth ? 'big' : undefined} />\n  );\n  return (\n    <div className={classNames('system-info-health-info', className)}>\n      {hasHealthCauses &&\n        healthCauses!.map((cause, idx) => (\n          <HealthCauseItem className=\"spacer-right\" health={health} healthCause={cause} key={idx} />\n        ))}\n      {name ? (\n        <Tooltip overlay={translateWithParameters('system.current_health_of_x', name)}>\n          <span>{statusIndicator}</span>\n        </Tooltip>\n      ) : (\n        statusIndicator\n      )}\n    </div>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { each, groupBy, memoize, omit, omitBy, pickBy, sortBy } from 'lodash';\nimport {\n  cleanQuery,\n  parseAsArray,\n  parseAsString,\n  RawQuery,\n  serializeStringArray\n} from '../../helpers/query';\nimport { formatMeasure } from '../../helpers/measures';\n\nexport interface Query {\n  expandedCards: string[];\n}\n\nexport const LOGS_LEVELS = ['INFO', 'DEBUG', 'TRACE'];\nconst DEFAULT_LOG_LEVEL = LOGS_LEVELS[0];\n\nexport const APP_NODES_FIELD = 'Application Nodes';\nexport const CE_FIELD_PREFIX = 'Compute Engine';\nexport const CE_LOGGING_FIELD = 'Compute Engine Logging';\nexport const HA_FIELD = 'High Availability';\nexport const HEALTH_CAUSES_FIELD = 'Health Causes';\nexport const HEALTH_FIELD = 'Health';\nexport const LOGS_LEVEL_FIELD = 'Logs Level';\nexport const NAME_FIELD = 'Name';\nexport const NCLOC_FIELD = 'ncloc';\nexport const PLUGINS_FIELD = 'Plugins';\nexport const SEARCH_NODES_FIELD = 'Search Nodes';\nexport const SEARCH_PREFIX = 'Search';\nexport const SERVER_ID_FIELD = 'Server ID';\nexport const SETTINGS_FIELD = 'Settings';\nexport const STATE_FIELD = 'State';\nexport const STATS_FIELD = 'Statistics';\nexport const SYSTEM_FIELD = 'System';\nexport const VERSION_FIELD = 'Version';\nexport const WEB_LOGGING_FIELD = 'Web Logging';\nexport const WEB_PREFIX = 'Web';\n\nexport function ignoreInfoFields(sysInfoObject: T.SysInfoValueObject) {\n  return omit(sysInfoObject, [\n    HEALTH_FIELD,\n    HEALTH_CAUSES_FIELD,\n    NAME_FIELD,\n    PLUGINS_FIELD,\n    SETTINGS_FIELD,\n    SERVER_ID_FIELD,\n    VERSION_FIELD\n  ]);\n}\n\nexport function getHealth(sysInfoObject: T.SysInfoBase) {\n  return sysInfoObject[HEALTH_FIELD];\n}\n\nexport function getHealthCauses(sysInfoObject: T.SysInfoBase) {\n  return sysInfoObject[HEALTH_CAUSES_FIELD];\n}\n\nexport function getLogsLevel(sysInfoObject?: T.SysInfoValueObject): string {\n  if (sysInfoObject !== undefined) {\n    if (isLogInfoBlock(sysInfoObject)) {\n      return sysInfoObject[LOGS_LEVEL_FIELD];\n    } else if (hasLoggingInfo(sysInfoObject)) {\n      return sortBy(\n        [\n          getLogsLevel(sysInfoObject[WEB_LOGGING_FIELD]),\n          getLogsLevel(sysInfoObject[CE_LOGGING_FIELD])\n        ],\n        logLevel => LOGS_LEVELS.indexOf(logLevel)\n      )[1];\n    }\n  }\n  return DEFAULT_LOG_LEVEL;\n}\n\nexport function getAppNodes(sysInfoData: T.SysInfoCluster): T.SysInfoAppNode[] {\n  return sysInfoData[APP_NODES_FIELD];\n}\n\nexport function getSearchNodes(sysInfoData: T.SysInfoCluster): T.SysInfoSearchNode[] {\n  return sysInfoData[SEARCH_NODES_FIELD];\n}\n\nexport function isCluster(\n  sysInfoData: T.SysInfoCluster | T.SysInfoStandalone\n): sysInfoData is T.SysInfoCluster {\n  return sysInfoData[SYSTEM_FIELD] && sysInfoData[SYSTEM_FIELD][HA_FIELD] === true;\n}\n\nexport function isLogInfoBlock(\n  sysInfoObject: T.SysInfoValueObject\n): sysInfoObject is T.SysInfoLogging {\n  return sysInfoObject[LOGS_LEVEL_FIELD] !== undefined;\n}\n\nexport function hasLoggingInfo(\n  sysInfoObject: T.SysInfoValueObject\n): sysInfoObject is T.SysInfoStandalone | T.SysInfoAppNode {\n  return Boolean(sysInfoObject[WEB_LOGGING_FIELD] || sysInfoObject[CE_LOGGING_FIELD]);\n}\n\nexport function getServerId(sysInfoData: T.SysInfoCluster | T.SysInfoStandalone): string {\n  return sysInfoData && sysInfoData[SYSTEM_FIELD][SERVER_ID_FIELD];\n}\n\nexport function getVersion(sysInfoData: T.SysInfoStandalone): string | undefined {\n  return sysInfoData && sysInfoData[SYSTEM_FIELD][VERSION_FIELD];\n}\n\nexport function getClusterVersion(sysInfoData: T.SysInfoCluster): string | undefined {\n  const appNodes = getAppNodes(sysInfoData);\n  return appNodes.length > 0 ? appNodes[0][SYSTEM_FIELD][VERSION_FIELD] : undefined;\n}\n\nexport function getSystemLogsLevel(sysInfoData: T.SysInfoCluster | T.SysInfoStandalone): string {\n  if (isCluster(sysInfoData)) {\n    const logLevels = sortBy(getAppNodes(sysInfoData).map(getLogsLevel), logLevel =>\n      LOGS_LEVELS.indexOf(logLevel)\n    );\n    return logLevels.length > 0 ? logLevels[logLevels.length - 1] : DEFAULT_LOG_LEVEL;\n  } else {\n    return getLogsLevel(sysInfoData);\n  }\n}\n\nexport function getNodeName(nodeInfo: T.SysInfoAppNode | T.SysInfoSearchNode): string {\n  return nodeInfo[NAME_FIELD];\n}\n\nfunction getSystemData(sysInfoData: T.SysInfoBase): T.SysInfoValueObject {\n  const statData: T.SysInfoValueObject = {};\n  const statistics = sysInfoData[STATS_FIELD] as T.SysInfoValueObject; // TODO\n  if (statistics) {\n    statData['Lines of Code'] = formatMeasure(statistics[NCLOC_FIELD] as number, 'INT');\n  }\n  return { ...sysInfoData[SYSTEM_FIELD], ...statData };\n}\n\nexport function getClusterMainCardSection(sysInfoData: T.SysInfoCluster): T.SysInfoValueObject {\n  return {\n    ...getSystemData(sysInfoData),\n    ...omit(sysInfoData, [\n      APP_NODES_FIELD,\n      PLUGINS_FIELD,\n      SEARCH_NODES_FIELD,\n      SETTINGS_FIELD,\n      STATS_FIELD,\n      SYSTEM_FIELD\n    ])\n  };\n}\n\nexport function getStandaloneMainSections(sysInfoData: T.SysInfoBase): T.SysInfoValueObject {\n  return {\n    ...getSystemData(sysInfoData),\n    ...(omitBy(\n      sysInfoData,\n      (value, key) =>\n        value == null ||\n        [PLUGINS_FIELD, SETTINGS_FIELD, STATS_FIELD, SYSTEM_FIELD].includes(key) ||\n        key.startsWith(CE_FIELD_PREFIX) ||\n        key.startsWith(SEARCH_PREFIX) ||\n        key.startsWith(WEB_PREFIX)\n    ) as T.SysInfoValueObject)\n  };\n}\n\nexport function getStandaloneSecondarySections(sysInfoData: T.SysInfoBase): T.SysInfoSection {\n  return {\n    Web: pickBy(sysInfoData, (_, key) => key.startsWith(WEB_PREFIX)) as T.SysInfoValueObject,\n    'Compute Engine': pickBy(sysInfoData, (_, key) =>\n      key.startsWith(CE_FIELD_PREFIX)\n    ) as T.SysInfoValueObject,\n    'Search Engine': pickBy(sysInfoData, (_, key) =>\n      key.startsWith(SEARCH_PREFIX)\n    ) as T.SysInfoValueObject\n  };\n}\n\nexport function getFileNameSuffix(suffix?: string) {\n  const now = new Date();\n  return (\n    `${suffix ? suffix + '-' : ''}` +\n    `${now.getFullYear()}-${now.getMonth() + 1}-` +\n    `${now.getDate()}-${now.getHours()}-${now.getMinutes()}`\n  );\n}\n\nexport function groupSections(sysInfoData: T.SysInfoValueObject) {\n  const mainSection: T.SysInfoValueObject = {};\n  const sections: T.SysInfoSection = {};\n  each(sysInfoData, (item, key) => {\n    if (typeof item !== 'object' || item instanceof Array) {\n      mainSection[key] = item;\n    } else {\n      sections[key] = item;\n    }\n  });\n  return { mainSection, sections };\n}\n\nexport const parseQuery = memoize(\n  (urlQuery: RawQuery): Query => ({\n    expandedCards: parseAsArray(urlQuery.expand, parseAsString)\n  })\n);\n\nexport const serializeQuery = memoize(\n  (query: Query): RawQuery =>\n    cleanQuery({\n      expand: serializeStringArray(query.expandedCards)\n    })\n);\n\nexport function sortUpgrades(upgrades: T.SystemUpgrade[]): T.SystemUpgrade[] {\n  return sortBy(upgrades, [\n    (upgrade: T.SystemUpgrade) => -Number(upgrade.version.split('.')[0]),\n    (upgrade: T.SystemUpgrade) => -Number(upgrade.version.split('.')[1] || 0),\n    (upgrade: T.SystemUpgrade) => -Number(upgrade.version.split('.')[2] || 0)\n  ]);\n}\n\nexport function groupUpgrades(upgrades: T.SystemUpgrade[]): T.SystemUpgrade[][] {\n  const groupedVersions = groupBy(upgrades, upgrade => upgrade.version.split('.')[0]);\n  const sortedMajor = sortBy(Object.keys(groupedVersions), key => -Number(key));\n  return sortedMajor.map(key => groupedVersions[key]);\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { map } from 'lodash';\nimport HealthItem from './HealthItem';\nimport AlertErrorIcon from '../../../../components/icons-components/AlertErrorIcon';\nimport AlertSuccessIcon from '../../../../components/icons-components/AlertSuccessIcon';\nimport { HEALTH_FIELD, STATE_FIELD } from '../../utils';\n\nexport interface Props {\n  name: string;\n  value: T.SysInfoValue;\n}\n\nexport default function SysInfoItem({ name, value }: Props): JSX.Element {\n  if (name === HEALTH_FIELD || name === STATE_FIELD) {\n    return <HealthItem className=\"no-margin\" health={value as T.HealthType} />;\n  }\n  if (value instanceof Array) {\n    return <code>{JSON.stringify(value)}</code>;\n  }\n  switch (typeof value) {\n    case 'boolean':\n      return <BooleanItem value={value} />;\n    case 'object':\n      return <ObjectItem value={value} />;\n    default:\n      return <code>{value}</code>;\n  }\n}\n\nfunction BooleanItem({ value }: { value: boolean }) {\n  if (value) {\n    return <AlertSuccessIcon />;\n  } else {\n    return <AlertErrorIcon />;\n  }\n}\n\nfunction ObjectItem({ value }: { value: T.SysInfoValueObject }) {\n  return (\n    <table className=\"data\">\n      <tbody>\n        {map(value, (value, name) => (\n          <tr key={name}>\n            <td className=\"thin nowrap\">{name}</td>\n            <td>\n              <SysInfoItem name={name} value={value} />\n            </td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { map } from 'lodash';\nimport SysInfoItem from './SysInfoItem';\n\ninterface Props {\n  name?: string;\n  items: T.SysInfoValueObject;\n}\n\nexport default function Section({ name, items }: Props) {\n  return (\n    <div className=\"system-info-section\">\n      {name && <h4 className=\"spacer-bottom\">{name}</h4>}\n      <table className=\"data zebra\" id={name}>\n        <tbody>\n          {map(items, (value, name) => {\n            return (\n              <tr key={name}>\n                <td className=\"thin\">\n                  <div className=\"system-info-section-item-name\">{name}</div>\n                </td>\n                <td style={{ wordBreak: 'break-all' }}>\n                  <SysInfoItem name={name} value={value} />\n                </td>\n              </tr>\n            );\n          })}\n        </tbody>\n      </table>\n    </div>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { map } from 'lodash';\nimport HealthItem from './HealthItem';\nimport Section from './Section';\nimport { Alert } from '../../../../components/ui/Alert';\nimport BoxedGroupAccordion from '../../../../components/controls/BoxedGroupAccordion';\nimport { LOGS_LEVELS, groupSections, getLogsLevel } from '../../utils';\nimport { translate } from '../../../../helpers/l10n';\n\ninterface Props {\n  biggerHealth?: boolean;\n  health?: T.HealthType;\n  healthCauses?: string[];\n  onClick: (toggledCard: string) => void;\n  open: boolean;\n  name: string;\n  sysInfoData: T.SysInfoValueObject;\n}\n\nexport default function HealthCard({\n  biggerHealth,\n  health,\n  healthCauses,\n  onClick,\n  open,\n  name,\n  sysInfoData\n}: Props) {\n  const { mainSection, sections } = groupSections(sysInfoData);\n  const showFields = open && mainSection && Object.keys(mainSection).length > 0;\n  const showSections = open && sections;\n  const logLevel = getLogsLevel(sysInfoData);\n  const showLogLevelWarning = logLevel && logLevel !== LOGS_LEVELS[0];\n  return (\n    <BoxedGroupAccordion\n      data={name}\n      onClick={onClick}\n      open={open}\n      renderHeader={() => (\n        <>\n          {showLogLevelWarning && (\n            <Alert\n              className=\"boxed-group-accordion-alert spacer-left\"\n              display=\"inline\"\n              variant=\"warning\">\n              {translate('system.log_level.warning.short')}\n            </Alert>\n          )}\n          {health && (\n            <HealthItem\n              biggerHealth={biggerHealth}\n              className=\"pull-right\"\n              health={health}\n              healthCauses={healthCauses}\n              name={name}\n            />\n          )}\n        </>\n      )}\n      title={name}>\n      {showFields && <Section items={mainSection} />}\n      {showSections &&\n        map(sections, (section, name) => <Section items={section} key={name} name={name} />)}\n    </BoxedGroupAccordion>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { sortBy } from 'lodash';\nimport HealthCard from './info-items/HealthCard';\nimport { translate } from '../../../helpers/l10n';\nimport {\n  getAppNodes,\n  getHealth,\n  getHealthCauses,\n  getClusterMainCardSection,\n  getNodeName,\n  getSearchNodes,\n  ignoreInfoFields\n} from '../utils';\n\ninterface Props {\n  expandedCards: string[];\n  sysInfoData: T.SysInfoCluster;\n  toggleCard: (toggledCard: string) => void;\n}\n\nexport default function ClusterSysInfos({ expandedCards, sysInfoData, toggleCard }: Props) {\n  const mainCardName = 'System';\n  return (\n    <>\n      <HealthCard\n        biggerHealth={true}\n        health={getHealth(sysInfoData)}\n        healthCauses={getHealthCauses(sysInfoData)}\n        name={mainCardName}\n        onClick={toggleCard}\n        open={expandedCards.includes(mainCardName)}\n        sysInfoData={ignoreInfoFields(getClusterMainCardSection(sysInfoData))}\n      />\n      <li className=\"note system-info-health-title\">\n        {translate('system.application_nodes_title')}\n      </li>\n      {sortBy(getAppNodes(sysInfoData), getNodeName).map((node: T.SysInfoAppNode) => (\n        <HealthCard\n          health={getHealth(node)}\n          healthCauses={getHealthCauses(node)}\n          key={getNodeName(node)}\n          name={getNodeName(node)}\n          onClick={toggleCard}\n          open={expandedCards.includes(getNodeName(node))}\n          sysInfoData={ignoreInfoFields(node)}\n        />\n      ))}\n      <li className=\"note system-info-health-title\">{translate('system.search_nodes_title')}</li>\n      {sortBy(getSearchNodes(sysInfoData), getNodeName).map((node: T.SysInfoSearchNode) => (\n        <HealthCard\n          key={getNodeName(node)}\n          name={getNodeName(node)}\n          onClick={toggleCard}\n          open={expandedCards.includes(getNodeName(node))}\n          sysInfoData={ignoreInfoFields(node)}\n        />\n      ))}\n    </>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { LOGS_LEVELS } from '../utils';\nimport { setLogLevel } from '../../../api/system';\nimport Modal from '../../../components/controls/Modal';\nimport { SubmitButton, ResetButtonLink } from '../../../components/ui/buttons';\nimport { translate } from '../../../helpers/l10n';\nimport { Alert } from '../../../components/ui/Alert';\n\ninterface Props {\n  infoMsg: string;\n  logLevel: string;\n  onChange: (level: string) => void;\n  onClose: () => void;\n}\n\ninterface State {\n  newLevel: string;\n  updating: boolean;\n}\n\nexport default class ChangeLogLevelForm extends React.PureComponent<Props, State> {\n  constructor(props: Props) {\n    super(props);\n    this.state = { newLevel: props.logLevel, updating: false };\n  }\n\n  handleFormSubmit = (event: React.SyntheticEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    const { newLevel } = this.state;\n    if (!this.state.updating) {\n      this.setState({ updating: true });\n      setLogLevel(newLevel).then(\n        () => this.props.onChange(newLevel),\n        () => this.setState({ updating: false })\n      );\n    }\n  };\n\n  handleLevelChange = (event: React.ChangeEvent<HTMLInputElement>) =>\n    this.setState({ newLevel: event.currentTarget.value });\n\n  render() {\n    const { updating, newLevel } = this.state;\n    const header = translate('system.set_log_level');\n    return (\n      <Modal contentLabel={header} onRequestClose={this.props.onClose}>\n        <form id=\"set-log-level-form\" onSubmit={this.handleFormSubmit}>\n          <div className=\"modal-head\">\n            <h2>{header}</h2>\n          </div>\n          <div className=\"modal-body\">\n            {LOGS_LEVELS.map(level => (\n              <p className=\"spacer-bottom\" key={level}>\n                <input\n                  checked={level === newLevel}\n                  className=\"spacer-right text-middle\"\n                  id={`loglevel-${level}`}\n                  name=\"system.log_levels\"\n                  onChange={this.handleLevelChange}\n                  type=\"radio\"\n                  value={level}\n                />\n                <label className=\"text-middle\" htmlFor={`loglevel-${level}`}>\n                  {level}\n                </label>\n              </p>\n            ))}\n            <Alert className=\"spacer-top\" variant=\"info\">\n              {this.props.infoMsg}\n            </Alert>\n            {newLevel !== 'INFO' && (\n              <Alert className=\"spacer-top\" variant=\"warning\">\n                {translate('system.log_level.warning')}\n              </Alert>\n            )}\n          </div>\n          <div className=\"modal-foot\">\n            {updating && <i className=\"spinner spacer-right\" />}\n            <SubmitButton disabled={updating} id=\"set-log-level-submit\">\n              {translate('save')}\n            </SubmitButton>\n            <ResetButtonLink id=\"set-log-level-cancel\" onClick={this.props.onClose}>\n              {translate('cancel')}\n            </ResetButtonLink>\n          </div>\n        </form>\n      </Modal>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport ChangeLogLevelForm from './ChangeLogLevelForm';\nimport AdminContext from '../../../app/components/AdminContext';\nimport Dropdown from '../../../components/controls/Dropdown';\nimport DropdownIcon from '../../../components/icons-components/DropdownIcon';\nimport RestartButton from '../../../components/common/RestartButton';\nimport { EditButton, Button } from '../../../components/ui/buttons';\nimport { getFileNameSuffix } from '../utils';\nimport { getBaseUrl } from '../../../helpers/urls';\nimport { translate } from '../../../helpers/l10n';\n\ninterface Props {\n  canDownloadLogs: boolean;\n  canRestart: boolean;\n  cluster: boolean;\n  logLevel: string;\n  onLogLevelChange: () => void;\n  serverId?: string;\n}\n\ninterface State {\n  logLevel: string;\n  openLogsLevelForm: boolean;\n}\n\nexport default class PageActions extends React.PureComponent<Props, State> {\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      logLevel: props.logLevel,\n      openLogsLevelForm: false\n    };\n  }\n\n  componentWillReceiveProps(nextProps: Props) {\n    if (nextProps.logLevel !== this.state.logLevel) {\n      this.setState({ logLevel: nextProps.logLevel });\n    }\n  }\n\n  handleLogsLevelOpen = () => {\n    this.setState({ openLogsLevelForm: true });\n  };\n\n  handleLogsLevelChange = (logLevel: string) => {\n    this.setState({ logLevel });\n    this.props.onLogLevelChange();\n    this.handleLogsLevelClose();\n  };\n\n  handleLogsLevelClose = () => {\n    this.setState({ openLogsLevelForm: false });\n  };\n\n  removeElementFocus = (event: React.SyntheticEvent<HTMLElement>) => {\n    event.currentTarget.blur();\n  };\n\n  render() {\n    const infoUrl = getBaseUrl() + '/api/system/info';\n    const logsUrl = getBaseUrl() + '/api/system/logs';\n    return (\n      <div className=\"page-actions\">\n        <span>\n          <span className=\"text-middle\">\n            {translate('system.logs_level')}\n            {':'}\n            <strong className=\"little-spacer-left\">{this.state.logLevel}</strong>\n          </span>\n          <EditButton\n            className=\"spacer-left button-small\"\n            id=\"edit-logs-level-button\"\n            onClick={this.handleLogsLevelOpen}\n          />\n        </span>\n        {this.props.canDownloadLogs && (\n          <Dropdown\n            className=\"display-inline-block spacer-left\"\n            overlay={\n              <ul className=\"menu\">\n                <li>\n                  <a\n                    download=\"sonarqube_app.log\"\n                    href={logsUrl + '?process=app'}\n                    id=\"logs-link\"\n                    rel=\"noopener noreferrer\"\n                    target=\"_blank\">\n                    Main Process\n                  </a>\n                </li>\n                <li>\n                  <a\n                    download=\"sonarqube_ce.log\"\n                    href={logsUrl + '?process=ce'}\n                    id=\"ce-logs-link\"\n                    rel=\"noopener noreferrer\"\n                    target=\"_blank\">\n                    Compute Engine\n                  </a>\n                </li>\n                <li>\n                  <a\n                    download=\"sonarqube_es.log\"\n                    href={logsUrl + '?process=es'}\n                    id=\"es-logs-link\"\n                    rel=\"noopener noreferrer\"\n                    target=\"_blank\">\n                    Search Engine\n                  </a>\n                </li>\n                <li>\n                  <a\n                    download=\"sonarqube_web.log\"\n                    href={logsUrl + '?process=web'}\n                    id=\"web-logs-link\"\n                    rel=\"noopener noreferrer\"\n                    target=\"_blank\">\n                    Web Server\n                  </a>\n                </li>\n              </ul>\n            }>\n            <Button>\n              {translate('system.download_logs')}\n              <DropdownIcon className=\"little-spacer-left\" />\n            </Button>\n          </Dropdown>\n        )}\n        <a\n          className=\"button spacer-left\"\n          download={`sonarqube-support-info-${getFileNameSuffix(this.props.serverId)}.json`}\n          href={infoUrl}\n          id=\"download-link\"\n          onClick={this.removeElementFocus}\n          rel=\"noopener noreferrer\"\n          target=\"_blank\">\n          {translate('system.download_system_info')}\n        </a>\n        {this.props.canRestart && (\n          <AdminContext.Consumer>\n            {({ fetchSystemStatus, systemStatus }) => (\n              <RestartButton\n                className=\"spacer-left\"\n                fetchSystemStatus={fetchSystemStatus}\n                systemStatus={systemStatus}\n              />\n            )}\n          </AdminContext.Consumer>\n        )}\n        {this.state.openLogsLevelForm && (\n          <ChangeLogLevelForm\n            infoMsg={translate(\n              this.props.cluster ? 'system.cluster_log_level.info' : 'system.log_level.info'\n            )}\n            logLevel={this.state.logLevel}\n            onChange={this.handleLogsLevelChange}\n            onClose={this.handleLogsLevelClose}\n          />\n        )}\n      </div>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport PageActions from './PageActions';\nimport ClipboardButton from '../../../components/controls/ClipboardButton';\nimport { translate } from '../../../helpers/l10n';\nimport { toShortNotSoISOString } from '../../../helpers/dates';\n\nexport interface Props {\n  isCluster: boolean;\n  loading: boolean;\n  logLevel: string;\n  onLogLevelChange: () => void;\n  serverId?: string;\n  showActions: boolean;\n  version?: string;\n}\n\nexport default function PageHeader(props: Props) {\n  const { isCluster, loading, logLevel, serverId, showActions, version } = props;\n  return (\n    <header className=\"page-header\">\n      <h1 className=\"page-title\">{translate('system_info.page')}</h1>\n      {showActions && (\n        <PageActions\n          canDownloadLogs={!isCluster}\n          canRestart={!isCluster}\n          cluster={isCluster}\n          logLevel={logLevel}\n          onLogLevelChange={props.onLogLevelChange}\n          serverId={serverId}\n        />\n      )}\n      {loading && (\n        <div className=\"page-actions\">\n          <i className=\"spinner\" />\n        </div>\n      )}\n      {serverId && version && (\n        <div className=\"system-info-copy-paste-id-info boxed-group display-flex-center\">\n          <div className=\"flex-1\">\n            <table className=\"width-100\">\n              <tbody>\n                <tr>\n                  <th>\n                    <strong>{translate('system.server_id')}</strong>\n                  </th>\n                  <td>{serverId}</td>\n                </tr>\n                <tr>\n                  <th>\n                    <strong>{translate('system.version')}</strong>\n                  </th>\n                  <td>{version}</td>\n                </tr>\n              </tbody>\n            </table>\n          </div>\n          <ClipboardButton\n            className=\"flex-0\"\n            copyValue={`SonarQube ID information\nServer ID: ${serverId}\nVersion: ${version}\nDate: ${toShortNotSoISOString(Date.now())}\n`}\n            label={translate('system.copy_id_info')}\n          />\n        </div>\n      )}\n    </header>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { map } from 'lodash';\nimport HealthCard from './info-items/HealthCard';\nimport {\n  getHealth,\n  getHealthCauses,\n  getStandaloneMainSections,\n  getStandaloneSecondarySections,\n  ignoreInfoFields\n} from '../utils';\n\ninterface Props {\n  expandedCards: string[];\n  sysInfoData: T.SysInfoStandalone;\n  toggleCard: (toggledCard: string) => void;\n}\n\nexport default function StandAloneSysInfos({ expandedCards, sysInfoData, toggleCard }: Props) {\n  const mainCardName = 'System';\n  return (\n    <>\n      <HealthCard\n        biggerHealth={true}\n        health={getHealth(sysInfoData)}\n        healthCauses={getHealthCauses(sysInfoData)}\n        name={mainCardName}\n        onClick={toggleCard}\n        open={expandedCards.includes(mainCardName)}\n        sysInfoData={ignoreInfoFields(getStandaloneMainSections(sysInfoData))}\n      />\n      {map(getStandaloneSecondarySections(sysInfoData), (section, name) => (\n        <HealthCard\n          key={name}\n          name={name}\n          onClick={toggleCard}\n          open={expandedCards.includes(name)}\n          sysInfoData={ignoreInfoFields(section)}\n        />\n      ))}\n    </>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport DateFormatter from '../../../../components/intl/DateFormatter';\nimport DropdownIcon from '../../../../components/icons-components/DropdownIcon';\nimport { ButtonLink } from '../../../../components/ui/buttons';\nimport { translate } from '../../../../helpers/l10n';\n\ninterface Props {\n  className?: string;\n  upgrades: T.SystemUpgrade[];\n}\n\ninterface State {\n  showMore: boolean;\n}\n\nexport default class SystemUpgradeIntermediate extends React.PureComponent<Props, State> {\n  state: State = { showMore: false };\n\n  toggleIntermediatVersions = () => {\n    this.setState(state => ({ showMore: !state.showMore }));\n  };\n\n  render() {\n    const { showMore } = this.state;\n    const { upgrades } = this.props;\n    if (upgrades.length <= 0) {\n      return null;\n    }\n\n    return (\n      <div className={this.props.className}>\n        <ButtonLink className=\"little-spacer-bottom\" onClick={this.toggleIntermediatVersions}>\n          {showMore\n            ? translate('system.hide_intermediate_versions')\n            : translate('system.show_intermediate_versions')}\n          <DropdownIcon className=\"little-spacer-left\" turned={showMore} />\n        </ButtonLink>\n        {showMore &&\n          upgrades.map(upgrade => (\n            <div className=\"note system-upgrade-intermediate\" key={upgrade.version}>\n              <DateFormatter date={upgrade.releaseDate} long={true}>\n                {formattedDate => (\n                  <p>\n                    <b className=\"little-spacer-right\">SonarQube {upgrade.version}</b>\n                    {formattedDate}\n                    {upgrade.changeLogUrl && (\n                      <a\n                        className=\"spacer-left\"\n                        href={upgrade.changeLogUrl}\n                        rel=\"noopener noreferrer\"\n                        target=\"_blank\">\n                        {translate('system.release_notes')}\n                      </a>\n                    )}\n                  </p>\n                )}\n              </DateFormatter>\n              <p className=\"little-spacer-top\">{upgrade.description}</p>\n            </div>\n          ))}\n      </div>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport SystemUpgradeIntermediate from './SystemUpgradeIntermediate';\nimport DateFormatter from '../../../../components/intl/DateFormatter';\nimport { translate, translateWithParameters } from '../../../../helpers/l10n';\n\ninterface Props {\n  type?: string;\n  systemUpgrades: T.SystemUpgrade[];\n}\n\nexport default function SystemUpgradeItem({ type, systemUpgrades }: Props) {\n  const lastUpgrade = systemUpgrades[0];\n  return (\n    <div className=\"system-upgrade-version\">\n      {type && (\n        <h1 className=\"spacer-bottom\">\n          <strong>{type}</strong>\n        </h1>\n      )}\n      <p>\n        <FormattedMessage\n          defaultMessage={translate('system.version_is_availble')}\n          id=\"system.version_is_availble\"\n          values={{ version: <b>SonarQube {lastUpgrade.version}</b> }}\n        />\n      </p>\n      <p className=\"spacer-top\">{lastUpgrade.description}</p>\n      <div className=\"big-spacer-top\">\n        <DateFormatter date={lastUpgrade.releaseDate} long={true}>\n          {formattedDate => (\n            <span>{translateWithParameters('system.released_x', formattedDate)}</span>\n          )}\n        </DateFormatter>\n        {lastUpgrade.changeLogUrl && (\n          <a\n            className=\"spacer-left\"\n            href={lastUpgrade.changeLogUrl}\n            rel=\"noopener noreferrer\"\n            target=\"_blank\">\n            {translate('system.release_notes')}\n          </a>\n        )}\n      </div>\n      <SystemUpgradeIntermediate className=\"spacer-top\" upgrades={systemUpgrades.slice(1)} />\n      <div className=\"big-spacer-top\">\n        <a\n          className=\"button\"\n          download={`sonarqube-${lastUpgrade.version}.zip`}\n          href={lastUpgrade.downloadUrl}\n          target=\"blank\">\n          {translateWithParameters('system.download_x', lastUpgrade.version)}\n        </a>\n        <a\n          className=\"spacer-left\"\n          href=\"https://redirect.sonarsource.com/doc/upgrading.html\"\n          target=\"_blank\">\n          {translate('system.how_to_upgrade')}\n        </a>\n      </div>\n    </div>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport SystemUpgradeItem from './SystemUpgradeItem';\nimport Modal from '../../../../components/controls/Modal';\nimport { translate } from '../../../../helpers/l10n';\nimport { ResetButtonLink } from '../../../../components/ui/buttons';\n\ninterface Props {\n  systemUpgrades: T.SystemUpgrade[][];\n  onClose: () => void;\n}\n\ninterface State {\n  upgrading: boolean;\n}\n\nexport default class SystemUpgradeForm extends React.PureComponent<Props, State> {\n  state: State = { upgrading: false };\n\n  render() {\n    const { upgrading } = this.state;\n    const { systemUpgrades } = this.props;\n    const header = translate('system.system_upgrade');\n    return (\n      <Modal contentLabel={header} onRequestClose={this.props.onClose}>\n        <div className=\"modal-head\">\n          <h2>{header}</h2>\n        </div>\n        <div className=\"modal-body\">\n          {systemUpgrades.map((upgrades, idx) => (\n            <SystemUpgradeItem\n              key={upgrades[upgrades.length - 1].version}\n              systemUpgrades={upgrades}\n              type={\n                idx === 0 ? translate('system.latest_version') : translate('system.lts_version')\n              }\n            />\n          ))}\n        </div>\n        <div className=\"modal-foot\">\n          {upgrading && <i className=\"spinner spacer-right\" />}\n          <a\n            className=\"pull-left\"\n            href=\"https://www.sonarqube.org/downloads/\"\n            rel=\"noopener noreferrer\"\n            target=\"_blank\">\n            {translate('system.see_sonarqube_downloads')}\n          </a>\n          <ResetButtonLink onClick={this.props.onClose}>{translate('cancel')}</ResetButtonLink>\n        </div>\n      </Modal>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport SystemUpgradeForm from './SystemUpgradeForm';\nimport { sortUpgrades, groupUpgrades } from '../../utils';\nimport { getSystemUpgrades } from '../../../../api/system';\nimport { Button } from '../../../../components/ui/buttons';\nimport { translate } from '../../../../helpers/l10n';\nimport { Alert } from '../../../../components/ui/Alert';\n\ninterface State {\n  systemUpgrades: T.SystemUpgrade[][];\n  openSystemUpgradeForm: boolean;\n}\n\nexport default class SystemUpgradeNotif extends React.PureComponent<{}, State> {\n  mounted = false;\n  state: State = { openSystemUpgradeForm: false, systemUpgrades: [] };\n\n  componentDidMount() {\n    this.mounted = true;\n    this.fetchSystemUpgrade();\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  fetchSystemUpgrade = () =>\n    getSystemUpgrades().then(\n      ({ upgrades }) => {\n        if (this.mounted) {\n          this.setState({ systemUpgrades: groupUpgrades(sortUpgrades(upgrades)) });\n        }\n      },\n      () => {}\n    );\n\n  handleOpenSystemUpgradeForm = () => {\n    this.setState({ openSystemUpgradeForm: true });\n  };\n\n  handleCloseSystemUpgradeForm = () => {\n    this.setState({ openSystemUpgradeForm: false });\n  };\n\n  render() {\n    const { systemUpgrades } = this.state;\n\n    if (systemUpgrades.length <= 0) {\n      return null;\n    }\n\n    return (\n      <div className=\"page-notifs\">\n        <Alert variant=\"info\">\n          {translate('system.new_version_available')}\n          <Button className=\"spacer-left\" onClick={this.handleOpenSystemUpgradeForm}>\n            {translate('learn_more')}\n          </Button>\n        </Alert>\n        {this.state.openSystemUpgradeForm && (\n          <SystemUpgradeForm\n            onClose={this.handleCloseSystemUpgradeForm}\n            systemUpgrades={systemUpgrades}\n          />\n        )}\n      </div>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { withRouter, WithRouterProps } from 'react-router';\nimport Helmet from 'react-helmet';\nimport ClusterSysInfos from './ClusterSysInfos';\nimport PageHeader from './PageHeader';\nimport StandaloneSysInfos from './StandaloneSysInfos';\nimport SystemUpgradeNotif from './system-upgrade/SystemUpgradeNotif';\nimport Suggestions from '../../../app/components/embed-docs-modal/Suggestions';\nimport { translate } from '../../../helpers/l10n';\nimport { getSystemInfo } from '../../../api/system';\nimport {\n  getServerId,\n  getSystemLogsLevel,\n  isCluster,\n  parseQuery,\n  Query,\n  serializeQuery,\n  getVersion,\n  getClusterVersion\n} from '../utils';\nimport '../styles.css';\n\ntype Props = WithRouterProps;\n\ninterface State {\n  loading: boolean;\n  sysInfoData?: T.SysInfoCluster | T.SysInfoStandalone;\n}\n\nclass App extends React.PureComponent<Props, State> {\n  mounted = false;\n  state: State = { loading: true };\n\n  componentDidMount() {\n    this.mounted = true;\n    this.fetchSysInfo();\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  fetchSysInfo = () => {\n    this.setState({ loading: true });\n    getSystemInfo().then(\n      sysInfoData => {\n        if (this.mounted) {\n          this.setState({ loading: false, sysInfoData });\n        }\n      },\n      () => {\n        if (this.mounted) {\n          this.setState({ loading: false });\n        }\n      }\n    );\n  };\n\n  toggleSysInfoCards = (toggledCard: string) => {\n    const query = parseQuery(this.props.location.query);\n    let expandedCards;\n    if (query.expandedCards.includes(toggledCard)) {\n      expandedCards = query.expandedCards.filter(card => card !== toggledCard);\n    } else {\n      expandedCards = query.expandedCards.concat(toggledCard);\n    }\n    this.updateQuery({ expandedCards });\n  };\n\n  updateQuery = (newQuery: Query) => {\n    const query = serializeQuery({ ...parseQuery(this.props.location.query), ...newQuery });\n    this.props.router.replace({ pathname: this.props.location.pathname, query });\n  };\n\n  renderSysInfo() {\n    const { sysInfoData } = this.state;\n    if (!sysInfoData) {\n      return null;\n    }\n\n    const query = parseQuery(this.props.location.query);\n    if (isCluster(sysInfoData)) {\n      return (\n        <ClusterSysInfos\n          expandedCards={query.expandedCards}\n          sysInfoData={sysInfoData}\n          toggleCard={this.toggleSysInfoCards}\n        />\n      );\n    }\n    return (\n      <StandaloneSysInfos\n        expandedCards={query.expandedCards}\n        sysInfoData={sysInfoData}\n        toggleCard={this.toggleSysInfoCards}\n      />\n    );\n  }\n\n  render() {\n    const { loading, sysInfoData } = this.state;\n    return (\n      <div className=\"page page-limited\">\n        <Suggestions suggestions=\"system_info\" />\n        <Helmet title={translate('system_info.page')} />\n        <SystemUpgradeNotif />\n        {sysInfoData && (\n          <PageHeader\n            isCluster={isCluster(sysInfoData)}\n            loading={loading}\n            logLevel={getSystemLogsLevel(sysInfoData)}\n            onLogLevelChange={this.fetchSysInfo}\n            serverId={getServerId(sysInfoData)}\n            showActions={sysInfoData !== undefined}\n            version={\n              isCluster(sysInfoData) ? getClusterVersion(sysInfoData) : getVersion(sysInfoData)\n            }\n          />\n        )}\n        {this.renderSysInfo()}\n      </div>\n    );\n  }\n}\n\nexport default withRouter(App);\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport * as ReactModal from 'react-modal';\nimport * as classNames from 'classnames';\n\nReactModal.setAppElement('#content');\n\nexport interface ModalProps {\n  children: React.ReactNode;\n  size?: 'small' | 'medium' | 'large';\n  noBackdrop?: boolean;\n}\n\ntype MandatoryProps = Pick<ReactModal.Props, 'contentLabel'>;\n\ntype Props = Partial<ReactModal.Props> & MandatoryProps & ModalProps;\n\nexport default function Modal(props: Props) {\n  return (\n    <ReactModal\n      className={classNames('modal', {\n        'modal-small': props.size === 'small',\n        'modal-medium': props.size === 'medium',\n        'modal-large': props.size === 'large'\n      })}\n      isOpen={true}\n      overlayClassName={classNames('modal-overlay', { 'modal-no-backdrop': props.noBackdrop })}\n      {...props}\n    />\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { SuggestionsContext } from './SuggestionsContext';\n\ninterface Props {\n  suggestions: string;\n}\n\nexport default function Suggestions({ suggestions }: Props) {\n  return (\n    <SuggestionsContext.Consumer>\n      {({ addSuggestions, removeSuggestions }) => (\n        <SuggestionsInner\n          addSuggestions={addSuggestions}\n          removeSuggestions={removeSuggestions}\n          suggestions={suggestions}\n        />\n      )}\n    </SuggestionsContext.Consumer>\n  );\n}\n\ninterface SuggestionsInnerProps {\n  addSuggestions: (key: string) => void;\n  removeSuggestions: (key: string) => void;\n  suggestions: string;\n}\n\nclass SuggestionsInner extends React.PureComponent<SuggestionsInnerProps> {\n  componentDidMount() {\n    this.props.addSuggestions(this.props.suggestions);\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    if (prevProps.suggestions !== this.props.suggestions) {\n      this.props.removeSuggestions(this.props.suggestions);\n      this.props.addSuggestions(prevProps.suggestions);\n    }\n  }\n\n  componentWillUnmount() {\n    this.props.removeSuggestions(this.props.suggestions);\n  }\n\n  render() {\n    return null;\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport Modal, { ModalProps } from './Modal';\n\nexport interface ChildrenProps {\n  onCloseClick: (event?: React.SyntheticEvent<HTMLElement>) => void;\n  onFormSubmit: (event: React.SyntheticEvent<HTMLFormElement>) => void;\n  onSubmitClick: (event?: React.SyntheticEvent<HTMLElement>) => void;\n  submitting: boolean;\n}\n\ninterface Props extends ModalProps {\n  children: (props: ChildrenProps) => React.ReactNode;\n  header: string;\n  onClose: () => void;\n  onSubmit: () => void | Promise<void>;\n}\n\ninterface State {\n  submitting: boolean;\n}\n\nexport default class SimpleModal extends React.Component<Props, State> {\n  mounted = false;\n  state: State = { submitting: false };\n\n  componentDidMount() {\n    this.mounted = true;\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  stopSubmitting = () => {\n    if (this.mounted) {\n      this.setState({ submitting: false });\n    }\n  };\n\n  handleCloseClick = (event?: React.SyntheticEvent<HTMLElement>) => {\n    if (event) {\n      event.preventDefault();\n      event.currentTarget.blur();\n    }\n    this.props.onClose();\n  };\n\n  handleFormSubmit = (event: React.SyntheticEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    this.submit();\n  };\n\n  handleSubmitClick = (event?: React.SyntheticEvent<HTMLElement>) => {\n    if (event) {\n      event.preventDefault();\n      event.currentTarget.blur();\n    }\n    this.submit();\n  };\n\n  submit = () => {\n    const result = this.props.onSubmit();\n    if (result) {\n      this.setState({ submitting: true });\n      result.then(this.stopSubmitting, this.stopSubmitting);\n    }\n  };\n\n  render() {\n    const { children, header, onClose, onSubmit, ...modalProps } = this.props;\n    return (\n      <Modal contentLabel={header} onRequestClose={onClose} {...modalProps}>\n        {children({\n          onCloseClick: this.handleCloseClick,\n          onFormSubmit: this.handleFormSubmit,\n          onSubmitClick: this.handleSubmitClick,\n          submitting: this.state.submitting\n        })}\n      </Modal>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { ModalProps } from './Modal';\nimport SimpleModal, { ChildrenProps } from './SimpleModal';\nimport DeferredSpinner from '../common/DeferredSpinner';\nimport { SubmitButton, ResetButtonLink } from '../ui/buttons';\nimport { translate } from '../../helpers/l10n';\n\nexport interface ConfirmModalProps<T> extends ModalProps {\n  cancelButtonText?: string;\n  confirmButtonText: string;\n  confirmData?: T;\n  confirmDisable?: boolean;\n  isDestructive?: boolean;\n  onConfirm: (data?: T) => void | Promise<void | Response>;\n}\n\ninterface Props<T> extends ConfirmModalProps<T> {\n  header: string;\n  headerDescription?: React.ReactNode;\n  onClose: () => void;\n}\n\nexport default class ConfirmModal<T = string> extends React.PureComponent<Props<T>> {\n  mounted = false;\n\n  componentDidMount() {\n    this.mounted = true;\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  handleSubmit = () => {\n    const result = this.props.onConfirm(this.props.confirmData);\n    if (result) {\n      return result.then(this.props.onClose, () => {});\n    } else {\n      this.props.onClose();\n      return undefined;\n    }\n  };\n\n  renderModalContent = ({ onCloseClick, onFormSubmit, submitting }: ChildrenProps) => {\n    const {\n      children,\n      confirmButtonText,\n      confirmDisable,\n      header,\n      headerDescription,\n      isDestructive,\n      cancelButtonText = translate('cancel')\n    } = this.props;\n    return (\n      <form onSubmit={onFormSubmit}>\n        <header className=\"modal-head\">\n          <h2>{header}</h2>\n          {headerDescription}\n        </header>\n        <div className=\"modal-body\">{children}</div>\n        <footer className=\"modal-foot\">\n          <DeferredSpinner className=\"spacer-right\" loading={submitting} />\n          <SubmitButton\n            autoFocus={true}\n            className={isDestructive ? 'button-red' : undefined}\n            disabled={submitting || confirmDisable}>\n            {confirmButtonText}\n          </SubmitButton>\n          <ResetButtonLink disabled={submitting} onClick={onCloseClick}>\n            {cancelButtonText}\n          </ResetButtonLink>\n        </footer>\n      </form>\n    );\n  };\n\n  render() {\n    const { header, onClose, noBackdrop, size } = this.props;\n    const modalProps = { header, onClose, noBackdrop, size };\n    return (\n      <SimpleModal onSubmit={this.handleSubmit} {...modalProps}>\n        {this.renderModalContent}\n      </SimpleModal>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { DateSource, FormattedDate } from 'react-intl';\nimport { parseDate } from '../../helpers/dates';\n\ninterface Props {\n  children?: (formattedDate: string) => React.ReactNode;\n  date: DateSource;\n  long?: boolean;\n}\n\nexport const formatterOption = { year: 'numeric', month: 'short', day: '2-digit' };\n\nexport const longFormatterOption = { year: 'numeric', month: 'long', day: 'numeric' };\n\nexport default function DateFormatter({ children, date, long }: Props) {\n  return (\n    <FormattedDate value={parseDate(date)} {...(long ? longFormatterOption : formatterOption)}>\n      {children}\n    </FormattedDate>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport ConfirmModal, { ConfirmModalProps } from './ConfirmModal';\nimport ModalButton, { ChildrenProps, ModalProps } from './ModalButton';\n\ninterface Props<T> extends ConfirmModalProps<T> {\n  children: (props: ChildrenProps) => React.ReactNode;\n  modalBody: React.ReactNode;\n  modalHeader: string;\n  modalHeaderDescription?: React.ReactNode;\n}\n\ninterface State {\n  modal: boolean;\n}\n\nexport default class ConfirmButton<T> extends React.PureComponent<Props<T>, State> {\n  renderConfirmModal = ({ onClose }: ModalProps) => {\n    const {\n      children,\n      modalBody,\n      modalHeader,\n      modalHeaderDescription,\n      ...confirmModalProps\n    } = this.props;\n    return (\n      <ConfirmModal\n        header={modalHeader}\n        headerDescription={modalHeaderDescription}\n        onClose={onClose}\n        {...confirmModalProps}>\n        {modalBody}\n      </ConfirmModal>\n    );\n  };\n\n  render() {\n    return <ModalButton modal={this.renderConfirmModal}>{this.props.children}</ModalButton>;\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\n\nexport interface ChildrenProps {\n  onClick: () => void;\n  onFormSubmit: (event: React.FormEvent<HTMLFormElement>) => void;\n}\n\nexport interface ModalProps {\n  onClose: () => void;\n}\n\nexport interface Props {\n  children: (props: ChildrenProps) => React.ReactNode;\n  modal: (props: ModalProps) => React.ReactNode;\n}\n\ninterface State {\n  modal: boolean;\n}\n\nexport default class ModalButton extends React.PureComponent<Props, State> {\n  mounted = false;\n  state: State = { modal: false };\n\n  componentDidMount() {\n    this.mounted = true;\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  handleButtonClick = () => {\n    this.setState({ modal: true });\n  };\n\n  handleFormSubmit = (event?: React.FormEvent<HTMLFormElement>) => {\n    if (event) {\n      event.preventDefault();\n    }\n    this.setState({ modal: true });\n  };\n\n  handleCloseModal = () => {\n    if (this.mounted) {\n      this.setState({ modal: false });\n    }\n  };\n\n  render() {\n    return (\n      <>\n        {this.props.children({\n          onClick: this.handleButtonClick,\n          onFormSubmit: this.handleFormSubmit\n        })}\n        {this.state.modal && this.props.modal({ onClose: this.handleCloseModal })}\n      </>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport * as classNames from 'classnames';\nimport * as Clipboard from 'clipboard';\nimport Tooltip from './Tooltip';\nimport { Button } from '../ui/buttons';\nimport { translate } from '../../helpers/l10n';\n\ninterface Props {\n  className?: string;\n  copyValue: string;\n  label?: string;\n}\n\ninterface State {\n  tooltipShown: boolean;\n}\n\nexport default class ClipboardButton extends React.PureComponent<Props, State> {\n  clipboard?: Clipboard;\n  copyButton?: HTMLElement | null;\n  mounted = false;\n  state: State = { tooltipShown: false };\n\n  componentDidMount() {\n    this.mounted = true;\n    if (this.copyButton) {\n      this.clipboard = new Clipboard(this.copyButton);\n      this.clipboard.on('success', this.showTooltip);\n    }\n  }\n\n  componentDidUpdate() {\n    if (this.clipboard) {\n      this.clipboard.destroy();\n    }\n    if (this.copyButton) {\n      this.clipboard = new Clipboard(this.copyButton);\n      this.clipboard.on('success', this.showTooltip);\n    }\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n    if (this.clipboard) {\n      this.clipboard.destroy();\n    }\n  }\n\n  showTooltip = () => {\n    if (this.mounted) {\n      this.setState({ tooltipShown: true });\n      setTimeout(() => {\n        if (this.mounted) {\n          this.setState({ tooltipShown: false });\n        }\n      }, 1000);\n    }\n  };\n\n  render() {\n    return (\n      <Tooltip overlay={translate('copied_action')} visible={this.state.tooltipShown}>\n        <Button\n          className={classNames('no-select', this.props.className)}\n          data-clipboard-text={this.props.copyValue}\n          innerRef={node => (this.copyButton = node)}>\n          {this.props.label ? this.props.label : translate('copy')}\n        </Button>\n      </Tooltip>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport Icon, { IconProps } from './Icon';\n\nexport default function ChevronDownIcon({ className, fill = 'currentColor', size }: IconProps) {\n  return (\n    <Icon className={className} size={size}>\n      <path\n        d=\"M7.72 11.596L3.119 6.992A.382.382 0 0 1 3 6.713c0-.108.04-.2.118-.279l1.03-1.03a.382.382 0 0 1 .278-.117c.108 0 .201.04.28.117L8 8.7l3.294-3.295a.382.382 0 0 1 .28-.117c.108 0 .2.04.279.117l1.03 1.03a.382.382 0 0 1 .117.28c0 .107-.04.2-.118.278L8.28 11.596a.382.382 0 0 1-.279.117.382.382 0 0 1-.28-.117z\"\n        style={{ fill }}\n      />\n    </Icon>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { IconProps } from './Icon';\nimport ChevronDownIcon from './ChevronDownIcon';\nimport ChevronRightIcon from './ChevronRightcon';\n\ninterface Props extends IconProps {\n  open: boolean;\n}\n\nexport default function OpenCloseIcon({ open, ...props }: Props) {\n  return open ? <ChevronDownIcon {...props} /> : <ChevronRightIcon {...props} />;\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { getJSON, post, postJSON, requestTryAndRepeatUntil } from '../helpers/request';\nimport throwGlobalError from '../app/utils/throwGlobalError';\n\nexport function setLogLevel(level: string): Promise<void | Response> {\n  return post('/api/system/change_log_level', { level }).catch(throwGlobalError);\n}\n\nexport function getSystemInfo(): Promise<T.SysInfoCluster | T.SysInfoStandalone> {\n  return getJSON('/api/system/info').catch(throwGlobalError);\n}\n\nexport function getSystemStatus(): Promise<{ id: string; version: string; status: T.SysStatus }> {\n  return getJSON('/api/system/status');\n}\n\nexport function getSystemUpgrades(): Promise<{\n  upgrades: T.SystemUpgrade[];\n  updateCenterRefresh: string;\n}> {\n  return getJSON('/api/system/upgrades');\n}\n\nexport function getMigrationStatus(): Promise<{\n  message?: string;\n  startedAt?: string;\n  state: string;\n}> {\n  return getJSON('/api/system/db_migration_status');\n}\n\nexport function migrateDatabase(): Promise<{\n  message?: string;\n  startedAt?: string;\n  state: string;\n}> {\n  return postJSON('/api/system/migrate_db');\n}\n\nexport function restart(): Promise<void | Response> {\n  return post('/api/system/restart').catch(throwGlobalError);\n}\n\nexport function waitSystemUPStatus(): Promise<{\n  id: string;\n  version: string;\n  status: T.SysStatus;\n}> {\n  return requestTryAndRepeatUntil(\n    getSystemStatus,\n    { max: -1, slowThreshold: -15 },\n    ({ status }) => status === 'UP'\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { PluginPendingResult } from '../../api/plugins';\n\nexport interface AdminContextInterface {\n  fetchSystemStatus: () => void;\n  fetchPendingPlugins: () => void;\n  pendingPlugins: PluginPendingResult;\n  systemStatus: T.SysStatus;\n}\n\nexport const defaultPendingPlugins = { installing: [], removing: [], updating: [] };\nexport const defaultSystemStatus = 'UP';\n\nconst AdminContext = React.createContext<AdminContextInterface>({\n  fetchSystemStatus: () => {},\n  fetchPendingPlugins: () => {},\n  pendingPlugins: defaultPendingPlugins,\n  systemStatus: defaultSystemStatus\n});\nexport default AdminContext;\n"],"sourceRoot":""}