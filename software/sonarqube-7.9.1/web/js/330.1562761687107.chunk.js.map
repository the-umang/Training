{"version":3,"sources":["webpack:///./src/main/js/apps/organizations/components/OrganizationDelete.tsx","webpack:///./src/main/js/components/controls/Modal.tsx","webpack:///./src/main/js/components/controls/SimpleModal.tsx","webpack:///./src/main/js/components/controls/ConfirmModal.tsx","webpack:///./src/main/js/components/controls/ConfirmButton.tsx","webpack:///./src/main/js/components/controls/ModalButton.tsx","webpack:///./src/main/js/app/utils/addGlobalSuccessMessage.ts","webpack:///./node_modules/exenv/index.js","webpack:///./src/main/js/apps/organizations/actions.ts"],"names":["OrganizationDelete","_super","_this","apply","this","arguments","mounted","state","verify","fetchOrganizationPlanInfo","Object","_helpers_system__WEBPACK_IMPORTED_MODULE_8__","_api_organizations__WEBPACK_IMPORTED_MODULE_7__","props","organization","key","then","billingInfo","setState","hasPaidPlan","subscription","status","handleInput","event","currentTarget","value","isVerified","toLowerCase","name","onDelete","deleteOrganization","router","replace","pathname","confirmationMessage","_helpers_l10n__WEBPACK_IMPORTED_MODULE_4__","title","_app_utils_addGlobalSuccessMessage__WEBPACK_IMPORTED_MODULE_11__","__extends","prototype","componentDidMount","componentWillUnmount","render","react__WEBPACK_IMPORTED_MODULE_0__","className","_components_common_InstanceMessage__WEBPACK_IMPORTED_MODULE_3__","message","_components_controls_ConfirmButton__WEBPACK_IMPORTED_MODULE_2__","confirmButtonText","confirmDisable","isDestructive","modalBody","_components_ui_Alert__WEBPACK_IMPORTED_MODULE_9__","variant","htmlFor","autoFocus","id","onChange","type","modalHeader","onConfirm","_a","onClick","_components_ui_buttons__WEBPACK_IMPORTED_MODULE_6__","mapDispatchToProps","_actions__WEBPACK_IMPORTED_MODULE_5__","__webpack_exports__","_components_hoc_withRouter__WEBPACK_IMPORTED_MODULE_10__","react_redux__WEBPACK_IMPORTED_MODULE_1__","Modal","react_modal__WEBPACK_IMPORTED_MODULE_1__","__assign","classnames__WEBPACK_IMPORTED_MODULE_2__","modal-small","size","modal-medium","modal-large","isOpen","overlayClassName","modal-no-backdrop","noBackdrop","SimpleModal","submitting","stopSubmitting","handleCloseClick","preventDefault","blur","onClose","handleFormSubmit","submit","handleSubmitClick","result","onSubmit","children","header","modalProps","__rest","_Modal__WEBPACK_IMPORTED_MODULE_1__","contentLabel","onRequestClose","onCloseClick","onFormSubmit","onSubmitClick","ConfirmModal","handleSubmit","confirmData","renderModalContent","_b","headerDescription","_c","cancelButtonText","_common_DeferredSpinner__WEBPACK_IMPORTED_MODULE_2__","loading","_ui_buttons__WEBPACK_IMPORTED_MODULE_3__","undefined","disabled","_SimpleModal__WEBPACK_IMPORTED_MODULE_1__","ConfirmButton","renderConfirmModal","modalHeaderDescription","confirmModalProps","_ConfirmModal__WEBPACK_IMPORTED_MODULE_1__","_ModalButton__WEBPACK_IMPORTED_MODULE_2__","modal","ModalButton","handleButtonClick","handleCloseModal","__webpack_require__","d","addGlobalSuccessMessage","_getStore__WEBPACK_IMPORTED_MODULE_0__","_store_globalMessages__WEBPACK_IMPORTED_MODULE_1__","dispatch","__WEBPACK_AMD_DEFINE_RESULT__","canUseDOM","window","document","createElement","ExecutionEnvironment","canUseWorkers","Worker","canUseEventListeners","addEventListener","attachEvent","canUseViewport","screen","call","exports","module","updateOrganization","_api_organizations__WEBPACK_IMPORTED_MODULE_0__","_store_organizations__WEBPACK_IMPORTED_MODULE_1__","_store_globalMessages__WEBPACK_IMPORTED_MODULE_2__","_helpers_l10n__WEBPACK_IMPORTED_MODULE_3__","changes"],"mappings":"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","file":"js/330.1562761687107.chunk.js","sourcesContent":["/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { connect } from 'react-redux';\nimport ConfirmButton from '../../../components/controls/ConfirmButton';\nimport InstanceMessage from '../../../components/common/InstanceMessage';\nimport { translate, translateWithParameters } from '../../../helpers/l10n';\nimport { deleteOrganization } from '../actions';\nimport { Button } from '../../../components/ui/buttons';\nimport { getOrganizationBilling } from '../../../api/organizations';\nimport { isSonarCloud } from '../../../helpers/system';\nimport { Alert } from '../../../components/ui/Alert';\nimport { withRouter, Router } from '../../../components/hoc/withRouter';\nimport addGlobalSuccessMessage from '../../../app/utils/addGlobalSuccessMessage';\n\ninterface DispatchToProps {\n  deleteOrganization: (key: string) => Promise<void>;\n}\n\ninterface OwnProps {\n  organization: Pick<T.Organization, 'key' | 'name'>;\n  router: Pick<Router, 'replace'>;\n}\n\ntype Props = OwnProps & DispatchToProps;\n\ninterface State {\n  hasPaidPlan?: boolean;\n  verify: string;\n}\n\nexport class OrganizationDelete extends React.PureComponent<Props, State> {\n  mounted = false;\n  state: State = { verify: '' };\n\n  componentDidMount() {\n    this.mounted = true;\n    this.fetchOrganizationPlanInfo();\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  fetchOrganizationPlanInfo = () => {\n    if (isSonarCloud()) {\n      getOrganizationBilling(this.props.organization.key).then(\n        billingInfo => {\n          if (this.mounted) {\n            this.setState({\n              hasPaidPlan: billingInfo.subscription.status !== 'inactive'\n            });\n          }\n        },\n        () => {\n          if (this.mounted) {\n            this.setState({ hasPaidPlan: false });\n          }\n        }\n      );\n    }\n  };\n\n  handleInput = (event: React.ChangeEvent<HTMLInputElement>) => {\n    this.setState({ verify: event.currentTarget.value });\n  };\n\n  isVerified = () => {\n    return this.state.verify.toLowerCase() === this.props.organization.name.toLowerCase();\n  };\n\n  onDelete = () => {\n    const { organization } = this.props;\n    return this.props.deleteOrganization(organization.key).then(() => {\n      if (this.state.hasPaidPlan) {\n        this.props.router.replace({\n          pathname: '/feedback/downgrade',\n          state: {\n            confirmationMessage: translateWithParameters(\n              'organization.deleted_x',\n              organization.name\n            ),\n            organization,\n            title: translate('billing.downgrade.reason.title_deleted')\n          }\n        });\n      } else {\n        addGlobalSuccessMessage(translate('organization.deleted'));\n        this.props.router.replace('/');\n      }\n    });\n  };\n\n  render() {\n    const { hasPaidPlan } = this.state;\n    return (\n      <div className=\"boxed-group boxed-group-inner\">\n        <h2 className=\"boxed-title\">{translate('organization.delete')}</h2>\n        <p className=\"big-spacer-bottom width-50\">\n          <InstanceMessage message={translate('organization.delete.description')} />\n        </p>\n        <ConfirmButton\n          confirmButtonText={translate('delete')}\n          confirmDisable={!this.isVerified()}\n          isDestructive={true}\n          modalBody={\n            <div>\n              {hasPaidPlan && (\n                <Alert variant=\"warning\">\n                  {translate('organization.delete.sonarcloud.paid_plan_info')}\n                </Alert>\n              )}\n              <p>{translate('organization.delete.question')}</p>\n              <div className=\"spacer-top\">\n                <label htmlFor=\"downgrade-organization-name\">\n                  {translate('billing.downgrade.modal.type_to_proceed')}\n                </label>\n                <div className=\"little-spacer-top\">\n                  <input\n                    autoFocus={true}\n                    className=\"input-super-large\"\n                    id=\"downgrade-organization-name\"\n                    onChange={this.handleInput}\n                    type=\"text\"\n                    value={this.state.verify}\n                  />\n                </div>\n              </div>\n            </div>\n          }\n          modalHeader={translateWithParameters(\n            'organization.delete_x',\n            this.props.organization.name\n          )}\n          onConfirm={this.onDelete}>\n          {({ onClick }) => (\n            <Button className=\"js-custom-measure-delete button-red\" onClick={onClick}>\n              {translate('delete')}\n            </Button>\n          )}\n        </ConfirmButton>\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps: DispatchToProps = { deleteOrganization: deleteOrganization as any };\n\nexport default withRouter(\n  connect(\n    null,\n    mapDispatchToProps\n  )(OrganizationDelete)\n);\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport * as ReactModal from 'react-modal';\nimport * as classNames from 'classnames';\n\nReactModal.setAppElement('#content');\n\nexport interface ModalProps {\n  children: React.ReactNode;\n  size?: 'small' | 'medium' | 'large';\n  noBackdrop?: boolean;\n}\n\ntype MandatoryProps = Pick<ReactModal.Props, 'contentLabel'>;\n\ntype Props = Partial<ReactModal.Props> & MandatoryProps & ModalProps;\n\nexport default function Modal(props: Props) {\n  return (\n    <ReactModal\n      className={classNames('modal', {\n        'modal-small': props.size === 'small',\n        'modal-medium': props.size === 'medium',\n        'modal-large': props.size === 'large'\n      })}\n      isOpen={true}\n      overlayClassName={classNames('modal-overlay', { 'modal-no-backdrop': props.noBackdrop })}\n      {...props}\n    />\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport Modal, { ModalProps } from './Modal';\n\nexport interface ChildrenProps {\n  onCloseClick: (event?: React.SyntheticEvent<HTMLElement>) => void;\n  onFormSubmit: (event: React.SyntheticEvent<HTMLFormElement>) => void;\n  onSubmitClick: (event?: React.SyntheticEvent<HTMLElement>) => void;\n  submitting: boolean;\n}\n\ninterface Props extends ModalProps {\n  children: (props: ChildrenProps) => React.ReactNode;\n  header: string;\n  onClose: () => void;\n  onSubmit: () => void | Promise<void>;\n}\n\ninterface State {\n  submitting: boolean;\n}\n\nexport default class SimpleModal extends React.Component<Props, State> {\n  mounted = false;\n  state: State = { submitting: false };\n\n  componentDidMount() {\n    this.mounted = true;\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  stopSubmitting = () => {\n    if (this.mounted) {\n      this.setState({ submitting: false });\n    }\n  };\n\n  handleCloseClick = (event?: React.SyntheticEvent<HTMLElement>) => {\n    if (event) {\n      event.preventDefault();\n      event.currentTarget.blur();\n    }\n    this.props.onClose();\n  };\n\n  handleFormSubmit = (event: React.SyntheticEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    this.submit();\n  };\n\n  handleSubmitClick = (event?: React.SyntheticEvent<HTMLElement>) => {\n    if (event) {\n      event.preventDefault();\n      event.currentTarget.blur();\n    }\n    this.submit();\n  };\n\n  submit = () => {\n    const result = this.props.onSubmit();\n    if (result) {\n      this.setState({ submitting: true });\n      result.then(this.stopSubmitting, this.stopSubmitting);\n    }\n  };\n\n  render() {\n    const { children, header, onClose, onSubmit, ...modalProps } = this.props;\n    return (\n      <Modal contentLabel={header} onRequestClose={onClose} {...modalProps}>\n        {children({\n          onCloseClick: this.handleCloseClick,\n          onFormSubmit: this.handleFormSubmit,\n          onSubmitClick: this.handleSubmitClick,\n          submitting: this.state.submitting\n        })}\n      </Modal>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { ModalProps } from './Modal';\nimport SimpleModal, { ChildrenProps } from './SimpleModal';\nimport DeferredSpinner from '../common/DeferredSpinner';\nimport { SubmitButton, ResetButtonLink } from '../ui/buttons';\nimport { translate } from '../../helpers/l10n';\n\nexport interface ConfirmModalProps<T> extends ModalProps {\n  cancelButtonText?: string;\n  confirmButtonText: string;\n  confirmData?: T;\n  confirmDisable?: boolean;\n  isDestructive?: boolean;\n  onConfirm: (data?: T) => void | Promise<void | Response>;\n}\n\ninterface Props<T> extends ConfirmModalProps<T> {\n  header: string;\n  headerDescription?: React.ReactNode;\n  onClose: () => void;\n}\n\nexport default class ConfirmModal<T = string> extends React.PureComponent<Props<T>> {\n  mounted = false;\n\n  componentDidMount() {\n    this.mounted = true;\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  handleSubmit = () => {\n    const result = this.props.onConfirm(this.props.confirmData);\n    if (result) {\n      return result.then(this.props.onClose, () => {});\n    } else {\n      this.props.onClose();\n      return undefined;\n    }\n  };\n\n  renderModalContent = ({ onCloseClick, onFormSubmit, submitting }: ChildrenProps) => {\n    const {\n      children,\n      confirmButtonText,\n      confirmDisable,\n      header,\n      headerDescription,\n      isDestructive,\n      cancelButtonText = translate('cancel')\n    } = this.props;\n    return (\n      <form onSubmit={onFormSubmit}>\n        <header className=\"modal-head\">\n          <h2>{header}</h2>\n          {headerDescription}\n        </header>\n        <div className=\"modal-body\">{children}</div>\n        <footer className=\"modal-foot\">\n          <DeferredSpinner className=\"spacer-right\" loading={submitting} />\n          <SubmitButton\n            autoFocus={true}\n            className={isDestructive ? 'button-red' : undefined}\n            disabled={submitting || confirmDisable}>\n            {confirmButtonText}\n          </SubmitButton>\n          <ResetButtonLink disabled={submitting} onClick={onCloseClick}>\n            {cancelButtonText}\n          </ResetButtonLink>\n        </footer>\n      </form>\n    );\n  };\n\n  render() {\n    const { header, onClose, noBackdrop, size } = this.props;\n    const modalProps = { header, onClose, noBackdrop, size };\n    return (\n      <SimpleModal onSubmit={this.handleSubmit} {...modalProps}>\n        {this.renderModalContent}\n      </SimpleModal>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport ConfirmModal, { ConfirmModalProps } from './ConfirmModal';\nimport ModalButton, { ChildrenProps, ModalProps } from './ModalButton';\n\ninterface Props<T> extends ConfirmModalProps<T> {\n  children: (props: ChildrenProps) => React.ReactNode;\n  modalBody: React.ReactNode;\n  modalHeader: string;\n  modalHeaderDescription?: React.ReactNode;\n}\n\ninterface State {\n  modal: boolean;\n}\n\nexport default class ConfirmButton<T> extends React.PureComponent<Props<T>, State> {\n  renderConfirmModal = ({ onClose }: ModalProps) => {\n    const {\n      children,\n      modalBody,\n      modalHeader,\n      modalHeaderDescription,\n      ...confirmModalProps\n    } = this.props;\n    return (\n      <ConfirmModal\n        header={modalHeader}\n        headerDescription={modalHeaderDescription}\n        onClose={onClose}\n        {...confirmModalProps}>\n        {modalBody}\n      </ConfirmModal>\n    );\n  };\n\n  render() {\n    return <ModalButton modal={this.renderConfirmModal}>{this.props.children}</ModalButton>;\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\n\nexport interface ChildrenProps {\n  onClick: () => void;\n  onFormSubmit: (event: React.FormEvent<HTMLFormElement>) => void;\n}\n\nexport interface ModalProps {\n  onClose: () => void;\n}\n\nexport interface Props {\n  children: (props: ChildrenProps) => React.ReactNode;\n  modal: (props: ModalProps) => React.ReactNode;\n}\n\ninterface State {\n  modal: boolean;\n}\n\nexport default class ModalButton extends React.PureComponent<Props, State> {\n  mounted = false;\n  state: State = { modal: false };\n\n  componentDidMount() {\n    this.mounted = true;\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  handleButtonClick = () => {\n    this.setState({ modal: true });\n  };\n\n  handleFormSubmit = (event?: React.FormEvent<HTMLFormElement>) => {\n    if (event) {\n      event.preventDefault();\n    }\n    this.setState({ modal: true });\n  };\n\n  handleCloseModal = () => {\n    if (this.mounted) {\n      this.setState({ modal: false });\n    }\n  };\n\n  render() {\n    return (\n      <>\n        {this.props.children({\n          onClick: this.handleButtonClick,\n          onFormSubmit: this.handleFormSubmit\n        })}\n        {this.state.modal && this.props.modal({ onClose: this.handleCloseModal })}\n      </>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport getStore from './getStore';\nimport * as globalMessages from '../../store/globalMessages';\n\nexport default function addGlobalSuccessMessage(message: string): void {\n  const store = getStore();\n  store.dispatch(globalMessages.addGlobalSuccessMessage(message));\n}\n","/*!\n  Copyright (c) 2015 Jed Watson.\n  Based on code that is Copyright 2013-2015, Facebook, Inc.\n  All rights reserved.\n*/\n/* global define */\n\n(function () {\n\t'use strict';\n\n\tvar canUseDOM = !!(\n\t\ttypeof window !== 'undefined' &&\n\t\twindow.document &&\n\t\twindow.document.createElement\n\t);\n\n\tvar ExecutionEnvironment = {\n\n\t\tcanUseDOM: canUseDOM,\n\n\t\tcanUseWorkers: typeof Worker !== 'undefined',\n\n\t\tcanUseEventListeners:\n\t\t\tcanUseDOM && !!(window.addEventListener || window.attachEvent),\n\n\t\tcanUseViewport: canUseDOM && !!window.screen\n\n\t};\n\n\tif (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\n\t\tdefine(function () {\n\t\t\treturn ExecutionEnvironment;\n\t\t});\n\t} else if (typeof module !== 'undefined' && module.exports) {\n\t\tmodule.exports = ExecutionEnvironment;\n\t} else {\n\t\twindow.ExecutionEnvironment = ExecutionEnvironment;\n\t}\n\n}());\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { Dispatch } from 'redux';\nimport * as api from '../../api/organizations';\nimport * as actions from '../../store/organizations';\nimport { addGlobalSuccessMessage } from '../../store/globalMessages';\nimport { translate } from '../../helpers/l10n';\n\nexport function updateOrganization(key: string, changes: T.OrganizationBase) {\n  return (dispatch: Dispatch<any>) => {\n    return api.updateOrganization(key, changes).then(() => {\n      dispatch(actions.updateOrganization(key, changes));\n      dispatch(addGlobalSuccessMessage(translate('organization.updated')));\n    });\n  };\n}\n\nexport function deleteOrganization(key: string) {\n  return (dispatch: Dispatch<any>) => {\n    return api.deleteOrganization(key).then(() => {\n      dispatch(actions.deleteOrganization(key));\n    });\n  };\n}\n"],"sourceRoot":""}