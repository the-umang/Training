{"version":3,"sources":["webpack:///./src/main/js/apps/portfolio/components/CreateFormShim.tsx","webpack:///./src/main/js/components/icons-components/PlusIcon.tsx","webpack:///./src/main/js/app/components/nav/global/GlobalNavPlus.tsx","webpack:///./src/main/js/helpers/extensions.ts","webpack:///./src/main/js/api/nav.ts"],"names":["CreateFormShim_CreateFormShim","index_js_exposed","[object Object]","CreateForm","window","SonarGovernance","Object","assign","this","props","PlusIcon","_ref","className","_ref$fill","fill","size","Icon","d","style","__webpack_require__","__webpack_exports__","GlobalNavPlus_GlobalNavPlus","mounted","state","createPortfolio","governanceReady","handleNewProjectClick","event","preventDefault","openProjectOnboarding","openCreatePortfolioForm","setState","closeCreatePortfolioForm","handleNewPortfolioClick","currentTarget","blur","handleCreatePortfolio","key","qualifier","nav","component","then","data","configuration","extensions","find","item","router","push","urls","appState","qualifiers","includes","canCreateProject","href","onClick","system","l10n","canCreateOrg","es","to","showGovernanceEntry","defaultQualifier","currentUser","canCreateApplication","users","canCreatePortfolio","Dropdown","overlay","renderCreateProject","renderCreateOrganization","renderCreatePortfolio","tagName","title","onClose","onCreate","installScript","getExtensionStart","_urls__WEBPACK_IMPORTED_MODULE_0__","_extensionsHandler__WEBPACK_IMPORTED_MODULE_1__","librariesExposed","url","target","arguments","length","undefined","Promise","resolve","scriptTag","document","createElement","src","concat","onload","getElementsByTagName","appendChild","async","fromCache","exposeLibraries","all","e","bind","default","start","reject","getComponentNavigation","getMarketplaceNavigation","getSettingsNavigation","_helpers_request__WEBPACK_IMPORTED_MODULE_0__","_app_utils_throwGlobalError__WEBPACK_IMPORTED_MODULE_1__","catch"],"mappings":"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","file":"js/353.m.8583a648.chunk.js","sourcesContent":["/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\n\ninterface Props {\n  defaultQualifier?: string;\n  onClose: () => void;\n  onCreate: (portfolio: { key: string; qualifier: string }) => void;\n}\n\nexport default class CreateFormShim extends React.Component<Props> {\n  render() {\n    const { CreateForm } = (window as any).SonarGovernance;\n    return <CreateForm {...this.props} />;\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport Icon, { IconProps } from './Icon';\n\nexport default function PlusIcon({ className, fill = 'currentColor', size }: IconProps) {\n  return (\n    <Icon className={className} size={size}>\n      <path d=\"M1,7L7,7L7,1L9,1L9,7L15,7L15,9L9,9L9,15L7,15L7,9L1,9L1,7Z\" style={{ fill }} />\n    </Icon>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { Link, withRouter, WithRouterProps } from 'react-router';\nimport CreateFormShim from '../../../../apps/portfolio/components/CreateFormShim';\nimport Dropdown from '../../../../components/controls/Dropdown';\nimport PlusIcon from '../../../../components/icons-components/PlusIcon';\nimport { OnboardingContextShape } from '../../OnboardingContext';\nimport { getComponentNavigation } from '../../../../api/nav';\nimport { getExtensionStart } from '../../../../helpers/extensions';\nimport { translate } from '../../../../helpers/l10n';\nimport { isSonarCloud } from '../../../../helpers/system';\nimport { getPortfolioAdminUrl, getPortfolioUrl } from '../../../../helpers/urls';\nimport { hasGlobalPermission } from '../../../../helpers/users';\n\ninterface Props {\n  appState: Pick<T.AppState, 'qualifiers'>;\n  currentUser: T.LoggedInUser;\n  openProjectOnboarding: OnboardingContextShape;\n}\n\ninterface State {\n  createPortfolio: boolean;\n  governanceReady: boolean;\n}\n\nexport class GlobalNavPlus extends React.PureComponent<Props & WithRouterProps, State> {\n  mounted = false;\n  state: State = { createPortfolio: false, governanceReady: false };\n\n  componentDidMount() {\n    this.mounted = true;\n    if (this.props.appState.qualifiers.includes('VW')) {\n      getExtensionStart('governance/console').then(\n        () => {\n          if (this.mounted) {\n            this.setState({ governanceReady: true });\n          }\n        },\n        () => {}\n      );\n    }\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  handleNewProjectClick = (event: React.MouseEvent<HTMLAnchorElement>) => {\n    event.preventDefault();\n    this.props.openProjectOnboarding();\n  };\n\n  openCreatePortfolioForm = () => {\n    this.setState({ createPortfolio: true });\n  };\n\n  closeCreatePortfolioForm = () => {\n    this.setState({ createPortfolio: false });\n  };\n\n  handleNewPortfolioClick = (event: React.MouseEvent<HTMLAnchorElement>) => {\n    event.preventDefault();\n    event.currentTarget.blur();\n    this.openCreatePortfolioForm();\n  };\n\n  handleCreatePortfolio = ({ key, qualifier }: { key: string; qualifier: string }) => {\n    return getComponentNavigation({ component: key }).then(data => {\n      if (\n        data.configuration &&\n        data.configuration.extensions &&\n        data.configuration.extensions.find(\n          (item: { key: string; name: string }) => item.key === 'governance/console'\n        )\n      ) {\n        this.props.router.push(getPortfolioAdminUrl(key, qualifier));\n      } else {\n        this.props.router.push(getPortfolioUrl(key));\n      }\n      this.closeCreatePortfolioForm();\n    });\n  };\n\n  renderCreateProject(canCreateProject: boolean) {\n    if (!canCreateProject) {\n      return null;\n    }\n    return (\n      <li>\n        <a className=\"js-new-project\" href=\"#\" onClick={this.handleNewProjectClick}>\n          {isSonarCloud()\n            ? translate('provisioning.analyze_new_project')\n            : translate('my_account.create_new.TRK')}\n        </a>\n      </li>\n    );\n  }\n\n  renderCreateOrganization(canCreateOrg: boolean) {\n    if (!canCreateOrg) {\n      return null;\n    }\n\n    return (\n      <li>\n        <Link className=\"js-new-organization\" to=\"/create-organization\">\n          {translate('my_account.create_new_organization')}\n        </Link>\n      </li>\n    );\n  }\n\n  renderCreatePortfolio(showGovernanceEntry: boolean, defaultQualifier?: string) {\n    const governanceInstalled = this.props.appState.qualifiers.includes('VW');\n    if (!governanceInstalled || !showGovernanceEntry) {\n      return null;\n    }\n\n    return (\n      <li>\n        <a className=\"js-new-portfolio\" href=\"#\" onClick={this.handleNewPortfolioClick}>\n          {defaultQualifier\n            ? translate('my_account.create_new', defaultQualifier)\n            : translate('my_account.create_new_portfolio_application')}\n        </a>\n      </li>\n    );\n  }\n\n  render() {\n    const { currentUser } = this.props;\n    const canCreateApplication = hasGlobalPermission(currentUser, 'applicationcreator');\n    const canCreateOrg = isSonarCloud();\n    const canCreatePortfolio = hasGlobalPermission(currentUser, 'portfoliocreator');\n    const canCreateProject = isSonarCloud() || hasGlobalPermission(currentUser, 'provisioning');\n\n    if (!canCreateProject && !canCreateApplication && !canCreatePortfolio && !canCreateOrg) {\n      return null;\n    }\n\n    let defaultQualifier: string | undefined;\n    if (!canCreateApplication) {\n      defaultQualifier = 'VW';\n    } else if (!canCreatePortfolio) {\n      defaultQualifier = 'APP';\n    }\n\n    return (\n      <>\n        <Dropdown\n          overlay={\n            <ul className=\"menu\">\n              {this.renderCreateProject(canCreateProject)}\n              {this.renderCreateOrganization(canCreateOrg)}\n              {this.renderCreatePortfolio(\n                canCreateApplication || canCreatePortfolio,\n                defaultQualifier\n              )}\n            </ul>\n          }\n          tagName=\"li\">\n          <a\n            className=\"navbar-icon navbar-plus\"\n            href=\"#\"\n            title={\n              isSonarCloud()\n                ? translate('my_account.create_new_project_or_organization')\n                : translate('my_account.create_new_project_portfolio_or_application')\n            }>\n            <PlusIcon />\n          </a>\n        </Dropdown>\n        {this.state.governanceReady && this.state.createPortfolio && (\n          <CreateFormShim\n            defaultQualifier={defaultQualifier}\n            onClose={this.closeCreatePortfolioForm}\n            onCreate={this.handleCreatePortfolio}\n          />\n        )}\n      </>\n    );\n  }\n}\n\nexport default withRouter(GlobalNavPlus);\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { getBaseUrl } from './urls';\nimport { getExtensionFromCache } from './extensionsHandler';\n\nlet librariesExposed = false;\n\nexport function installScript(url: string, target: 'body' | 'head' = 'body'): Promise<any> {\n  return new Promise(resolve => {\n    const scriptTag = document.createElement('script');\n    scriptTag.src = `${getBaseUrl()}${url}`;\n    scriptTag.onload = resolve;\n    document.getElementsByTagName(target)[0].appendChild(scriptTag);\n  });\n}\n\nexport async function getExtensionStart(key: string) {\n  const fromCache = getExtensionFromCache(key);\n  if (fromCache) {\n    return Promise.resolve(fromCache);\n  }\n\n  if (!librariesExposed) {\n    // Async import allows to reduce initial vendor bundle size\n    const exposeLibraries = (await import('../app/components/extensions/exposeLibraries')).default;\n    exposeLibraries();\n    librariesExposed = true;\n  }\n\n  await installScript(`/static/${key}.js`);\n\n  const start = getExtensionFromCache(key);\n  if (start) {\n    return start;\n  }\n  return Promise.reject();\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { getJSON } from '../helpers/request';\nimport throwGlobalError from '../app/utils/throwGlobalError';\n\nexport function getGlobalNavigation(): Promise<T.AppState> {\n  return getJSON('/api/navigation/global');\n}\n\nexport function getComponentNavigation(\n  data: { component: string } & T.BranchParameters\n): Promise<any> {\n  return getJSON('/api/navigation/component', data).catch(throwGlobalError);\n}\n\nexport function getMarketplaceNavigation(): Promise<{ serverId: string; ncloc: number }> {\n  return getJSON('/api/navigation/marketplace').catch(throwGlobalError);\n}\n\nexport function getSettingsNavigation(): Promise<any> {\n  return getJSON('/api/navigation/settings').catch(throwGlobalError);\n}\n"],"sourceRoot":""}