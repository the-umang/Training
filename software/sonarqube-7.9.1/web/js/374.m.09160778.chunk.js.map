{"version":3,"sources":["webpack:///./src/main/js/apps/quality-profiles/components/ProfileNotFound.tsx","webpack:///./src/main/js/apps/quality-profiles/details/ProfileHeader.tsx","webpack:///./src/main/js/apps/quality-profiles/components/ProfileContainer.tsx"],"names":["ProfileNotFound","props","index_js_exposed","className","es","to","Object","utils","organization","l10n","ProfileHeader_ProfileHeader","[object Object]","profile","this","inner","ProfileDate","date","rulesUpdatedAt","lastUsed","_this$props","language","languageName","ProfileLink","name","isBuiltIn","BuiltInQualityProfileBadge","tooltip","style","lineHeight","renderUpdateDate","renderUsageDate","ProfileActions","updateProfiles","ProfileContainer_ProfileContainer","location","profiles","router","query","key","find","replace","pathname","_a","other","__rest","_location$query","child","children","assign","id","Helmet_default","a","title"],"mappings":"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","file":"js/374.m.09160778.chunk.js","sourcesContent":["/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { IndexLink } from 'react-router';\nimport { translate } from '../../../helpers/l10n';\nimport { getProfilesPath } from '../utils';\n\ninterface Props {\n  organization: string | null;\n}\n\nexport default function ProfileNotFound(props: Props) {\n  return (\n    <div className=\"quality-profile-not-found\">\n      <div className=\"note spacer-bottom\">\n        <IndexLink className=\"text-muted\" to={getProfilesPath(props.organization)}>\n          {translate('quality_profiles.page')}\n        </IndexLink>\n      </div>\n\n      <div>{translate('quality_profiles.not_found')}</div>\n    </div>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { Link, IndexLink } from 'react-router';\nimport ProfileLink from '../components/ProfileLink';\nimport ProfileActions from '../components/ProfileActions';\nimport ProfileDate from '../components/ProfileDate';\nimport BuiltInQualityProfileBadge from '../components/BuiltInQualityProfileBadge';\nimport { translate } from '../../../helpers/l10n';\nimport {\n  isStagnant,\n  getProfilesPath,\n  getProfilesForLanguagePath,\n  getProfileChangelogPath\n} from '../utils';\nimport { Profile } from '../types';\n\ninterface Props {\n  profile: Profile;\n  organization: string | null;\n  updateProfiles: () => Promise<void>;\n}\n\nexport default class ProfileHeader extends React.PureComponent<Props> {\n  renderUpdateDate() {\n    const { profile } = this.props;\n    let inner = (\n      <span>\n        {translate('quality_profiles.updated_')} <ProfileDate date={profile.rulesUpdatedAt} />\n      </span>\n    );\n    if (isStagnant(profile)) {\n      inner = <span className=\"badge badge-normal-size badge-focus\">{inner}</span>;\n    }\n    return <li className=\"small spacer-right\">{inner}</li>;\n  }\n\n  renderUsageDate() {\n    const { profile } = this.props;\n    let inner = (\n      <span>\n        {translate('quality_profiles.used_')} <ProfileDate date={profile.lastUsed} />\n      </span>\n    );\n    if (!profile.lastUsed) {\n      inner = <span className=\"badge badge-normal-size badge-focus\">{inner}</span>;\n    }\n\n    return <li className=\"small big-spacer-right\">{inner}</li>;\n  }\n\n  render() {\n    const { organization, profile } = this.props;\n\n    return (\n      <header className=\"page-header quality-profile-header\">\n        <div className=\"note spacer-bottom\">\n          <IndexLink className=\"text-muted\" to={getProfilesPath(organization)}>\n            {translate('quality_profiles.page')}\n          </IndexLink>\n          {' / '}\n          <Link\n            className=\"text-muted\"\n            to={getProfilesForLanguagePath(profile.language, organization)}>\n            {profile.languageName}\n          </Link>\n        </div>\n\n        <h1 className=\"page-title\">\n          <ProfileLink\n            className=\"link-base-color\"\n            language={profile.language}\n            name={profile.name}\n            organization={organization}>\n            <span>{profile.name}</span>\n          </ProfileLink>\n          {profile.isBuiltIn && (\n            <BuiltInQualityProfileBadge className=\"spacer-left\" tooltip={false} />\n          )}\n        </h1>\n\n        <div className=\"pull-right\">\n          <ul className=\"list-inline\" style={{ lineHeight: '24px' }}>\n            {this.renderUpdateDate()}\n            {this.renderUsageDate()}\n            <li>\n              <Link\n                className=\"button\"\n                to={getProfileChangelogPath(profile.name, profile.language, organization)}>\n                {translate('changelog')}\n              </Link>\n            </li>\n            <li>\n              <ProfileActions\n                className=\"pull-left\"\n                organization={organization}\n                profile={profile}\n                updateProfiles={this.props.updateProfiles}\n              />\n            </li>\n          </ul>\n        </div>\n\n        {profile.isBuiltIn && (\n          <div className=\"page-description\">\n            {translate('quality_profiles.built_in.description.1')}\n            <br />\n            {translate('quality_profiles.built_in.description.2')}\n          </div>\n        )}\n      </header>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport Helmet from 'react-helmet';\nimport { WithRouterProps } from 'react-router';\nimport ProfileNotFound from './ProfileNotFound';\nimport ProfileHeader from '../details/ProfileHeader';\nimport { Profile } from '../types';\n\ninterface Props {\n  children: React.ReactElement<any>;\n  location: {\n    pathname: string;\n    query: { key?: string; language: string; name: string };\n  };\n  organization: string | null;\n  profiles: Profile[];\n  updateProfiles: () => Promise<void>;\n}\n\nexport default class ProfileContainer extends React.PureComponent<Props & WithRouterProps> {\n  componentDidMount() {\n    const { location, profiles, router } = this.props;\n    if (location.query.key) {\n      // try to find a quality profile with the given key\n      // if managed to find one, redirect to a new version\n      // otherwise do nothing, `render` will show not found page\n      const profile = profiles.find(profile => profile.key === location.query.key);\n      if (profile) {\n        router.replace({\n          pathname: location.pathname,\n          query: { language: profile.language, name: profile.name }\n        });\n      }\n    }\n  }\n\n  render() {\n    const { organization, profiles, location, ...other } = this.props;\n    const { key, language, name } = location.query;\n\n    if (key) {\n      // if there is a `key` parameter,\n      // then if we managed to find a quality profile with this key\n      // then we will be redirected in `componentDidMount`\n      // otherwise show `ProfileNotFound`\n      const profile = profiles.find(profile => profile.key === location.query.key);\n      return profile ? null : <ProfileNotFound organization={organization} />;\n    }\n\n    const profile = profiles.find(\n      profile => profile.language === language && profile.name === name\n    );\n\n    if (!profile) {\n      return <ProfileNotFound organization={organization} />;\n    }\n\n    const child = React.cloneElement(this.props.children, {\n      organization,\n      profile,\n      profiles,\n      ...other\n    });\n\n    return (\n      <div id=\"quality-profile\">\n        <Helmet title={profile.name} />\n        <ProfileHeader\n          organization={organization}\n          profile={profile}\n          updateProfiles={this.props.updateProfiles}\n        />\n        {child}\n      </div>\n    );\n  }\n}\n"],"sourceRoot":""}