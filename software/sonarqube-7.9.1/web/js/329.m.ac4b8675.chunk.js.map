{"version":3,"sources":["webpack:///./src/main/js/apps/organizations/components/OrganizationDelete.tsx","webpack:///./src/main/js/components/controls/Modal.tsx","webpack:///./src/main/js/components/controls/SimpleModal.tsx","webpack:///./src/main/js/components/controls/ConfirmModal.tsx","webpack:///./src/main/js/components/controls/ConfirmButton.tsx","webpack:///./src/main/js/components/controls/ModalButton.tsx","webpack:///./src/main/js/app/utils/addGlobalSuccessMessage.ts","webpack:///./node_modules/exenv/index.js","webpack:///./src/main/js/apps/organizations/actions.ts"],"names":["__webpack_require__","r","__webpack_exports__","d","OrganizationDelete","react__WEBPACK_IMPORTED_MODULE_0__","react_redux__WEBPACK_IMPORTED_MODULE_1__","_components_controls_ConfirmButton__WEBPACK_IMPORTED_MODULE_2__","_components_common_InstanceMessage__WEBPACK_IMPORTED_MODULE_3__","_helpers_l10n__WEBPACK_IMPORTED_MODULE_4__","_actions__WEBPACK_IMPORTED_MODULE_5__","_components_ui_buttons__WEBPACK_IMPORTED_MODULE_6__","_api_organizations__WEBPACK_IMPORTED_MODULE_7__","_helpers_system__WEBPACK_IMPORTED_MODULE_8__","_components_ui_Alert__WEBPACK_IMPORTED_MODULE_9__","_components_hoc_withRouter__WEBPACK_IMPORTED_MODULE_10__","_app_utils_addGlobalSuccessMessage__WEBPACK_IMPORTED_MODULE_11__","[object Object]","this","mounted","state","verify","fetchOrganizationPlanInfo","Object","props","organization","key","then","billingInfo","setState","hasPaidPlan","subscription","status","handleInput","event","currentTarget","value","isVerified","toLowerCase","name","onDelete","deleteOrganization","router","replace","pathname","confirmationMessage","title","className","message","confirmButtonText","confirmDisable","isDestructive","modalBody","variant","htmlFor","autoFocus","id","onChange","type","modalHeader","onConfirm","_ref","onClick","mapDispatchToProps","Modal","react_modal__WEBPACK_IMPORTED_MODULE_1__","classnames__WEBPACK_IMPORTED_MODULE_2__","assign","modal-small","size","modal-medium","modal-large","isOpen","overlayClassName","modal-no-backdrop","noBackdrop","SimpleModal","submitting","stopSubmitting","handleCloseClick","preventDefault","blur","onClose","handleFormSubmit","submit","handleSubmitClick","result","onSubmit","_a","children","header","modalProps","__rest","_Modal__WEBPACK_IMPORTED_MODULE_1__","contentLabel","onRequestClose","onCloseClick","onFormSubmit","onSubmitClick","ConfirmModal","_SimpleModal__WEBPACK_IMPORTED_MODULE_1__","_common_DeferredSpinner__WEBPACK_IMPORTED_MODULE_2__","_ui_buttons__WEBPACK_IMPORTED_MODULE_3__","handleSubmit","confirmData","renderModalContent","_this$props","headerDescription","_this$props$cancelBut","cancelButtonText","loading","undefined","disabled","_this$props2","ConfirmButton","renderConfirmModal","modalHeaderDescription","confirmModalProps","_ConfirmModal__WEBPACK_IMPORTED_MODULE_1__","_ModalButton__WEBPACK_IMPORTED_MODULE_2__","modal","ModalButton","handleButtonClick","handleCloseModal","addGlobalSuccessMessage","_getStore__WEBPACK_IMPORTED_MODULE_0__","_store_globalMessages__WEBPACK_IMPORTED_MODULE_1__","dispatch","__WEBPACK_AMD_DEFINE_RESULT__","canUseDOM","window","document","createElement","ExecutionEnvironment","canUseWorkers","Worker","canUseEventListeners","addEventListener","attachEvent","canUseViewport","screen","call","exports","module","updateOrganization","_api_organizations__WEBPACK_IMPORTED_MODULE_0__","_store_organizations__WEBPACK_IMPORTED_MODULE_1__","_store_globalMessages__WEBPACK_IMPORTED_MODULE_2__","_helpers_l10n__WEBPACK_IMPORTED_MODULE_3__","changes"],"mappings":"6FAAAA,EAAAC,EAAAC,GAAAF,EAAAG,EAAAD,EAAA,uCAAAE,IAAA,IAAAC,EAAAL,EAAA,KAAAM,EAAAN,EAAA,KAAAO,EAAAP,EAAA,KAAAQ,EAAAR,EAAA,KAAAS,EAAAT,EAAA,GAAAU,EAAAV,EAAA,KAAAW,EAAAX,EAAA,KAAAY,EAAAZ,EAAA,KAAAa,EAAAb,EAAA,IAAAc,EAAAd,EAAA,KAAAe,EAAAf,EAAA,KAAAgB,EAAAhB,EAAA,KAgDO,MAAMI,UAA2BC,EAAA,cAAxCY,kCACEC,KAAAC,SAAU,EACVD,KAAAE,MAAe,CAAEC,OAAQ,IAWzBH,KAAAI,0BAA4B,KACtBC,OAAAV,EAAA,aAAAU,IACFA,OAAAX,EAAA,EAAAW,CAAuBL,KAAKM,MAAMC,aAAaC,KAAKC,KAClDC,IACMV,KAAKC,SACPD,KAAKW,SAAS,CACZC,YAAiD,aAApCF,EAAYG,aAAaC,UAI5C,KACMd,KAAKC,SACPD,KAAKW,SAAS,CAAEC,aAAa,OAOvCZ,KAAAe,YAAeC,IACbhB,KAAKW,SAAS,CAAER,OAAQa,EAAMC,cAAcC,SAG9ClB,KAAAmB,WAAa,IACJnB,KAAKE,MAAMC,OAAOiB,gBAAkBpB,KAAKM,MAAMC,aAAac,KAAKD,cAG1EpB,KAAAsB,SAAW,KAAK,MACNf,EAAiBP,KAAKM,MAAtBC,aACR,OAAOP,KAAKM,MAAMiB,mBAAmBhB,EAAaC,KAAKC,KAAK,KACtDT,KAAKE,MAAMU,YACbZ,KAAKM,MAAMkB,OAAOC,QAAQ,CACxBC,SAAU,sBACVxB,MAAO,CACLyB,oBAAqBtB,OAAAd,EAAA,EAAAc,CACnB,yBACAE,EAAac,MAEfd,eACAqB,MAAOvB,OAAAd,EAAA,EAAAc,CAAU,8CAIrBA,OAAAP,EAAA,EAAAO,CAAwBA,OAAAd,EAAA,EAAAc,CAAU,yBAClCL,KAAKM,MAAMkB,OAAOC,QAAQ,SArDhC1B,oBACEC,KAAKC,SAAU,EACfD,KAAKI,4BAGPL,uBACEC,KAAKC,SAAU,EAoDjBF,SAAM,MACIa,EAAgBZ,KAAKE,MAArBU,YACR,OACEzB,EAAA,qBAAK0C,UAAU,iCACb1C,EAAA,oBAAI0C,UAAU,eAAexB,OAAAd,EAAA,EAAAc,CAAU,wBACvClB,EAAA,mBAAG0C,UAAU,8BACX1C,EAAA,cAACG,EAAA,EAAe,CAACwC,QAASzB,OAAAd,EAAA,EAAAc,CAAU,sCAEtClB,EAAA,cAACE,EAAA,EAAa,CACZ0C,kBAAmB1B,OAAAd,EAAA,EAAAc,CAAU,UAC7B2B,gBAAiBhC,KAAKmB,aACtBc,eAAe,EACfC,UACE/C,EAAA,yBACGyB,GACCzB,EAAA,cAACS,EAAA,EAAK,CAACuC,QAAQ,WACZ9B,OAAAd,EAAA,EAAAc,CAAU,kDAGflB,EAAA,uBAAIkB,OAAAd,EAAA,EAAAc,CAAU,iCACdlB,EAAA,qBAAK0C,UAAU,cACb1C,EAAA,uBAAOiD,QAAQ,+BACZ/B,OAAAd,EAAA,EAAAc,CAAU,4CAEblB,EAAA,qBAAK0C,UAAU,qBACb1C,EAAA,uBACEkD,WAAW,EACXR,UAAU,oBACVS,GAAG,8BACHC,SAAUvC,KAAKe,YACfyB,KAAK,OACLtB,MAAOlB,KAAKE,MAAMC,YAM5BsC,YAAapC,OAAAd,EAAA,EAAAc,CACX,wBACAL,KAAKM,MAAMC,aAAac,MAE1BqB,UAAW1C,KAAKsB,UACfqB,IAAA,IAAGC,EAAHD,EAAGC,QAAH,OACCzD,EAAA,cAACM,EAAA,EAAM,CAACoC,UAAU,sCAAsCe,QAASA,GAC9DvC,OAAAd,EAAA,EAAAc,CAAU,eASzB,MAAMwC,EAAsC,CAAEtB,mBAAoB/B,EAAA,GAEnDR,EAAA,QAAAqB,OAAAR,EAAA,GACbQ,OAAAjB,EAAA,QAAAiB,CACE,KACAwC,EAFFxC,CAGEnB,sCCzKJJ,EAAAG,EAAAD,EAAA,sBAAA8D,IAAA,IAAA3D,EAAAL,EAAA,KAAAiE,EAAAjE,EAAA,KAAAkE,EAAAlE,EAAA,KAmCe,SAASgE,EAAMxC,GAC5B,OACEnB,EAAA,cAAC4D,EAAU1C,OAAA4C,OAAA,CACTpB,UAAWmB,EAAW,QAAS,CAC7BE,cAA8B,UAAf5C,EAAM6C,KACrBC,eAA+B,WAAf9C,EAAM6C,KACtBE,cAA8B,UAAf/C,EAAM6C,OAEvBG,QAAQ,EACRC,iBAAkBP,EAAW,gBAAiB,CAAEQ,oBAAqBlD,EAAMmD,cACvEnD,IAtBVyC,EAAA,cAAyB,4XCiBV,MAAMW,UAAoBvE,EAAA,UAAzCY,kCACEC,KAAAC,SAAU,EACVD,KAAAE,MAAe,CAAEyD,YAAY,GAU7B3D,KAAA4D,eAAiB,KACX5D,KAAKC,SACPD,KAAKW,SAAS,CAAEgD,YAAY,KAIhC3D,KAAA6D,iBAAoB7C,IACdA,IACFA,EAAM8C,iBACN9C,EAAMC,cAAc8C,QAEtB/D,KAAKM,MAAM0D,WAGbhE,KAAAiE,iBAAoBjD,IAClBA,EAAM8C,iBACN9D,KAAKkE,UAGPlE,KAAAmE,kBAAqBnD,IACfA,IACFA,EAAM8C,iBACN9C,EAAMC,cAAc8C,QAEtB/D,KAAKkE,UAGPlE,KAAAkE,OAAS,KACP,MAAME,EAASpE,KAAKM,MAAM+D,WACtBD,IACFpE,KAAKW,SAAS,CAAEgD,YAAY,IAC5BS,EAAO3D,KAAKT,KAAK4D,eAAgB5D,KAAK4D,kBAvC1C7D,oBACEC,KAAKC,SAAU,EAGjBF,uBACEC,KAAKC,SAAU,EAsCjBF,SACQ,MAAAuE,EAAAtE,KAAAM,MAAEiE,EAAmCD,EAAnCC,SAAUC,EAAyBF,EAAzBE,OAAQR,EAAiBM,EAAjBN,QAAmBS,GAAFH,EAARD,SAAUK,EAAAJ,EAAA,6CAC7C,OACEnF,EAAA,cAACwF,EAAA,EAAKtE,OAAA4C,OAAA,CAAC2B,aAAcJ,EAAQK,eAAgBb,GAAaS,GACvDF,EAAS,CACRO,aAAc9E,KAAK6D,iBACnBkB,aAAc/E,KAAKiE,iBACnBe,cAAehF,KAAKmE,kBACpBR,WAAY3D,KAAKE,MAAMyD,kDC/FjC7E,EAAAG,EAAAD,EAAA,sBAAAiG,IAAA,IAAA9F,EAAAL,EAAA,KAAAoG,EAAApG,EAAA,KAAAqG,EAAArG,EAAA,KAAAsG,EAAAtG,EAAA,KAAAS,EAAAT,EAAA,GAyCe,MAAMmG,UAAiC9F,EAAA,cAAtDY,kCACEC,KAAAC,SAAU,EAUVD,KAAAqF,aAAe,KACb,MAAMjB,EAASpE,KAAKM,MAAMoC,UAAU1C,KAAKM,MAAMgF,aAC/C,OAAIlB,EACKA,EAAO3D,KAAKT,KAAKM,MAAM0D,QAAS,aAEvChE,KAAKM,MAAM0D,WAKfhE,KAAAuF,mBAAqB5C,IAA8D,IAA3DmC,EAA2DnC,EAA3DmC,aAAcC,EAA6CpC,EAA7CoC,aAAcpB,EAA+BhB,EAA/BgB,WAA+B,MAAA6B,EAS7ExF,KAAKM,MAPPiE,EAF+EiB,EAE/EjB,SACAxC,EAH+EyD,EAG/EzD,kBACAC,EAJ+EwD,EAI/ExD,eACAwC,EAL+EgB,EAK/EhB,OACAiB,EAN+ED,EAM/EC,kBACAxD,EAP+EuD,EAO/EvD,cAP+EyD,EAAAF,EAQ/EG,wBAR+E,IAAAD,EAQ5DrF,OAAAd,EAAA,EAAAc,CAAU,UARkDqF,EAUjF,OACEvG,EAAA,sBAAMkF,SAAUU,GACd5F,EAAA,wBAAQ0C,UAAU,cAChB1C,EAAA,wBAAKqF,GACJiB,GAEHtG,EAAA,qBAAK0C,UAAU,cAAc0C,GAC7BpF,EAAA,wBAAQ0C,UAAU,cAChB1C,EAAA,cAACgG,EAAA,EAAe,CAACtD,UAAU,eAAe+D,QAASjC,IACnDxE,EAAA,cAACiG,EAAA,EAAY,CACX/C,WAAW,EACXR,UAAWI,EAAgB,kBAAe4D,EAC1CC,SAAUnC,GAAc3B,GACvBD,GAEH5C,EAAA,cAACiG,EAAA,EAAe,CAACU,SAAUnC,EAAYf,QAASkC,GAC7Ca,MA5CX5F,oBACEC,KAAKC,SAAU,EAGjBF,uBACEC,KAAKC,SAAU,EA8CjBF,SAAM,MAAAgG,EAC0C/F,KAAKM,MAC7CmE,EAAa,CAAED,OAFjBuB,EACIvB,OACqBR,QAFzB+B,EACY/B,QACsBP,WAFlCsC,EACqBtC,WACyBN,KAF9C4C,EACiC5C,MAErC,OACEhE,EAAA,cAAC+F,EAAA,EAAW7E,OAAA4C,OAAA,CAACoB,SAAUrE,KAAKqF,cAAkBZ,GAC3CzE,KAAKuF,+YClEC,MAAMS,UAAyB7G,EAAA,cAA9CY,kCACEC,KAAAiG,mBAAqBtD,IAA4B,IAAzBqB,EAAyBrB,EAAzBqB,QAChB,MAAAM,EAAAtE,KAAAM,MAEJ4B,GAEsBoC,EAHtBC,SAGsBD,EAFtBpC,WACAO,EACsB6B,EADtB7B,YACAyD,EAAsB5B,EAAtB4B,uBACAC,EAAAzB,EAAAJ,EAAA,iEAEF,OACEnF,EAAA,cAACiH,EAAA,EAAY/F,OAAA4C,OAAA,CACXuB,OAAQ/B,EACRgD,kBAAmBS,EACnBlC,QAASA,GACLmC,GACHjE,IAKPnC,SACE,OAAOZ,EAAA,cAACkH,EAAA,EAAW,CAACC,MAAOtG,KAAKiG,oBAAqBjG,KAAKM,MAAMiE,8CCvDpEzF,EAAAG,EAAAD,EAAA,sBAAAuH,IAAA,IAAApH,EAAAL,EAAA,KAuCe,MAAMyH,UAAoBpH,EAAA,cAAzCY,kCACEC,KAAAC,SAAU,EACVD,KAAAE,MAAe,CAAEoG,OAAO,GAUxBtG,KAAAwG,kBAAoB,KAClBxG,KAAKW,SAAS,CAAE2F,OAAO,KAGzBtG,KAAAiE,iBAAoBjD,IACdA,GACFA,EAAM8C,iBAER9D,KAAKW,SAAS,CAAE2F,OAAO,KAGzBtG,KAAAyG,iBAAmB,KACbzG,KAAKC,SACPD,KAAKW,SAAS,CAAE2F,OAAO,KArB3BvG,oBACEC,KAAKC,SAAU,EAGjBF,uBACEC,KAAKC,SAAU,EAoBjBF,SACE,OACEZ,EAAA,cAAAA,EAAA,cACGa,KAAKM,MAAMiE,SAAS,CACnB3B,QAAS5C,KAAKwG,kBACdzB,aAAc/E,KAAKiE,mBAEpBjE,KAAKE,MAAMoG,OAAStG,KAAKM,MAAMgG,MAAM,CAAEtC,QAAShE,KAAKyG,wDC3E9D3H,EAAAG,EAAAD,EAAA,sBAAA0H,IAAA,IAAAC,EAAA7H,EAAA,KAAA8H,EAAA9H,EAAA,KAsBe,SAAS4H,EAAwB5E,GAChCzB,OAAAsG,EAAA,QAAAtG,GACRwG,SAASD,EAAA,EAAuC9E,0BCxBxD,IAAAgF;;;;;;;;;;;CAOA,WACA,aAEA,IAAAC,IACA,oBAAAC,SACAA,OAAAC,WACAD,OAAAC,SAAAC,eAGAC,EAAA,CAEAJ,YAEAK,cAAA,oBAAAC,OAEAC,qBACAP,MAAAC,OAAAO,mBAAAP,OAAAQ,aAEAC,eAAAV,KAAAC,OAAAU,aAOG7B,KAFDiB,EAAA,WACF,OAAAK,GACGQ,KAAAC,EAAA9I,EAAA8I,EAAAC,QAAAD,QAAAd,GAzBH,qCCaAhI,EAAAG,EAAAD,EAAA,sBAAA8I,IAAAhJ,EAAAG,EAAAD,EAAA,sBAAAuC,IAAA,IAAAwG,EAAAjJ,EAAA,KAAAkJ,EAAAlJ,EAAA,KAAAmJ,EAAAnJ,EAAA,KAAAoJ,EAAApJ,EAAA,GAKO,SAASgJ,EAAmBtH,EAAa2H,GAC9C,OAAQtB,GACCkB,EAAA,EAAuBvH,EAAK2H,GAAS1H,KAAK,KAC/CoG,EAASmB,EAAA,EAA2BxH,EAAK2H,IACzCtB,EAASxG,OAAA4H,EAAA,EAAA5H,CAAwBA,OAAA6H,EAAA,EAAA7H,CAAU,4BAK1C,SAASkB,EAAmBf,GACjC,OAAQqG,GACCkB,EAAA,EAAuBvH,GAAKC,KAAK,KACtCoG,EAASmB,EAAA,EAA2BxH","file":"js/329.m.ac4b8675.chunk.js","sourcesContent":["/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { connect } from 'react-redux';\nimport ConfirmButton from '../../../components/controls/ConfirmButton';\nimport InstanceMessage from '../../../components/common/InstanceMessage';\nimport { translate, translateWithParameters } from '../../../helpers/l10n';\nimport { deleteOrganization } from '../actions';\nimport { Button } from '../../../components/ui/buttons';\nimport { getOrganizationBilling } from '../../../api/organizations';\nimport { isSonarCloud } from '../../../helpers/system';\nimport { Alert } from '../../../components/ui/Alert';\nimport { withRouter, Router } from '../../../components/hoc/withRouter';\nimport addGlobalSuccessMessage from '../../../app/utils/addGlobalSuccessMessage';\n\ninterface DispatchToProps {\n  deleteOrganization: (key: string) => Promise<void>;\n}\n\ninterface OwnProps {\n  organization: Pick<T.Organization, 'key' | 'name'>;\n  router: Pick<Router, 'replace'>;\n}\n\ntype Props = OwnProps & DispatchToProps;\n\ninterface State {\n  hasPaidPlan?: boolean;\n  verify: string;\n}\n\nexport class OrganizationDelete extends React.PureComponent<Props, State> {\n  mounted = false;\n  state: State = { verify: '' };\n\n  componentDidMount() {\n    this.mounted = true;\n    this.fetchOrganizationPlanInfo();\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  fetchOrganizationPlanInfo = () => {\n    if (isSonarCloud()) {\n      getOrganizationBilling(this.props.organization.key).then(\n        billingInfo => {\n          if (this.mounted) {\n            this.setState({\n              hasPaidPlan: billingInfo.subscription.status !== 'inactive'\n            });\n          }\n        },\n        () => {\n          if (this.mounted) {\n            this.setState({ hasPaidPlan: false });\n          }\n        }\n      );\n    }\n  };\n\n  handleInput = (event: React.ChangeEvent<HTMLInputElement>) => {\n    this.setState({ verify: event.currentTarget.value });\n  };\n\n  isVerified = () => {\n    return this.state.verify.toLowerCase() === this.props.organization.name.toLowerCase();\n  };\n\n  onDelete = () => {\n    const { organization } = this.props;\n    return this.props.deleteOrganization(organization.key).then(() => {\n      if (this.state.hasPaidPlan) {\n        this.props.router.replace({\n          pathname: '/feedback/downgrade',\n          state: {\n            confirmationMessage: translateWithParameters(\n              'organization.deleted_x',\n              organization.name\n            ),\n            organization,\n            title: translate('billing.downgrade.reason.title_deleted')\n          }\n        });\n      } else {\n        addGlobalSuccessMessage(translate('organization.deleted'));\n        this.props.router.replace('/');\n      }\n    });\n  };\n\n  render() {\n    const { hasPaidPlan } = this.state;\n    return (\n      <div className=\"boxed-group boxed-group-inner\">\n        <h2 className=\"boxed-title\">{translate('organization.delete')}</h2>\n        <p className=\"big-spacer-bottom width-50\">\n          <InstanceMessage message={translate('organization.delete.description')} />\n        </p>\n        <ConfirmButton\n          confirmButtonText={translate('delete')}\n          confirmDisable={!this.isVerified()}\n          isDestructive={true}\n          modalBody={\n            <div>\n              {hasPaidPlan && (\n                <Alert variant=\"warning\">\n                  {translate('organization.delete.sonarcloud.paid_plan_info')}\n                </Alert>\n              )}\n              <p>{translate('organization.delete.question')}</p>\n              <div className=\"spacer-top\">\n                <label htmlFor=\"downgrade-organization-name\">\n                  {translate('billing.downgrade.modal.type_to_proceed')}\n                </label>\n                <div className=\"little-spacer-top\">\n                  <input\n                    autoFocus={true}\n                    className=\"input-super-large\"\n                    id=\"downgrade-organization-name\"\n                    onChange={this.handleInput}\n                    type=\"text\"\n                    value={this.state.verify}\n                  />\n                </div>\n              </div>\n            </div>\n          }\n          modalHeader={translateWithParameters(\n            'organization.delete_x',\n            this.props.organization.name\n          )}\n          onConfirm={this.onDelete}>\n          {({ onClick }) => (\n            <Button className=\"js-custom-measure-delete button-red\" onClick={onClick}>\n              {translate('delete')}\n            </Button>\n          )}\n        </ConfirmButton>\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps: DispatchToProps = { deleteOrganization: deleteOrganization as any };\n\nexport default withRouter(\n  connect(\n    null,\n    mapDispatchToProps\n  )(OrganizationDelete)\n);\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport * as ReactModal from 'react-modal';\nimport * as classNames from 'classnames';\n\nReactModal.setAppElement('#content');\n\nexport interface ModalProps {\n  children: React.ReactNode;\n  size?: 'small' | 'medium' | 'large';\n  noBackdrop?: boolean;\n}\n\ntype MandatoryProps = Pick<ReactModal.Props, 'contentLabel'>;\n\ntype Props = Partial<ReactModal.Props> & MandatoryProps & ModalProps;\n\nexport default function Modal(props: Props) {\n  return (\n    <ReactModal\n      className={classNames('modal', {\n        'modal-small': props.size === 'small',\n        'modal-medium': props.size === 'medium',\n        'modal-large': props.size === 'large'\n      })}\n      isOpen={true}\n      overlayClassName={classNames('modal-overlay', { 'modal-no-backdrop': props.noBackdrop })}\n      {...props}\n    />\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport Modal, { ModalProps } from './Modal';\n\nexport interface ChildrenProps {\n  onCloseClick: (event?: React.SyntheticEvent<HTMLElement>) => void;\n  onFormSubmit: (event: React.SyntheticEvent<HTMLFormElement>) => void;\n  onSubmitClick: (event?: React.SyntheticEvent<HTMLElement>) => void;\n  submitting: boolean;\n}\n\ninterface Props extends ModalProps {\n  children: (props: ChildrenProps) => React.ReactNode;\n  header: string;\n  onClose: () => void;\n  onSubmit: () => void | Promise<void>;\n}\n\ninterface State {\n  submitting: boolean;\n}\n\nexport default class SimpleModal extends React.Component<Props, State> {\n  mounted = false;\n  state: State = { submitting: false };\n\n  componentDidMount() {\n    this.mounted = true;\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  stopSubmitting = () => {\n    if (this.mounted) {\n      this.setState({ submitting: false });\n    }\n  };\n\n  handleCloseClick = (event?: React.SyntheticEvent<HTMLElement>) => {\n    if (event) {\n      event.preventDefault();\n      event.currentTarget.blur();\n    }\n    this.props.onClose();\n  };\n\n  handleFormSubmit = (event: React.SyntheticEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    this.submit();\n  };\n\n  handleSubmitClick = (event?: React.SyntheticEvent<HTMLElement>) => {\n    if (event) {\n      event.preventDefault();\n      event.currentTarget.blur();\n    }\n    this.submit();\n  };\n\n  submit = () => {\n    const result = this.props.onSubmit();\n    if (result) {\n      this.setState({ submitting: true });\n      result.then(this.stopSubmitting, this.stopSubmitting);\n    }\n  };\n\n  render() {\n    const { children, header, onClose, onSubmit, ...modalProps } = this.props;\n    return (\n      <Modal contentLabel={header} onRequestClose={onClose} {...modalProps}>\n        {children({\n          onCloseClick: this.handleCloseClick,\n          onFormSubmit: this.handleFormSubmit,\n          onSubmitClick: this.handleSubmitClick,\n          submitting: this.state.submitting\n        })}\n      </Modal>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { ModalProps } from './Modal';\nimport SimpleModal, { ChildrenProps } from './SimpleModal';\nimport DeferredSpinner from '../common/DeferredSpinner';\nimport { SubmitButton, ResetButtonLink } from '../ui/buttons';\nimport { translate } from '../../helpers/l10n';\n\nexport interface ConfirmModalProps<T> extends ModalProps {\n  cancelButtonText?: string;\n  confirmButtonText: string;\n  confirmData?: T;\n  confirmDisable?: boolean;\n  isDestructive?: boolean;\n  onConfirm: (data?: T) => void | Promise<void | Response>;\n}\n\ninterface Props<T> extends ConfirmModalProps<T> {\n  header: string;\n  headerDescription?: React.ReactNode;\n  onClose: () => void;\n}\n\nexport default class ConfirmModal<T = string> extends React.PureComponent<Props<T>> {\n  mounted = false;\n\n  componentDidMount() {\n    this.mounted = true;\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  handleSubmit = () => {\n    const result = this.props.onConfirm(this.props.confirmData);\n    if (result) {\n      return result.then(this.props.onClose, () => {});\n    } else {\n      this.props.onClose();\n      return undefined;\n    }\n  };\n\n  renderModalContent = ({ onCloseClick, onFormSubmit, submitting }: ChildrenProps) => {\n    const {\n      children,\n      confirmButtonText,\n      confirmDisable,\n      header,\n      headerDescription,\n      isDestructive,\n      cancelButtonText = translate('cancel')\n    } = this.props;\n    return (\n      <form onSubmit={onFormSubmit}>\n        <header className=\"modal-head\">\n          <h2>{header}</h2>\n          {headerDescription}\n        </header>\n        <div className=\"modal-body\">{children}</div>\n        <footer className=\"modal-foot\">\n          <DeferredSpinner className=\"spacer-right\" loading={submitting} />\n          <SubmitButton\n            autoFocus={true}\n            className={isDestructive ? 'button-red' : undefined}\n            disabled={submitting || confirmDisable}>\n            {confirmButtonText}\n          </SubmitButton>\n          <ResetButtonLink disabled={submitting} onClick={onCloseClick}>\n            {cancelButtonText}\n          </ResetButtonLink>\n        </footer>\n      </form>\n    );\n  };\n\n  render() {\n    const { header, onClose, noBackdrop, size } = this.props;\n    const modalProps = { header, onClose, noBackdrop, size };\n    return (\n      <SimpleModal onSubmit={this.handleSubmit} {...modalProps}>\n        {this.renderModalContent}\n      </SimpleModal>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport ConfirmModal, { ConfirmModalProps } from './ConfirmModal';\nimport ModalButton, { ChildrenProps, ModalProps } from './ModalButton';\n\ninterface Props<T> extends ConfirmModalProps<T> {\n  children: (props: ChildrenProps) => React.ReactNode;\n  modalBody: React.ReactNode;\n  modalHeader: string;\n  modalHeaderDescription?: React.ReactNode;\n}\n\ninterface State {\n  modal: boolean;\n}\n\nexport default class ConfirmButton<T> extends React.PureComponent<Props<T>, State> {\n  renderConfirmModal = ({ onClose }: ModalProps) => {\n    const {\n      children,\n      modalBody,\n      modalHeader,\n      modalHeaderDescription,\n      ...confirmModalProps\n    } = this.props;\n    return (\n      <ConfirmModal\n        header={modalHeader}\n        headerDescription={modalHeaderDescription}\n        onClose={onClose}\n        {...confirmModalProps}>\n        {modalBody}\n      </ConfirmModal>\n    );\n  };\n\n  render() {\n    return <ModalButton modal={this.renderConfirmModal}>{this.props.children}</ModalButton>;\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\n\nexport interface ChildrenProps {\n  onClick: () => void;\n  onFormSubmit: (event: React.FormEvent<HTMLFormElement>) => void;\n}\n\nexport interface ModalProps {\n  onClose: () => void;\n}\n\nexport interface Props {\n  children: (props: ChildrenProps) => React.ReactNode;\n  modal: (props: ModalProps) => React.ReactNode;\n}\n\ninterface State {\n  modal: boolean;\n}\n\nexport default class ModalButton extends React.PureComponent<Props, State> {\n  mounted = false;\n  state: State = { modal: false };\n\n  componentDidMount() {\n    this.mounted = true;\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  handleButtonClick = () => {\n    this.setState({ modal: true });\n  };\n\n  handleFormSubmit = (event?: React.FormEvent<HTMLFormElement>) => {\n    if (event) {\n      event.preventDefault();\n    }\n    this.setState({ modal: true });\n  };\n\n  handleCloseModal = () => {\n    if (this.mounted) {\n      this.setState({ modal: false });\n    }\n  };\n\n  render() {\n    return (\n      <>\n        {this.props.children({\n          onClick: this.handleButtonClick,\n          onFormSubmit: this.handleFormSubmit\n        })}\n        {this.state.modal && this.props.modal({ onClose: this.handleCloseModal })}\n      </>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport getStore from './getStore';\nimport * as globalMessages from '../../store/globalMessages';\n\nexport default function addGlobalSuccessMessage(message: string): void {\n  const store = getStore();\n  store.dispatch(globalMessages.addGlobalSuccessMessage(message));\n}\n","/*!\n  Copyright (c) 2015 Jed Watson.\n  Based on code that is Copyright 2013-2015, Facebook, Inc.\n  All rights reserved.\n*/\n/* global define */\n\n(function () {\n\t'use strict';\n\n\tvar canUseDOM = !!(\n\t\ttypeof window !== 'undefined' &&\n\t\twindow.document &&\n\t\twindow.document.createElement\n\t);\n\n\tvar ExecutionEnvironment = {\n\n\t\tcanUseDOM: canUseDOM,\n\n\t\tcanUseWorkers: typeof Worker !== 'undefined',\n\n\t\tcanUseEventListeners:\n\t\t\tcanUseDOM && !!(window.addEventListener || window.attachEvent),\n\n\t\tcanUseViewport: canUseDOM && !!window.screen\n\n\t};\n\n\tif (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\n\t\tdefine(function () {\n\t\t\treturn ExecutionEnvironment;\n\t\t});\n\t} else if (typeof module !== 'undefined' && module.exports) {\n\t\tmodule.exports = ExecutionEnvironment;\n\t} else {\n\t\twindow.ExecutionEnvironment = ExecutionEnvironment;\n\t}\n\n}());\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { Dispatch } from 'redux';\nimport * as api from '../../api/organizations';\nimport * as actions from '../../store/organizations';\nimport { addGlobalSuccessMessage } from '../../store/globalMessages';\nimport { translate } from '../../helpers/l10n';\n\nexport function updateOrganization(key: string, changes: T.OrganizationBase) {\n  return (dispatch: Dispatch<any>) => {\n    return api.updateOrganization(key, changes).then(() => {\n      dispatch(actions.updateOrganization(key, changes));\n      dispatch(addGlobalSuccessMessage(translate('organization.updated')));\n    });\n  };\n}\n\nexport function deleteOrganization(key: string) {\n  return (dispatch: Dispatch<any>) => {\n    return api.deleteOrganization(key).then(() => {\n      dispatch(actions.deleteOrganization(key));\n    });\n  };\n}\n"],"sourceRoot":""}