{"version":3,"sources":["webpack:///./src/main/js/apps/maintenance/components/SetupAppContainer.tsx","webpack:///./src/main/js/components/intl/DateFromNow.tsx","webpack:///./src/main/js/api/system.ts","webpack:///./src/main/js/components/intl/TimeFormatter.tsx","webpack:///./src/main/js/apps/maintenance/components/App.tsx","webpack:///./src/main/js/apps/maintenance/styles.css?fea4","webpack:///./src/main/js/apps/maintenance/styles.css"],"names":["__webpack_require__","r","__webpack_exports__","d","MaintenanceAppContainer","react__WEBPACK_IMPORTED_MODULE_0__","_App__WEBPACK_IMPORTED_MODULE_1__","props","Object","assign","setup","DateFromNow","react_intl__WEBPACK_IMPORTED_MODULE_1__","_helpers_dates__WEBPACK_IMPORTED_MODULE_2__","_ref","children","date","value","setLogLevel","getSystemInfo","getSystemStatus","getSystemUpgrades","getMigrationStatus","migrateDatabase","restart","waitSystemUPStatus","_helpers_request__WEBPACK_IMPORTED_MODULE_0__","_app_utils_throwGlobalError__WEBPACK_IMPORTED_MODULE_1__","level","catch","max","slowThreshold","status","TimeFormatter","formatterOption","hour","minute","longFormatterOption","second","long","App","react_helmet__WEBPACK_IMPORTED_MODULE_1__","react_helmet__WEBPACK_IMPORTED_MODULE_1___default","n","react_intl__WEBPACK_IMPORTED_MODULE_2__","classnames__WEBPACK_IMPORTED_MODULE_3__","_api_system__WEBPACK_IMPORTED_MODULE_4__","_components_intl_DateFromNow__WEBPACK_IMPORTED_MODULE_5__","_components_intl_TimeFormatter__WEBPACK_IMPORTED_MODULE_6__","_components_ui_buttons__WEBPACK_IMPORTED_MODULE_7__","_helpers_l10n__WEBPACK_IMPORTED_MODULE_8__","_components_common_InstanceMessage__WEBPACK_IMPORTED_MODULE_9__","_helpers_urls__WEBPACK_IMPORTED_MODULE_10__","_helpers_system__WEBPACK_IMPORTED_MODULE_11__","[object Object]","this","mounted","state","fetchStatus","fetchMigrationState","fetchSystemStatus","setState","message","undefined","startedAt","then","wasStarting","scheduleRefresh","loadPreviousPage","_ref2","interval","window","setTimeout","setInterval","location","href","handleMigrateClick","_ref3","clearInterval","_this$state","a","defaultTitle","className","id","panel-warning","defaultMessage","values","link","onClick","content","module","i","options","hmr","transform","insertInto","locals","exports","push"],"mappings":"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","file":"js/334.m.56cc37c7.chunk.js","sourcesContent":["/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport App from './App';\n\ninterface Props {\n  location: { query: { return_to: string } };\n}\n\nexport default function MaintenanceAppContainer(props: Props) {\n  return <App setup={true} {...props} />;\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { DateSource, FormattedRelative } from 'react-intl';\nimport { parseDate } from '../../helpers/dates';\n\ninterface Props {\n  children?: (formattedDate: string) => React.ReactNode;\n  date: DateSource;\n}\n\nexport default function DateFromNow({ children, date }: Props) {\n  return <FormattedRelative value={parseDate(date)}>{children}</FormattedRelative>;\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { getJSON, post, postJSON, requestTryAndRepeatUntil } from '../helpers/request';\nimport throwGlobalError from '../app/utils/throwGlobalError';\n\nexport function setLogLevel(level: string): Promise<void | Response> {\n  return post('/api/system/change_log_level', { level }).catch(throwGlobalError);\n}\n\nexport function getSystemInfo(): Promise<T.SysInfoCluster | T.SysInfoStandalone> {\n  return getJSON('/api/system/info').catch(throwGlobalError);\n}\n\nexport function getSystemStatus(): Promise<{ id: string; version: string; status: T.SysStatus }> {\n  return getJSON('/api/system/status');\n}\n\nexport function getSystemUpgrades(): Promise<{\n  upgrades: T.SystemUpgrade[];\n  updateCenterRefresh: string;\n}> {\n  return getJSON('/api/system/upgrades');\n}\n\nexport function getMigrationStatus(): Promise<{\n  message?: string;\n  startedAt?: string;\n  state: string;\n}> {\n  return getJSON('/api/system/db_migration_status');\n}\n\nexport function migrateDatabase(): Promise<{\n  message?: string;\n  startedAt?: string;\n  state: string;\n}> {\n  return postJSON('/api/system/migrate_db');\n}\n\nexport function restart(): Promise<void | Response> {\n  return post('/api/system/restart').catch(throwGlobalError);\n}\n\nexport function waitSystemUPStatus(): Promise<{\n  id: string;\n  version: string;\n  status: T.SysStatus;\n}> {\n  return requestTryAndRepeatUntil(\n    getSystemStatus,\n    { max: -1, slowThreshold: -15 },\n    ({ status }) => status === 'UP'\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { DateSource, FormattedTime } from 'react-intl';\nimport { parseDate } from '../../helpers/dates';\n\ninterface Props {\n  children?: (formattedDate: string) => React.ReactNode;\n  date: DateSource;\n  long?: boolean;\n}\n\nexport const formatterOption = { hour: 'numeric', minute: 'numeric' };\n\nexport const longFormatterOption = { hour: 'numeric', minute: 'numeric', second: 'numeric' };\n\nexport default function TimeFormatter({ children, date, long }: Props) {\n  return (\n    <FormattedTime value={parseDate(date)} {...(long ? longFormatterOption : formatterOption)}>\n      {children}\n    </FormattedTime>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport Helmet from 'react-helmet';\nimport { FormattedMessage } from 'react-intl';\nimport * as classNames from 'classnames';\nimport { getMigrationStatus, getSystemStatus, migrateDatabase } from '../../../api/system';\nimport DateFromNow from '../../../components/intl/DateFromNow';\nimport TimeFormatter from '../../../components/intl/TimeFormatter';\nimport { Button } from '../../../components/ui/buttons';\nimport { translate } from '../../../helpers/l10n';\nimport InstanceMessage from '../../../components/common/InstanceMessage';\nimport { getBaseUrl, getReturnUrl } from '../../../helpers/urls';\nimport { isSonarCloud } from '../../../helpers/system';\nimport '../styles.css';\n\ninterface Props {\n  location: { query: { return_to?: string } };\n  setup: boolean;\n}\n\ninterface State {\n  message?: string;\n  startedAt?: string;\n  state?: string;\n  status?: string;\n  wasStarting?: boolean;\n}\n\nexport default class App extends React.PureComponent<Props, State> {\n  interval?: number;\n  mounted = false;\n  state: State = {};\n\n  componentDidMount() {\n    this.mounted = true;\n    this.fetchStatus();\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n    if (this.interval) {\n      window.clearInterval(this.interval);\n    }\n  }\n\n  fetchStatus = () => {\n    const request = this.props.setup ? this.fetchMigrationState() : this.fetchSystemStatus();\n    request.catch(() => {\n      if (this.mounted) {\n        this.setState({\n          message: undefined,\n          startedAt: undefined,\n          state: undefined,\n          status: 'OFFLINE'\n        });\n      }\n    });\n  };\n\n  fetchSystemStatus = () => {\n    return getSystemStatus().then(({ status }) => {\n      if (this.mounted) {\n        this.setState({ status });\n\n        if (status === 'STARTING') {\n          this.setState({ wasStarting: true });\n          this.scheduleRefresh();\n        } else if (status === 'UP') {\n          if (this.state.wasStarting) {\n            this.loadPreviousPage();\n          }\n        } else {\n          this.scheduleRefresh();\n        }\n      }\n    });\n  };\n\n  fetchMigrationState = () => {\n    return getMigrationStatus().then(({ message, startedAt, state }) => {\n      if (this.mounted) {\n        this.setState({ message, startedAt, state });\n        if (state === 'MIGRATION_SUCCEEDED') {\n          this.loadPreviousPage();\n        } else if (state !== 'NO_MIGRATION') {\n          this.scheduleRefresh();\n        }\n      }\n    });\n  };\n\n  scheduleRefresh = () => {\n    this.interval = window.setTimeout(this.fetchStatus, 5000);\n  };\n\n  loadPreviousPage = () => {\n    setInterval(() => {\n      window.location.href = getReturnUrl(this.props.location);\n    }, 2500);\n  };\n\n  handleMigrateClick = () => {\n    migrateDatabase().then(\n      ({ message, startedAt, state }) => {\n        if (this.mounted) {\n          this.setState({ message, startedAt, state });\n        }\n      },\n      () => {}\n    );\n  };\n\n  render() {\n    const { state, status } = this.state;\n\n    return (\n      <>\n        <Helmet defaultTitle={translate('maintenance.page')} />\n        <div className=\"page-wrapper-simple\" id=\"bd\">\n          <div\n            className={classNames('page-simple', {\n              'panel-warning': state === 'MIGRATION_REQUIRED'\n            })}\n            id=\"nonav\">\n            {status === 'OFFLINE' && (\n              <>\n                <h1 className=\"maintenance-title text-danger\">\n                  <InstanceMessage message={translate('maintenance.is_offline')} />\n                </h1>\n                {!isSonarCloud() && (\n                  <p className=\"maintenance-text\">\n                    {translate('maintenance.sonarqube_is_offline.text')}\n                  </p>\n                )}\n                <p className=\"maintenance-text text-center\">\n                  <a href={getBaseUrl() + '/'}>{translate('maintenance.try_again')}</a>\n                </p>\n              </>\n            )}\n\n            {status === 'UP' && (\n              <>\n                <h1 className=\"maintenance-title\">\n                  <InstanceMessage message={translate('maintenance.is_up')} />\n                </h1>\n                <p className=\"maintenance-text text-center\">\n                  {translate('maintenance.all_systems_opetational')}\n                </p>\n                <p className=\"maintenance-text text-center\">\n                  <a href={getBaseUrl() + '/'}>{translate('layout.home')}</a>\n                </p>\n              </>\n            )}\n\n            {status === 'STARTING' && (\n              <>\n                <h1 className=\"maintenance-title\">\n                  <InstanceMessage message={translate('maintenance.is_starting')} />\n                </h1>\n                <p className=\"maintenance-spinner\">\n                  <i className=\"spinner\" />\n                </p>\n              </>\n            )}\n\n            {status === 'DOWN' && (\n              <>\n                <h1 className=\"maintenance-title text-danger\">\n                  <InstanceMessage message={translate('maintenance.is_down')} />\n                </h1>\n                <p className=\"maintenance-text\">\n                  {translate('maintenance.sonarqube_is_down.text')}\n                </p>\n                <p className=\"maintenance-text text-center\">\n                  <a href={getBaseUrl() + '/'}>{translate('maintenance.try_again')}</a>\n                </p>\n              </>\n            )}\n\n            {(status === 'DB_MIGRATION_NEEDED' || status === 'DB_MIGRATION_RUNNING') && (\n              <>\n                <h1 className=\"maintenance-title\">\n                  <InstanceMessage message={translate('maintenance.is_under_maintenance')} />\n                </h1>\n                {!isSonarCloud() && (\n                  <>\n                    <p className=\"maintenance-text\">\n                      <FormattedMessage\n                        defaultMessage={translate('maintenance.sonarqube_is_under_maintenance.1')}\n                        id=\"maintenance.sonarqube_is_under_maintenance.1\"\n                        values={{\n                          link: (\n                            <a href=\"https://redirect.sonarsource.com/doc/plugin-library.html\">\n                              {translate('maintenance.sonarqube_is_under_maintenance_link.1')}\n                            </a>\n                          )\n                        }}\n                      />\n                    </p>\n                    <p className=\"maintenance-text\">\n                      <FormattedMessage\n                        defaultMessage={translate('maintenance.sonarqube_is_under_maintenance.2')}\n                        id=\"maintenance.sonarqube_is_under_maintenance.2\"\n                        values={{\n                          link: (\n                            <a href=\"https://redirect.sonarsource.com/doc/upgrading.html\">\n                              {translate('maintenance.sonarqube_is_under_maintenance_link.2')}\n                            </a>\n                          )\n                        }}\n                      />\n                    </p>\n                  </>\n                )}\n              </>\n            )}\n\n            {state === 'NO_MIGRATION' && (\n              <>\n                <h1 className=\"maintenance-title\">\n                  {translate('maintenance.database_is_up_to_date')}\n                </h1>\n                <p className=\"maintenance-text text-center\">\n                  <a href={getBaseUrl() + '/'}>{translate('layout.home')}</a>\n                </p>\n              </>\n            )}\n\n            {state === 'MIGRATION_REQUIRED' && (\n              <>\n                <h1 className=\"maintenance-title\">{translate('maintenance.upgrade_database')}</h1>\n                <p className=\"maintenance-text\">{translate('maintenance.upgrade_database.1')}</p>\n                <p className=\"maintenance-text\">{translate('maintenance.upgrade_database.2')}</p>\n                <p className=\"maintenance-text\">{translate('maintenance.upgrade_database.3')}</p>\n                <div className=\"maintenance-spinner\">\n                  <Button id=\"start-migration\" onClick={this.handleMigrateClick}>\n                    {translate('maintenance.upgrade')}\n                  </Button>\n                </div>\n              </>\n            )}\n\n            {state === 'NOT_SUPPORTED' && (\n              <>\n                <h1 className=\"maintenance-title text-danger\">\n                  {translate('maintenance.migration_not_supported')}\n                </h1>\n                <p>{translate('maintenance.migration_not_supported.text')}</p>\n              </>\n            )}\n\n            {state === 'MIGRATION_RUNNING' && (\n              <>\n                <h1 className=\"maintenance-title\">{translate('maintenance.database_migration')}</h1>\n                {this.state.message && (\n                  <p className=\"maintenance-text text-center\">{this.state.message}</p>\n                )}\n                {this.state.startedAt && (\n                  <p className=\"maintenance-text text-center\">\n                    {translate('background_tasks.table.started')}{' '}\n                    <DateFromNow date={this.state.startedAt} />\n                    <br />\n                    <small className=\"text-muted\">\n                      <TimeFormatter date={this.state.startedAt} long={true} />\n                    </small>\n                  </p>\n                )}\n                <p className=\"maintenance-spinner\">\n                  <i className=\"spinner\" />\n                </p>\n              </>\n            )}\n\n            {state === 'MIGRATION_SUCCEEDED' && (\n              <>\n                <h1 className=\"maintenance-title text-success\">\n                  {translate('maintenance.database_is_up_to_date')}\n                </h1>\n                <p className=\"maintenance-text text-center\">\n                  <a href={getBaseUrl() + '/'}>{translate('layout.home')}</a>\n                </p>\n              </>\n            )}\n\n            {state === 'MIGRATION_FAILED' && (\n              <>\n                <h1 className=\"maintenance-title text-danger\">\n                  {translate('maintenance.upgrade_failed')}\n                </h1>\n                <p className=\"maintenance-text\">{translate('maintenance.upgrade_failed.text')}</p>\n              </>\n            )}\n          </div>\n        </div>\n      </>\n    );\n  }\n}\n","\nvar content = require(\"!!../../../../../node_modules/css-loader/dist/cjs.js??ref--6-1!../../../../../node_modules/postcss-loader/src/index.js??postcss!./styles.css\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../../../node_modules/css-loader/dist/cjs.js??ref--6-1!../../../../../node_modules/postcss-loader/src/index.js??postcss!./styles.css\", function() {\n\t\tvar newContent = require(\"!!../../../../../node_modules/css-loader/dist/cjs.js??ref--6-1!../../../../../node_modules/postcss-loader/src/index.js??postcss!./styles.css\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","exports = module.exports = require(\"../../../../../node_modules/css-loader/dist/runtime/api.js\")(false);\n// Module\nexports.push([module.id, \".maintenance-title{margin-bottom:40px;line-height:1.5;font-size:24px;font-weight:300;text-align:center}.maintenance-text{margin-bottom:16px;line-height:1.5;font-size:16px;font-weight:300}.maintenance-spinner{margin-top:40px;text-align:center}\", \"\"]);\n\n"],"sourceRoot":""}