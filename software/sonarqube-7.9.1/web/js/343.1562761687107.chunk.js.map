{"version":3,"sources":["webpack:///./src/main/js/apps/projectKey/UpdateForm.tsx","webpack:///./src/main/js/apps/projectKey/Key.tsx","webpack:///./src/main/js/components/controls/Modal.tsx","webpack:///./src/main/js/components/controls/SimpleModal.tsx","webpack:///./src/main/js/components/controls/ConfirmModal.tsx","webpack:///./src/main/js/components/controls/ConfirmButton.tsx","webpack:///./src/main/js/components/controls/ModalButton.tsx"],"names":["_super","UpdateForm","_this","apply","this","arguments","state","handleChange","event","newKey","currentTarget","value","setState","handleReset","undefined","__extends","prototype","render","component","props","key","hasChanged","index_js_exposed","ConfirmButton","confirmButtonText","Object","l10n","confirmData","modalBody","name","className","modalHeader","onConfirm","onKeyChange","_a","onFormSubmit","onSubmit","id","onChange","placeholder","required","type","buttons","disabled","onClick","Key_Key","Key","handleChangeKey","components","from","to","then","RecentHistory","remove","router","replace","pathname","query","Key_extends","Helmet_default","a","title","projectKey_UpdateForm","__webpack_exports__","es","Modal","react__WEBPACK_IMPORTED_MODULE_0__","react_modal__WEBPACK_IMPORTED_MODULE_1__","__assign","classnames__WEBPACK_IMPORTED_MODULE_2__","modal-small","size","modal-medium","modal-large","isOpen","overlayClassName","modal-no-backdrop","noBackdrop","SimpleModal","mounted","submitting","stopSubmitting","handleCloseClick","preventDefault","blur","onClose","handleFormSubmit","submit","handleSubmitClick","result","componentDidMount","componentWillUnmount","children","header","modalProps","__rest","_Modal__WEBPACK_IMPORTED_MODULE_1__","contentLabel","onRequestClose","onCloseClick","onSubmitClick","ConfirmModal","handleSubmit","renderModalContent","_b","confirmDisable","headerDescription","isDestructive","_c","cancelButtonText","_helpers_l10n__WEBPACK_IMPORTED_MODULE_4__","_common_DeferredSpinner__WEBPACK_IMPORTED_MODULE_2__","loading","_ui_buttons__WEBPACK_IMPORTED_MODULE_3__","autoFocus","_SimpleModal__WEBPACK_IMPORTED_MODULE_1__","renderConfirmModal","modalHeaderDescription","confirmModalProps","_ConfirmModal__WEBPACK_IMPORTED_MODULE_1__","_ModalButton__WEBPACK_IMPORTED_MODULE_2__","modal","ModalButton","handleButtonClick","handleCloseModal"],"mappings":"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","file":"js/343.1562761687107.chunk.js","sourcesContent":["/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { Button, SubmitButton } from '../../components/ui/buttons';\nimport { translate, translateWithParameters } from '../../helpers/l10n';\nimport ConfirmButton from '../../components/controls/ConfirmButton';\n\ninterface Props {\n  component: Pick<T.Component, 'key' | 'name'>;\n  onKeyChange: (newKey: string) => Promise<void>;\n}\n\ninterface State {\n  newKey?: string;\n}\n\nexport default class UpdateForm extends React.PureComponent<Props, State> {\n  state: State = {};\n\n  handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const newKey = event.currentTarget.value;\n    this.setState({ newKey });\n  };\n\n  handleReset = () => {\n    this.setState({ newKey: undefined });\n  };\n\n  render() {\n    const { component } = this.props;\n    const { newKey } = this.state;\n    const value = newKey != null ? newKey : component.key;\n    const hasChanged = value !== component.key;\n\n    return (\n      <ConfirmButton\n        confirmButtonText={translate('update_verb')}\n        confirmData={newKey}\n        modalBody={\n          <>\n            {translateWithParameters('update_key.are_you_sure_to_change_key', component.name)}\n            <div className=\"spacer-top\">\n              {translate('update_key.old_key')}\n              {': '}\n              <strong>{component.key}</strong>\n            </div>\n            <div className=\"spacer-top\">\n              {translate('update_key.new_key')}\n              {': '}\n              <strong>{newKey}</strong>\n            </div>\n          </>\n        }\n        modalHeader={translate('update_key.page')}\n        onConfirm={this.props.onKeyChange}>\n        {({ onFormSubmit }) => (\n          <form onSubmit={onFormSubmit}>\n            <input\n              className=\"input-super-large\"\n              id=\"update-key-new-key\"\n              onChange={this.handleChange}\n              placeholder={translate('update_key.new_key')}\n              required={true}\n              type=\"text\"\n              value={value}\n            />\n\n            <div className=\"spacer-top\">\n              <SubmitButton disabled={!hasChanged} id=\"update-key-submit\">\n                {translate('update_verb')}\n              </SubmitButton>\n\n              <Button\n                className=\"spacer-left\"\n                disabled={!hasChanged}\n                id=\"update-key-reset\"\n                onClick={this.handleReset}\n                type=\"reset\">\n                {translate('reset_verb')}\n              </Button>\n            </div>\n          </form>\n        )}\n      </ConfirmButton>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport Helmet from 'react-helmet';\nimport { withRouter, WithRouterProps } from 'react-router';\nimport UpdateForm from './UpdateForm';\nimport { changeKey } from '../../api/components';\nimport RecentHistory from '../../app/components/RecentHistory';\nimport { translate } from '../../helpers/l10n';\n\ninterface Props {\n  component: Pick<T.Component, 'key' | 'name'>;\n}\n\nexport class Key extends React.PureComponent<Props & WithRouterProps> {\n  handleChangeKey = (newKey: string) => {\n    return changeKey({ from: this.props.component.key, to: newKey }).then(() => {\n      RecentHistory.remove(this.props.component.key);\n      this.props.router.replace({ pathname: '/project/key', query: { id: newKey } });\n    });\n  };\n\n  render() {\n    const { component } = this.props;\n    return (\n      <div className=\"page page-limited\" id=\"project-key\">\n        <Helmet title={translate('update_key.page')} />\n        <header className=\"page-header\">\n          <h1 className=\"page-title\">{translate('update_key.page')}</h1>\n          <div className=\"page-description\">{translate('update_key.page.description')}</div>\n        </header>\n        <UpdateForm component={component} onKeyChange={this.handleChangeKey} />\n      </div>\n    );\n  }\n}\n\nexport default withRouter(Key);\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport * as ReactModal from 'react-modal';\nimport * as classNames from 'classnames';\n\nReactModal.setAppElement('#content');\n\nexport interface ModalProps {\n  children: React.ReactNode;\n  size?: 'small' | 'medium' | 'large';\n  noBackdrop?: boolean;\n}\n\ntype MandatoryProps = Pick<ReactModal.Props, 'contentLabel'>;\n\ntype Props = Partial<ReactModal.Props> & MandatoryProps & ModalProps;\n\nexport default function Modal(props: Props) {\n  return (\n    <ReactModal\n      className={classNames('modal', {\n        'modal-small': props.size === 'small',\n        'modal-medium': props.size === 'medium',\n        'modal-large': props.size === 'large'\n      })}\n      isOpen={true}\n      overlayClassName={classNames('modal-overlay', { 'modal-no-backdrop': props.noBackdrop })}\n      {...props}\n    />\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport Modal, { ModalProps } from './Modal';\n\nexport interface ChildrenProps {\n  onCloseClick: (event?: React.SyntheticEvent<HTMLElement>) => void;\n  onFormSubmit: (event: React.SyntheticEvent<HTMLFormElement>) => void;\n  onSubmitClick: (event?: React.SyntheticEvent<HTMLElement>) => void;\n  submitting: boolean;\n}\n\ninterface Props extends ModalProps {\n  children: (props: ChildrenProps) => React.ReactNode;\n  header: string;\n  onClose: () => void;\n  onSubmit: () => void | Promise<void>;\n}\n\ninterface State {\n  submitting: boolean;\n}\n\nexport default class SimpleModal extends React.Component<Props, State> {\n  mounted = false;\n  state: State = { submitting: false };\n\n  componentDidMount() {\n    this.mounted = true;\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  stopSubmitting = () => {\n    if (this.mounted) {\n      this.setState({ submitting: false });\n    }\n  };\n\n  handleCloseClick = (event?: React.SyntheticEvent<HTMLElement>) => {\n    if (event) {\n      event.preventDefault();\n      event.currentTarget.blur();\n    }\n    this.props.onClose();\n  };\n\n  handleFormSubmit = (event: React.SyntheticEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    this.submit();\n  };\n\n  handleSubmitClick = (event?: React.SyntheticEvent<HTMLElement>) => {\n    if (event) {\n      event.preventDefault();\n      event.currentTarget.blur();\n    }\n    this.submit();\n  };\n\n  submit = () => {\n    const result = this.props.onSubmit();\n    if (result) {\n      this.setState({ submitting: true });\n      result.then(this.stopSubmitting, this.stopSubmitting);\n    }\n  };\n\n  render() {\n    const { children, header, onClose, onSubmit, ...modalProps } = this.props;\n    return (\n      <Modal contentLabel={header} onRequestClose={onClose} {...modalProps}>\n        {children({\n          onCloseClick: this.handleCloseClick,\n          onFormSubmit: this.handleFormSubmit,\n          onSubmitClick: this.handleSubmitClick,\n          submitting: this.state.submitting\n        })}\n      </Modal>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { ModalProps } from './Modal';\nimport SimpleModal, { ChildrenProps } from './SimpleModal';\nimport DeferredSpinner from '../common/DeferredSpinner';\nimport { SubmitButton, ResetButtonLink } from '../ui/buttons';\nimport { translate } from '../../helpers/l10n';\n\nexport interface ConfirmModalProps<T> extends ModalProps {\n  cancelButtonText?: string;\n  confirmButtonText: string;\n  confirmData?: T;\n  confirmDisable?: boolean;\n  isDestructive?: boolean;\n  onConfirm: (data?: T) => void | Promise<void | Response>;\n}\n\ninterface Props<T> extends ConfirmModalProps<T> {\n  header: string;\n  headerDescription?: React.ReactNode;\n  onClose: () => void;\n}\n\nexport default class ConfirmModal<T = string> extends React.PureComponent<Props<T>> {\n  mounted = false;\n\n  componentDidMount() {\n    this.mounted = true;\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  handleSubmit = () => {\n    const result = this.props.onConfirm(this.props.confirmData);\n    if (result) {\n      return result.then(this.props.onClose, () => {});\n    } else {\n      this.props.onClose();\n      return undefined;\n    }\n  };\n\n  renderModalContent = ({ onCloseClick, onFormSubmit, submitting }: ChildrenProps) => {\n    const {\n      children,\n      confirmButtonText,\n      confirmDisable,\n      header,\n      headerDescription,\n      isDestructive,\n      cancelButtonText = translate('cancel')\n    } = this.props;\n    return (\n      <form onSubmit={onFormSubmit}>\n        <header className=\"modal-head\">\n          <h2>{header}</h2>\n          {headerDescription}\n        </header>\n        <div className=\"modal-body\">{children}</div>\n        <footer className=\"modal-foot\">\n          <DeferredSpinner className=\"spacer-right\" loading={submitting} />\n          <SubmitButton\n            autoFocus={true}\n            className={isDestructive ? 'button-red' : undefined}\n            disabled={submitting || confirmDisable}>\n            {confirmButtonText}\n          </SubmitButton>\n          <ResetButtonLink disabled={submitting} onClick={onCloseClick}>\n            {cancelButtonText}\n          </ResetButtonLink>\n        </footer>\n      </form>\n    );\n  };\n\n  render() {\n    const { header, onClose, noBackdrop, size } = this.props;\n    const modalProps = { header, onClose, noBackdrop, size };\n    return (\n      <SimpleModal onSubmit={this.handleSubmit} {...modalProps}>\n        {this.renderModalContent}\n      </SimpleModal>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport ConfirmModal, { ConfirmModalProps } from './ConfirmModal';\nimport ModalButton, { ChildrenProps, ModalProps } from './ModalButton';\n\ninterface Props<T> extends ConfirmModalProps<T> {\n  children: (props: ChildrenProps) => React.ReactNode;\n  modalBody: React.ReactNode;\n  modalHeader: string;\n  modalHeaderDescription?: React.ReactNode;\n}\n\ninterface State {\n  modal: boolean;\n}\n\nexport default class ConfirmButton<T> extends React.PureComponent<Props<T>, State> {\n  renderConfirmModal = ({ onClose }: ModalProps) => {\n    const {\n      children,\n      modalBody,\n      modalHeader,\n      modalHeaderDescription,\n      ...confirmModalProps\n    } = this.props;\n    return (\n      <ConfirmModal\n        header={modalHeader}\n        headerDescription={modalHeaderDescription}\n        onClose={onClose}\n        {...confirmModalProps}>\n        {modalBody}\n      </ConfirmModal>\n    );\n  };\n\n  render() {\n    return <ModalButton modal={this.renderConfirmModal}>{this.props.children}</ModalButton>;\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\n\nexport interface ChildrenProps {\n  onClick: () => void;\n  onFormSubmit: (event: React.FormEvent<HTMLFormElement>) => void;\n}\n\nexport interface ModalProps {\n  onClose: () => void;\n}\n\nexport interface Props {\n  children: (props: ChildrenProps) => React.ReactNode;\n  modal: (props: ModalProps) => React.ReactNode;\n}\n\ninterface State {\n  modal: boolean;\n}\n\nexport default class ModalButton extends React.PureComponent<Props, State> {\n  mounted = false;\n  state: State = { modal: false };\n\n  componentDidMount() {\n    this.mounted = true;\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  handleButtonClick = () => {\n    this.setState({ modal: true });\n  };\n\n  handleFormSubmit = (event?: React.FormEvent<HTMLFormElement>) => {\n    if (event) {\n      event.preventDefault();\n    }\n    this.setState({ modal: true });\n  };\n\n  handleCloseModal = () => {\n    if (this.mounted) {\n      this.setState({ modal: false });\n    }\n  };\n\n  render() {\n    return (\n      <>\n        {this.props.children({\n          onClick: this.handleButtonClick,\n          onFormSubmit: this.handleFormSubmit\n        })}\n        {this.state.modal && this.props.modal({ onClose: this.handleCloseModal })}\n      </>\n    );\n  }\n}\n"],"sourceRoot":""}