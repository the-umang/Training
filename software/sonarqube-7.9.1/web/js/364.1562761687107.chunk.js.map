{"version":3,"sources":["webpack:///./src/main/js/components/common/AnalysisWarningsModal.tsx","webpack:///./src/main/js/components/controls/Modal.tsx"],"names":["AnalysisWarningsModal","_super","props","_this","call","this","mounted","keepLineBreaks","warning","includes","lines_1","split","react__WEBPACK_IMPORTED_MODULE_0__","map","line","index","key","length","state","loading","warnings","__extends","prototype","componentDidMount","taskId","loadWarnings","componentDidUpdate","prevProps","_a","setState","componentWillUnmount","Object","_api_ce__WEBPACK_IMPORTED_MODULE_6__","then","_b","render","header","_helpers_l10n__WEBPACK_IMPORTED_MODULE_4__","_controls_Modal__WEBPACK_IMPORTED_MODULE_2__","contentLabel","onRequestClose","onClose","className","_DeferredSpinner__WEBPACK_IMPORTED_MODULE_1__","_icons_components_WarningIcon__WEBPACK_IMPORTED_MODULE_5__","_ui_buttons__WEBPACK_IMPORTED_MODULE_3__","onClick","Modal","react_modal__WEBPACK_IMPORTED_MODULE_1__","__assign","classnames__WEBPACK_IMPORTED_MODULE_2__","modal-small","size","modal-medium","modal-large","isOpen","overlayClassName","modal-no-backdrop","noBackdrop"],"mappings":"6dAsCAA,EAAA,SAAAC,GAGE,SAAAD,EAAYE,GAAZ,IAAAC,EACEF,EAAAG,KAAAC,KAAMH,IAAMG,YAHdF,EAAAG,SAAU,EA2CVH,EAAAI,eAAiB,SAACC,GAChB,GAAIA,EAAQC,SAAS,MAAO,CAC1B,IAAMC,EAAQF,EAAQG,MAAM,MAC5B,OACEC,EAAA,cAAAA,EAAA,cACGF,EAAMG,IAAI,SAACC,EAAMC,GAAU,OAC1BH,EAAA,cAACA,EAAA,SAAc,CAACI,IAAKD,GAClBD,EACAC,EAAQL,EAAMO,OAAS,GAAKL,EAAA,mBAHL,UAShC,OAAOJ,GArDTL,EAAKe,MAAQ,CAAEC,SAAUjB,EAAMkB,SAAUA,SAAUlB,EAAMkB,UAAY,MAoFzE,OAzFmDC,EAAArB,EAAAC,GAQjDD,EAAAsB,UAAAC,kBAAA,WACElB,KAAKC,SAAU,GACVD,KAAKH,MAAMkB,UAAYf,KAAKH,MAAMsB,QACrCnB,KAAKoB,aAAapB,KAAKH,MAAMsB,SAIjCxB,EAAAsB,UAAAI,mBAAA,SAAmBC,GACX,IAAAC,EAAAvB,KAAAH,MAAEsB,EAAAI,EAAAJ,OAAQJ,EAAAQ,EAAAR,UACXA,GAAYI,GAAUG,EAAUH,SAAWA,EAC9CnB,KAAKoB,aAAaD,GACTJ,GAAYO,EAAUP,WAAaA,GAC5Cf,KAAKwB,SAAS,CAAET,SAAQA,KAI5BpB,EAAAsB,UAAAQ,qBAAA,WACEzB,KAAKC,SAAU,GAGjBN,EAAAsB,UAAAG,aAAA,SAAaD,GAAb,IAAArB,EAAAE,KACEA,KAAKwB,SAAS,CAAEV,SAAS,IACzBY,OAAAC,EAAA,EAAAD,CAAQP,EAAQ,CAAC,aAAaS,KAC5B,SAACL,OAAEM,EAAAN,EAAAR,gBAAA,IAAAc,EAAA,GAAAA,EACG/B,EAAKG,SACPH,EAAK0B,SAAS,CAAEV,SAAS,EAAOC,SAAQA,KAG5C,WACMjB,EAAKG,SACPH,EAAK0B,SAAS,CAAEV,SAAS,OAwBjCnB,EAAAsB,UAAAa,OAAA,eAAAhC,EAAAE,KACQ+B,EAASL,OAAAM,EAAA,EAAAN,CAAU,YACzB,OACEnB,EAAA,cAAC0B,EAAA,EAAK,CAACC,aAAcH,EAAQI,eAAgBnC,KAAKH,MAAMuC,SACtD7B,EAAA,wBAAQ8B,UAAU,cAChB9B,EAAA,wBAAKwB,IAGPxB,EAAA,qBAAK8B,UAAU,mDACb9B,EAAA,cAAC+B,EAAA,EAAe,CAACxB,QAASd,KAAKa,MAAMC,SAClCd,KAAKa,MAAME,SAASP,IAAI,SAACL,EAASO,GAAU,OAC3CH,EAAA,qBAAK8B,UAAU,uBAAuB1B,IAAKD,GACzCH,EAAA,cAACgC,EAAA,EAAW,CAACF,UAAU,2BACvB9B,EAAA,qBAAK8B,UAAU,4BAA4BvC,EAAKI,eAHPC,SASjDI,EAAA,wBAAQ8B,UAAU,cAChB9B,EAAA,cAACiC,EAAA,EAAe,CAACH,UAAU,iBAAiBI,QAASzC,KAAKH,MAAMuC,SAC7DV,OAAAM,EAAA,EAAAN,CAAU,aAMvB/B,EAzFA,CAAmDY,EAAA,2UCHrC,SAAUmC,EAAM7C,GAC5B,OACEU,EAAA,cAACoC,EAAUC,EAAA,CACTP,UAAWQ,EAAW,QAAS,CAC7BC,cAA8B,UAAfjD,EAAMkD,KACrBC,eAA+B,WAAfnD,EAAMkD,KACtBE,cAA8B,UAAfpD,EAAMkD,OAEvBG,QAAQ,EACRC,iBAAkBN,EAAW,gBAAiB,CAAEO,oBAAqBvD,EAAMwD,cACvExD,IAtBV8C,EAAA,cAAyB","file":"js/364.1562761687107.chunk.js","sourcesContent":["/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport DeferredSpinner from './DeferredSpinner';\nimport Modal from '../controls/Modal';\nimport { ResetButtonLink } from '../ui/buttons';\nimport { translate } from '../../helpers/l10n';\nimport WarningIcon from '../icons-components/WarningIcon';\nimport { getTask } from '../../api/ce';\n\ninterface Props {\n  onClose: () => void;\n  taskId?: string;\n  warnings?: string[];\n}\n\ninterface State {\n  loading: boolean;\n  warnings: string[];\n}\n\nexport default class AnalysisWarningsModal extends React.PureComponent<Props, State> {\n  mounted = false;\n\n  constructor(props: Props) {\n    super(props);\n    this.state = { loading: !props.warnings, warnings: props.warnings || [] };\n  }\n\n  componentDidMount() {\n    this.mounted = true;\n    if (!this.props.warnings && this.props.taskId) {\n      this.loadWarnings(this.props.taskId);\n    }\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    const { taskId, warnings } = this.props;\n    if (!warnings && taskId && prevProps.taskId !== taskId) {\n      this.loadWarnings(taskId);\n    } else if (warnings && prevProps.warnings !== warnings) {\n      this.setState({ warnings });\n    }\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  loadWarnings(taskId: string) {\n    this.setState({ loading: true });\n    getTask(taskId, ['warnings']).then(\n      ({ warnings = [] }) => {\n        if (this.mounted) {\n          this.setState({ loading: false, warnings });\n        }\n      },\n      () => {\n        if (this.mounted) {\n          this.setState({ loading: false });\n        }\n      }\n    );\n  }\n\n  keepLineBreaks = (warning: string) => {\n    if (warning.includes('\\n')) {\n      const lines = warning.split('\\n');\n      return (\n        <>\n          {lines.map((line, index) => (\n            <React.Fragment key={index}>\n              {line}\n              {index < lines.length - 1 && <br />}\n            </React.Fragment>\n          ))}\n        </>\n      );\n    } else {\n      return warning;\n    }\n  };\n\n  render() {\n    const header = translate('warnings');\n    return (\n      <Modal contentLabel={header} onRequestClose={this.props.onClose}>\n        <header className=\"modal-head\">\n          <h2>{header}</h2>\n        </header>\n\n        <div className=\"modal-body modal-container js-analysis-warnings\">\n          <DeferredSpinner loading={this.state.loading}>\n            {this.state.warnings.map((warning, index) => (\n              <div className=\"panel panel-vertical\" key={index}>\n                <WarningIcon className=\"pull-left spacer-right\" />\n                <div className=\"overflow-hidden markdown\">{this.keepLineBreaks(warning)}</div>\n              </div>\n            ))}\n          </DeferredSpinner>\n        </div>\n\n        <footer className=\"modal-foot\">\n          <ResetButtonLink className=\"js-modal-close\" onClick={this.props.onClose}>\n            {translate('close')}\n          </ResetButtonLink>\n        </footer>\n      </Modal>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport * as ReactModal from 'react-modal';\nimport * as classNames from 'classnames';\n\nReactModal.setAppElement('#content');\n\nexport interface ModalProps {\n  children: React.ReactNode;\n  size?: 'small' | 'medium' | 'large';\n  noBackdrop?: boolean;\n}\n\ntype MandatoryProps = Pick<ReactModal.Props, 'contentLabel'>;\n\ntype Props = Partial<ReactModal.Props> & MandatoryProps & ModalProps;\n\nexport default function Modal(props: Props) {\n  return (\n    <ReactModal\n      className={classNames('modal', {\n        'modal-small': props.size === 'small',\n        'modal-medium': props.size === 'medium',\n        'modal-large': props.size === 'large'\n      })}\n      isOpen={true}\n      overlayClassName={classNames('modal-overlay', { 'modal-no-backdrop': props.noBackdrop })}\n      {...props}\n    />\n  );\n}\n"],"sourceRoot":""}