{"version":3,"sources":["webpack:///./node_modules/d3-array/src/ascending.js","webpack:///./node_modules/d3-array/src/bisector.js","webpack:///./node_modules/d3-array/src/bisect.js","webpack:///./node_modules/d3-array/src/cross.js","webpack:///./node_modules/d3-array/src/number.js","webpack:///./node_modules/d3-array/src/extent.js","webpack:///./node_modules/d3-array/src/array.js","webpack:///./node_modules/d3-array/src/range.js","webpack:///./node_modules/d3-array/src/ticks.js","webpack:///./node_modules/d3-array/src/threshold/sturges.js","webpack:///./node_modules/d3-array/src/quantile.js","webpack:///./node_modules/d3-array/src/max.js","webpack:///./node_modules/d3-array/src/min.js","webpack:///./node_modules/d3-array/src/index.js","webpack:///./node_modules/d3-collection/src/map.js","webpack:///./node_modules/d3-collection/src/set.js","webpack:///./node_modules/d3-scale/src/array.js","webpack:///./node_modules/d3-scale/src/ordinal.js","webpack:///./node_modules/d3-scale/src/band.js","webpack:///./node_modules/d3-scale/src/constant.js","webpack:///./node_modules/d3-scale/src/number.js","webpack:///./node_modules/d3-scale/src/continuous.js","webpack:///./node_modules/d3-format/src/formatDecimal.js","webpack:///./node_modules/d3-format/src/exponent.js","webpack:///./node_modules/d3-format/src/formatSpecifier.js","webpack:///./node_modules/d3-format/src/formatTrim.js","webpack:///./node_modules/d3-format/src/formatPrefixAuto.js","webpack:///./node_modules/d3-format/src/defaultLocale.js","webpack:///./node_modules/d3-format/src/formatRounded.js","webpack:///./node_modules/d3-format/src/formatTypes.js","webpack:///./node_modules/d3-format/src/identity.js","webpack:///./node_modules/d3-format/src/locale.js","webpack:///./node_modules/d3-format/src/formatGroup.js","webpack:///./node_modules/d3-format/src/formatNumerals.js","webpack:///./node_modules/d3-format/src/precisionFixed.js","webpack:///./node_modules/d3-scale/src/tickFormat.js","webpack:///./node_modules/d3-format/src/precisionPrefix.js","webpack:///./node_modules/d3-format/src/precisionRound.js","webpack:///./node_modules/d3-scale/src/linear.js","webpack:///./node_modules/d3-scale/src/nice.js","webpack:///./node_modules/d3-time/src/interval.js","webpack:///./node_modules/d3-time/src/millisecond.js","webpack:///./node_modules/d3-time/src/duration.js","webpack:///./node_modules/d3-time/src/second.js","webpack:///./node_modules/d3-time/src/minute.js","webpack:///./node_modules/d3-time/src/hour.js","webpack:///./node_modules/d3-time/src/day.js","webpack:///./node_modules/d3-time/src/week.js","webpack:///./node_modules/d3-time/src/month.js","webpack:///./node_modules/d3-time/src/year.js","webpack:///./node_modules/d3-time/src/utcMinute.js","webpack:///./node_modules/d3-time/src/utcHour.js","webpack:///./node_modules/d3-time/src/utcDay.js","webpack:///./node_modules/d3-time/src/utcWeek.js","webpack:///./node_modules/d3-time/src/utcMonth.js","webpack:///./node_modules/d3-time/src/utcYear.js","webpack:///./node_modules/d3-time-format/src/locale.js","webpack:///./node_modules/d3-time-format/src/defaultLocale.js","webpack:///./node_modules/d3-time-format/src/isoFormat.js","webpack:///./node_modules/d3-time-format/src/isoParse.js","webpack:///./node_modules/d3-scale/src/time.js","webpack:///./node_modules/d3-scale/src/index.js","webpack:///./node_modules/d3-interpolate/src/basis.js","webpack:///./node_modules/d3-interpolate/src/constant.js","webpack:///./node_modules/d3-interpolate/src/color.js","webpack:///./node_modules/d3-interpolate/src/rgb.js","webpack:///./node_modules/d3-interpolate/src/basisClosed.js","webpack:///./node_modules/d3-interpolate/src/number.js","webpack:///./node_modules/d3-interpolate/src/string.js","webpack:///./node_modules/d3-interpolate/src/transform/parse.js","webpack:///./node_modules/d3-interpolate/src/value.js","webpack:///./node_modules/d3-interpolate/src/date.js","webpack:///./node_modules/d3-interpolate/src/array.js","webpack:///./node_modules/d3-interpolate/src/object.js","webpack:///./node_modules/d3-interpolate/src/round.js","webpack:///./node_modules/d3-interpolate/src/transform/decompose.js","webpack:///./node_modules/d3-interpolate/src/transform/index.js","webpack:///./node_modules/d3-interpolate/src/zoom.js","webpack:///./node_modules/d3-interpolate/src/hsl.js","webpack:///./node_modules/d3-interpolate/src/hcl.js","webpack:///./node_modules/d3-interpolate/src/cubehelix.js","webpack:///./node_modules/d3-interpolate/src/index.js","webpack:///./node_modules/d3-color/src/define.js","webpack:///./node_modules/d3-color/src/color.js","webpack:///./node_modules/d3-color/src/math.js","webpack:///./node_modules/d3-color/src/lab.js","webpack:///./node_modules/d3-color/src/cubehelix.js","webpack:///./node_modules/d3-color/src/index.js"],"names":["ascending","a","b","NaN","bisector","compare","f","length","d","x","left","lo","hi","mid","right","ascendingBisect","bisectRight","bisect","number","extent","values","valueof","value","min","max","n","i","array_array","Array","prototype","range","slice","map","start","stop","step","arguments","Math","ceil","e10","sqrt","e5","e2","ticks","count","reverse","tickIncrement","isFinite","floor","power","log","LN10","error","pow","tickStep","step0","abs","step1","quantile","p","i0","value0","src_max","src_min","__webpack_require__","__webpack_exports__","Map","object","each","key","set","isArray","o","constructor","has","this","get","remove","property","clear","keys","push","entries","size","empty","src_map","Set","proto","add","array_map","implicit","name","ordinal","index","domain","unknown","scale","call","_","copy","band","bandwidth","undefined","ordinalRange","round","paddingInner","paddingOuter","align","rescale","Object","src","rangeRound","padding","point","pointish","constant","unit","deinterpolateLinear","bimap","deinterpolate","reinterpolate","d0","d1","r0","r1","polymap","j","r","source","target","interpolate","clamp","continuous","piecewise","output","input","d3_interpolate_src","deinterpolateClamp","invert","y","t","reinterpolateClamp","formatDecimal","toExponential","indexOf","coefficient","src_exponent","re","formatSpecifier","specifier","FormatSpecifier","match","exec","Error","fill","sign","symbol","zero","width","comma","precision","trim","type","toString","prefixExponent","defaultLocale_locale","defaultLocale_format","defaultLocale_formatPrefix","formatTrim","s","out","i1","formatRounded","exponent","join","formatTypes","%","toFixed","c","e","g","toPrecision","X","toUpperCase","identity","prefixes","locale","grouping","thousands","group","substring","currency","decimal","numerals","replace","formatNumerals","percent","newFormat","prefix","test","toLowerCase","suffix","formatType","maybeSuffix","format","valuePrefix","valueSuffix","valueNegative","charCodeAt","Infinity","formatPrefix","k","src_locale","src_tickFormat","isNaN","precisionPrefix","precisionRound","precisionFixed","linearish","tickFormat","nice","linear","interval","x0","x1","t0","Date","t1","newInterval","floori","offseti","field","date","offset","previous","filter","setTime","end","every","millisecond_millisecond","src_millisecond","durationMinute","durationWeek","second_second","getMilliseconds","getUTCSeconds","src_second","minute_minute","getSeconds","getMinutes","src_minute","hour_hour","getHours","src_hour","day_day","setHours","setDate","getDate","getTimezoneOffset","src_day","weekday","getDay","sunday","monday","tuesday","wednesday","thursday","friday","saturday","month_month","setMonth","getMonth","getFullYear","src_month","year_year","setFullYear","src_year","utcMinute","setUTCSeconds","getUTCMinutes","utcHour","setUTCMinutes","getUTCHours","utcDay","setUTCHours","setUTCDate","getUTCDate","src_utcDay","utcWeekday","getUTCDay","utcSunday","utcMonday","utcTuesday","utcWednesday","utcThursday","utcFriday","utcSaturday","utcMonth","setUTCMonth","getUTCMonth","getUTCFullYear","utcYear","setUTCFullYear","src_utcYear","localDate","m","H","M","S","L","utcDate","UTC","newYear","src_defaultLocale_locale","timeFormat","utcFormat","utcParse","pads","-","0","numberRe","percentRe","requoteRe","pad","string","requote","formatRe","names","RegExp","formatLookup","parseWeekdayNumberSunday","w","parseWeekdayNumberMonday","u","parseWeekNumberSunday","U","parseWeekNumberISO","V","parseWeekNumberMonday","W","parseFullYear","parseYear","parseZone","Z","parseMonthNumber","parseDayOfMonth","parseDayOfYear","parseHour24","parseMinutes","parseSeconds","parseMilliseconds","parseMicroseconds","parseLiteralPercent","parseUnixTimestamp","Q","parseUnixTimestampSeconds","formatDayOfMonth","formatHour24","formatHour12","formatDayOfYear","formatMilliseconds","formatMicroseconds","formatMonthNumber","formatMinutes","formatSeconds","formatWeekdayNumberMonday","day","formatWeekNumberSunday","formatWeekNumberISO","formatWeekdayNumberSunday","formatWeekNumberMonday","locale_formatYear","formatFullYear","formatZone","z","formatUTCDayOfMonth","formatUTCHour24","formatUTCHour12","formatUTCDayOfYear","formatUTCMilliseconds","getUTCMilliseconds","formatUTCMicroseconds","formatUTCMonthNumber","formatUTCMinutes","formatUTCSeconds","formatUTCWeekdayNumberMonday","dow","formatUTCWeekNumberSunday","formatUTCWeekNumberISO","formatUTCWeekdayNumberSunday","formatUTCWeekNumberMonday","formatUTCYear","formatUTCFullYear","formatUTCZone","formatLiteralPercent","formatUnixTimestamp","formatUnixTimestampSeconds","definition","locale_dateTime","dateTime","locale_date","locale_time","time","locale_periods","periods","locale_weekdays","days","locale_shortWeekdays","shortDays","locale_months","months","locale_shortMonths","shortMonths","periodRe","periodLookup","weekdayRe","weekdayLookup","shortWeekdayRe","shortWeekdayLookup","monthRe","monthLookup","shortMonthRe","shortMonthLookup","formats","A","B","I","Y","utcFormats","parses","parseSpecifier","charAt","newParse","newDate","week","parse","formatLocale","defaultLocale_defaultLocale","toISOString","time_durationSecond","time_durationMinute","time_durationHour","time_durationDay","time_durationWeek","durationMonth","durationYear","time_date","time_number","calendar","year","month","hour","minute","second","millisecond","formatMillisecond","formatSecond","formatMinute","formatHour","formatDay","formatWeek","formatMonth","formatYear","tickIntervals","tickInterval","basis","v0","v1","v2","v3","t2","t3","color_hue","gamma","nogamma","exponential","src_rgb","rgbGamma","color","rgb","opacity","rgbSpline","spline","colors","reA","reB","cssNode","cssRoot","cssView","svgNode","am","bm","bs","bi","lastIndex","q","one","src_value","nb","na","valueOf","degrees","PI","translateX","translateY","rotate","skewX","scaleX","scaleY","decompose","atan2","atan","interpolateTransform","pxComma","pxParen","degParen","pop","xa","ya","xb","yb","translate","interpolateTransformCss","document","createElement","documentElement","defaultView","style","transform","getComputedStyle","appendChild","getPropertyValue","removeChild","split","interpolateTransformSvg","createElementNS","setAttribute","baseVal","consolidate","matrix","rho","SQRT2","cosh","exp","zoom","p0","p1","ux0","uy0","w0","ux1","uy1","w1","dx","dy","d2","b0","b1","coshr0","sinh","duration","hsl","hue","h","l","hcl","cubehelix_cubehelix","cubehelixGamma","cubehelix","define","factory","extend","parent","create","Color","reI","reN","reP","reHex3","reHex6","reRgbInteger","reRgbPercent","reRgbaInteger","reRgbaPercent","reHslPercent","reHslaPercent","named","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","Rgb","parseInt","rgbn","rgba","hsla","hasOwnProperty","rgbConvert","hex","Hsl","hslConvert","hsl2rgb","m1","m2","displayable","brighter","darker","deg2rad","rad2deg","Xn","Yn","Zn","labConvert","Lab","Hcl","cos","sin","rgb2lrgb","xyz2lab","lab","lab2xyz","lrgb2rgb","hclConvert","C","D","E","ED","EB","BC_DA","Cubehelix","bl","cubehelixConvert"],"mappings":"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","file":"js/5.m.dde07b4e.chunk.js","sourcesContent":["export default function(a, b) {\n  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n}\n","import ascending from \"./ascending\";\n\nexport default function(compare) {\n  if (compare.length === 1) compare = ascendingComparator(compare);\n  return {\n    left: function(a, x, lo, hi) {\n      if (lo == null) lo = 0;\n      if (hi == null) hi = a.length;\n      while (lo < hi) {\n        var mid = lo + hi >>> 1;\n        if (compare(a[mid], x) < 0) lo = mid + 1;\n        else hi = mid;\n      }\n      return lo;\n    },\n    right: function(a, x, lo, hi) {\n      if (lo == null) lo = 0;\n      if (hi == null) hi = a.length;\n      while (lo < hi) {\n        var mid = lo + hi >>> 1;\n        if (compare(a[mid], x) > 0) hi = mid;\n        else lo = mid + 1;\n      }\n      return lo;\n    }\n  };\n}\n\nfunction ascendingComparator(f) {\n  return function(d, x) {\n    return ascending(f(d), x);\n  };\n}\n","import ascending from \"./ascending\";\nimport bisector from \"./bisector\";\n\nvar ascendingBisect = bisector(ascending);\nexport var bisectRight = ascendingBisect.right;\nexport var bisectLeft = ascendingBisect.left;\nexport default bisectRight;\n","import {pair} from \"./pairs\";\n\nexport default function(values0, values1, reduce) {\n  var n0 = values0.length,\n      n1 = values1.length,\n      values = new Array(n0 * n1),\n      i0,\n      i1,\n      i,\n      value0;\n\n  if (reduce == null) reduce = pair;\n\n  for (i0 = i = 0; i0 < n0; ++i0) {\n    for (value0 = values0[i0], i1 = 0; i1 < n1; ++i1, ++i) {\n      values[i] = reduce(value0, values1[i1]);\n    }\n  }\n\n  return values;\n}\n","export default function(x) {\n  return x === null ? NaN : +x;\n}\n","export default function(values, valueof) {\n  var n = values.length,\n      i = -1,\n      value,\n      min,\n      max;\n\n  if (valueof == null) {\n    while (++i < n) { // Find the first comparable value.\n      if ((value = values[i]) != null && value >= value) {\n        min = max = value;\n        while (++i < n) { // Compare the remaining values.\n          if ((value = values[i]) != null) {\n            if (min > value) min = value;\n            if (max < value) max = value;\n          }\n        }\n      }\n    }\n  }\n\n  else {\n    while (++i < n) { // Find the first comparable value.\n      if ((value = valueof(values[i], i, values)) != null && value >= value) {\n        min = max = value;\n        while (++i < n) { // Compare the remaining values.\n          if ((value = valueof(values[i], i, values)) != null) {\n            if (min > value) min = value;\n            if (max < value) max = value;\n          }\n        }\n      }\n    }\n  }\n\n  return [min, max];\n}\n","var array = Array.prototype;\n\nexport var slice = array.slice;\nexport var map = array.map;\n","export default function(start, stop, step) {\n  start = +start, stop = +stop, step = (n = arguments.length) < 2 ? (stop = start, start = 0, 1) : n < 3 ? 1 : +step;\n\n  var i = -1,\n      n = Math.max(0, Math.ceil((stop - start) / step)) | 0,\n      range = new Array(n);\n\n  while (++i < n) {\n    range[i] = start + i * step;\n  }\n\n  return range;\n}\n","var e10 = Math.sqrt(50),\n    e5 = Math.sqrt(10),\n    e2 = Math.sqrt(2);\n\nexport default function(start, stop, count) {\n  var reverse,\n      i = -1,\n      n,\n      ticks,\n      step;\n\n  stop = +stop, start = +start, count = +count;\n  if (start === stop && count > 0) return [start];\n  if (reverse = stop < start) n = start, start = stop, stop = n;\n  if ((step = tickIncrement(start, stop, count)) === 0 || !isFinite(step)) return [];\n\n  if (step > 0) {\n    start = Math.ceil(start / step);\n    stop = Math.floor(stop / step);\n    ticks = new Array(n = Math.ceil(stop - start + 1));\n    while (++i < n) ticks[i] = (start + i) * step;\n  } else {\n    start = Math.floor(start * step);\n    stop = Math.ceil(stop * step);\n    ticks = new Array(n = Math.ceil(start - stop + 1));\n    while (++i < n) ticks[i] = (start - i) / step;\n  }\n\n  if (reverse) ticks.reverse();\n\n  return ticks;\n}\n\nexport function tickIncrement(start, stop, count) {\n  var step = (stop - start) / Math.max(0, count),\n      power = Math.floor(Math.log(step) / Math.LN10),\n      error = step / Math.pow(10, power);\n  return power >= 0\n      ? (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1) * Math.pow(10, power)\n      : -Math.pow(10, -power) / (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1);\n}\n\nexport function tickStep(start, stop, count) {\n  var step0 = Math.abs(stop - start) / Math.max(0, count),\n      step1 = Math.pow(10, Math.floor(Math.log(step0) / Math.LN10)),\n      error = step0 / step1;\n  if (error >= e10) step1 *= 10;\n  else if (error >= e5) step1 *= 5;\n  else if (error >= e2) step1 *= 2;\n  return stop < start ? -step1 : step1;\n}\n","export default function(values) {\n  return Math.ceil(Math.log(values.length) / Math.LN2) + 1;\n}\n","import number from \"./number\";\n\nexport default function(values, p, valueof) {\n  if (valueof == null) valueof = number;\n  if (!(n = values.length)) return;\n  if ((p = +p) <= 0 || n < 2) return +valueof(values[0], 0, values);\n  if (p >= 1) return +valueof(values[n - 1], n - 1, values);\n  var n,\n      i = (n - 1) * p,\n      i0 = Math.floor(i),\n      value0 = +valueof(values[i0], i0, values),\n      value1 = +valueof(values[i0 + 1], i0 + 1, values);\n  return value0 + (value1 - value0) * (i - i0);\n}\n","export default function(values, valueof) {\n  var n = values.length,\n      i = -1,\n      value,\n      max;\n\n  if (valueof == null) {\n    while (++i < n) { // Find the first comparable value.\n      if ((value = values[i]) != null && value >= value) {\n        max = value;\n        while (++i < n) { // Compare the remaining values.\n          if ((value = values[i]) != null && value > max) {\n            max = value;\n          }\n        }\n      }\n    }\n  }\n\n  else {\n    while (++i < n) { // Find the first comparable value.\n      if ((value = valueof(values[i], i, values)) != null && value >= value) {\n        max = value;\n        while (++i < n) { // Compare the remaining values.\n          if ((value = valueof(values[i], i, values)) != null && value > max) {\n            max = value;\n          }\n        }\n      }\n    }\n  }\n\n  return max;\n}\n","export default function(values, valueof) {\n  var n = values.length,\n      i = -1,\n      value,\n      min;\n\n  if (valueof == null) {\n    while (++i < n) { // Find the first comparable value.\n      if ((value = values[i]) != null && value >= value) {\n        min = value;\n        while (++i < n) { // Compare the remaining values.\n          if ((value = values[i]) != null && min > value) {\n            min = value;\n          }\n        }\n      }\n    }\n  }\n\n  else {\n    while (++i < n) { // Find the first comparable value.\n      if ((value = valueof(values[i], i, values)) != null && value >= value) {\n        min = value;\n        while (++i < n) { // Compare the remaining values.\n          if ((value = valueof(values[i], i, values)) != null && min > value) {\n            min = value;\n          }\n        }\n      }\n    }\n  }\n\n  return min;\n}\n","export {default as bisect, bisectRight, bisectLeft} from \"./bisect\";\nexport {default as ascending} from \"./ascending\";\nexport {default as bisector} from \"./bisector\";\nexport {default as cross} from \"./cross\";\nexport {default as descending} from \"./descending\";\nexport {default as deviation} from \"./deviation\";\nexport {default as extent} from \"./extent\";\nexport {default as histogram} from \"./histogram\";\nexport {default as thresholdFreedmanDiaconis} from \"./threshold/freedmanDiaconis\";\nexport {default as thresholdScott} from \"./threshold/scott\";\nexport {default as thresholdSturges} from \"./threshold/sturges\";\nexport {default as max} from \"./max\";\nexport {default as mean} from \"./mean\";\nexport {default as median} from \"./median\";\nexport {default as merge} from \"./merge\";\nexport {default as min} from \"./min\";\nexport {default as pairs} from \"./pairs\";\nexport {default as permute} from \"./permute\";\nexport {default as quantile} from \"./quantile\";\nexport {default as range} from \"./range\";\nexport {default as scan} from \"./scan\";\nexport {default as shuffle} from \"./shuffle\";\nexport {default as sum} from \"./sum\";\nexport {default as ticks, tickIncrement, tickStep} from \"./ticks\";\nexport {default as transpose} from \"./transpose\";\nexport {default as variance} from \"./variance\";\nexport {default as zip} from \"./zip\";\n","export var prefix = \"$\";\n\nfunction Map() {}\n\nMap.prototype = map.prototype = {\n  constructor: Map,\n  has: function(key) {\n    return (prefix + key) in this;\n  },\n  get: function(key) {\n    return this[prefix + key];\n  },\n  set: function(key, value) {\n    this[prefix + key] = value;\n    return this;\n  },\n  remove: function(key) {\n    var property = prefix + key;\n    return property in this && delete this[property];\n  },\n  clear: function() {\n    for (var property in this) if (property[0] === prefix) delete this[property];\n  },\n  keys: function() {\n    var keys = [];\n    for (var property in this) if (property[0] === prefix) keys.push(property.slice(1));\n    return keys;\n  },\n  values: function() {\n    var values = [];\n    for (var property in this) if (property[0] === prefix) values.push(this[property]);\n    return values;\n  },\n  entries: function() {\n    var entries = [];\n    for (var property in this) if (property[0] === prefix) entries.push({key: property.slice(1), value: this[property]});\n    return entries;\n  },\n  size: function() {\n    var size = 0;\n    for (var property in this) if (property[0] === prefix) ++size;\n    return size;\n  },\n  empty: function() {\n    for (var property in this) if (property[0] === prefix) return false;\n    return true;\n  },\n  each: function(f) {\n    for (var property in this) if (property[0] === prefix) f(this[property], property.slice(1), this);\n  }\n};\n\nfunction map(object, f) {\n  var map = new Map;\n\n  // Copy constructor.\n  if (object instanceof Map) object.each(function(value, key) { map.set(key, value); });\n\n  // Index array by numeric index or specified key function.\n  else if (Array.isArray(object)) {\n    var i = -1,\n        n = object.length,\n        o;\n\n    if (f == null) while (++i < n) map.set(i, object[i]);\n    else while (++i < n) map.set(f(o = object[i], i, object), o);\n  }\n\n  // Convert object to map.\n  else if (object) for (var key in object) map.set(key, object[key]);\n\n  return map;\n}\n\nexport default map;\n","import {default as map, prefix} from \"./map\";\n\nfunction Set() {}\n\nvar proto = map.prototype;\n\nSet.prototype = set.prototype = {\n  constructor: Set,\n  has: proto.has,\n  add: function(value) {\n    value += \"\";\n    this[prefix + value] = value;\n    return this;\n  },\n  remove: proto.remove,\n  clear: proto.clear,\n  values: proto.keys,\n  size: proto.size,\n  empty: proto.empty,\n  each: proto.each\n};\n\nfunction set(object, f) {\n  var set = new Set;\n\n  // Copy constructor.\n  if (object instanceof Set) object.each(function(value) { set.add(value); });\n\n  // Otherwise, assume it’s an array.\n  else if (object) {\n    var i = -1, n = object.length;\n    if (f == null) while (++i < n) set.add(object[i]);\n    else while (++i < n) set.add(f(object[i], i, object));\n  }\n\n  return set;\n}\n\nexport default set;\n","var array = Array.prototype;\n\nexport var map = array.map;\nexport var slice = array.slice;\n","import {map} from \"d3-collection\";\nimport {slice} from \"./array\";\n\nexport var implicit = {name: \"implicit\"};\n\nexport default function ordinal(range) {\n  var index = map(),\n      domain = [],\n      unknown = implicit;\n\n  range = range == null ? [] : slice.call(range);\n\n  function scale(d) {\n    var key = d + \"\", i = index.get(key);\n    if (!i) {\n      if (unknown !== implicit) return unknown;\n      index.set(key, i = domain.push(d));\n    }\n    return range[(i - 1) % range.length];\n  }\n\n  scale.domain = function(_) {\n    if (!arguments.length) return domain.slice();\n    domain = [], index = map();\n    var i = -1, n = _.length, d, key;\n    while (++i < n) if (!index.has(key = (d = _[i]) + \"\")) index.set(key, domain.push(d));\n    return scale;\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = slice.call(_), scale) : range.slice();\n  };\n\n  scale.unknown = function(_) {\n    return arguments.length ? (unknown = _, scale) : unknown;\n  };\n\n  scale.copy = function() {\n    return ordinal()\n        .domain(domain)\n        .range(range)\n        .unknown(unknown);\n  };\n\n  return scale;\n}\n","import {range as sequence} from \"d3-array\";\nimport ordinal from \"./ordinal\";\n\nexport default function band() {\n  var scale = ordinal().unknown(undefined),\n      domain = scale.domain,\n      ordinalRange = scale.range,\n      range = [0, 1],\n      step,\n      bandwidth,\n      round = false,\n      paddingInner = 0,\n      paddingOuter = 0,\n      align = 0.5;\n\n  delete scale.unknown;\n\n  function rescale() {\n    var n = domain().length,\n        reverse = range[1] < range[0],\n        start = range[reverse - 0],\n        stop = range[1 - reverse];\n    step = (stop - start) / Math.max(1, n - paddingInner + paddingOuter * 2);\n    if (round) step = Math.floor(step);\n    start += (stop - start - step * (n - paddingInner)) * align;\n    bandwidth = step * (1 - paddingInner);\n    if (round) start = Math.round(start), bandwidth = Math.round(bandwidth);\n    var values = sequence(n).map(function(i) { return start + step * i; });\n    return ordinalRange(reverse ? values.reverse() : values);\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain(_), rescale()) : domain();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = [+_[0], +_[1]], rescale()) : range.slice();\n  };\n\n  scale.rangeRound = function(_) {\n    return range = [+_[0], +_[1]], round = true, rescale();\n  };\n\n  scale.bandwidth = function() {\n    return bandwidth;\n  };\n\n  scale.step = function() {\n    return step;\n  };\n\n  scale.round = function(_) {\n    return arguments.length ? (round = !!_, rescale()) : round;\n  };\n\n  scale.padding = function(_) {\n    return arguments.length ? (paddingInner = paddingOuter = Math.max(0, Math.min(1, _)), rescale()) : paddingInner;\n  };\n\n  scale.paddingInner = function(_) {\n    return arguments.length ? (paddingInner = Math.max(0, Math.min(1, _)), rescale()) : paddingInner;\n  };\n\n  scale.paddingOuter = function(_) {\n    return arguments.length ? (paddingOuter = Math.max(0, Math.min(1, _)), rescale()) : paddingOuter;\n  };\n\n  scale.align = function(_) {\n    return arguments.length ? (align = Math.max(0, Math.min(1, _)), rescale()) : align;\n  };\n\n  scale.copy = function() {\n    return band()\n        .domain(domain())\n        .range(range)\n        .round(round)\n        .paddingInner(paddingInner)\n        .paddingOuter(paddingOuter)\n        .align(align);\n  };\n\n  return rescale();\n}\n\nfunction pointish(scale) {\n  var copy = scale.copy;\n\n  scale.padding = scale.paddingOuter;\n  delete scale.paddingInner;\n  delete scale.paddingOuter;\n\n  scale.copy = function() {\n    return pointish(copy());\n  };\n\n  return scale;\n}\n\nexport function point() {\n  return pointish(band().paddingInner(1));\n}\n","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n","export default function(x) {\n  return +x;\n}\n","import {bisect} from \"d3-array\";\nimport {interpolate as interpolateValue, interpolateRound} from \"d3-interpolate\";\nimport {map, slice} from \"./array\";\nimport constant from \"./constant\";\nimport number from \"./number\";\n\nvar unit = [0, 1];\n\nexport function deinterpolateLinear(a, b) {\n  return (b -= (a = +a))\n      ? function(x) { return (x - a) / b; }\n      : constant(b);\n}\n\nfunction deinterpolateClamp(deinterpolate) {\n  return function(a, b) {\n    var d = deinterpolate(a = +a, b = +b);\n    return function(x) { return x <= a ? 0 : x >= b ? 1 : d(x); };\n  };\n}\n\nfunction reinterpolateClamp(reinterpolate) {\n  return function(a, b) {\n    var r = reinterpolate(a = +a, b = +b);\n    return function(t) { return t <= 0 ? a : t >= 1 ? b : r(t); };\n  };\n}\n\nfunction bimap(domain, range, deinterpolate, reinterpolate) {\n  var d0 = domain[0], d1 = domain[1], r0 = range[0], r1 = range[1];\n  if (d1 < d0) d0 = deinterpolate(d1, d0), r0 = reinterpolate(r1, r0);\n  else d0 = deinterpolate(d0, d1), r0 = reinterpolate(r0, r1);\n  return function(x) { return r0(d0(x)); };\n}\n\nfunction polymap(domain, range, deinterpolate, reinterpolate) {\n  var j = Math.min(domain.length, range.length) - 1,\n      d = new Array(j),\n      r = new Array(j),\n      i = -1;\n\n  // Reverse descending domains.\n  if (domain[j] < domain[0]) {\n    domain = domain.slice().reverse();\n    range = range.slice().reverse();\n  }\n\n  while (++i < j) {\n    d[i] = deinterpolate(domain[i], domain[i + 1]);\n    r[i] = reinterpolate(range[i], range[i + 1]);\n  }\n\n  return function(x) {\n    var i = bisect(domain, x, 1, j) - 1;\n    return r[i](d[i](x));\n  };\n}\n\nexport function copy(source, target) {\n  return target\n      .domain(source.domain())\n      .range(source.range())\n      .interpolate(source.interpolate())\n      .clamp(source.clamp());\n}\n\n// deinterpolate(a, b)(x) takes a domain value x in [a,b] and returns the corresponding parameter t in [0,1].\n// reinterpolate(a, b)(t) takes a parameter t in [0,1] and returns the corresponding domain value x in [a,b].\nexport default function continuous(deinterpolate, reinterpolate) {\n  var domain = unit,\n      range = unit,\n      interpolate = interpolateValue,\n      clamp = false,\n      piecewise,\n      output,\n      input;\n\n  function rescale() {\n    piecewise = Math.min(domain.length, range.length) > 2 ? polymap : bimap;\n    output = input = null;\n    return scale;\n  }\n\n  function scale(x) {\n    return (output || (output = piecewise(domain, range, clamp ? deinterpolateClamp(deinterpolate) : deinterpolate, interpolate)))(+x);\n  }\n\n  scale.invert = function(y) {\n    return (input || (input = piecewise(range, domain, deinterpolateLinear, clamp ? reinterpolateClamp(reinterpolate) : reinterpolate)))(+y);\n  };\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain = map.call(_, number), rescale()) : domain.slice();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = slice.call(_), rescale()) : range.slice();\n  };\n\n  scale.rangeRound = function(_) {\n    return range = slice.call(_), interpolate = interpolateRound, rescale();\n  };\n\n  scale.clamp = function(_) {\n    return arguments.length ? (clamp = !!_, rescale()) : clamp;\n  };\n\n  scale.interpolate = function(_) {\n    return arguments.length ? (interpolate = _, rescale()) : interpolate;\n  };\n\n  return rescale();\n}\n","// Computes the decimal coefficient and exponent of the specified number x with\n// significant digits p, where x is positive and p is in [1, 21] or undefined.\n// For example, formatDecimal(1.23) returns [\"123\", 0].\nexport default function(x, p) {\n  if ((i = (x = p ? x.toExponential(p - 1) : x.toExponential()).indexOf(\"e\")) < 0) return null; // NaN, ±Infinity\n  var i, coefficient = x.slice(0, i);\n\n  // The string returned by toExponential either has the form \\d\\.\\d+e[-+]\\d+\n  // (e.g., 1.2e+3) or the form \\de[-+]\\d+ (e.g., 1e+3).\n  return [\n    coefficient.length > 1 ? coefficient[0] + coefficient.slice(2) : coefficient,\n    +x.slice(i + 1)\n  ];\n}\n","import formatDecimal from \"./formatDecimal\";\n\nexport default function(x) {\n  return x = formatDecimal(Math.abs(x)), x ? x[1] : NaN;\n}\n","// [[fill]align][sign][symbol][0][width][,][.precision][~][type]\nvar re = /^(?:(.)?([<>=^]))?([+\\-( ])?([$#])?(0)?(\\d+)?(,)?(\\.\\d+)?(~)?([a-z%])?$/i;\n\nexport default function formatSpecifier(specifier) {\n  return new FormatSpecifier(specifier);\n}\n\nformatSpecifier.prototype = FormatSpecifier.prototype; // instanceof\n\nfunction FormatSpecifier(specifier) {\n  if (!(match = re.exec(specifier))) throw new Error(\"invalid format: \" + specifier);\n  var match;\n  this.fill = match[1] || \" \";\n  this.align = match[2] || \">\";\n  this.sign = match[3] || \"-\";\n  this.symbol = match[4] || \"\";\n  this.zero = !!match[5];\n  this.width = match[6] && +match[6];\n  this.comma = !!match[7];\n  this.precision = match[8] && +match[8].slice(1);\n  this.trim = !!match[9];\n  this.type = match[10] || \"\";\n}\n\nFormatSpecifier.prototype.toString = function() {\n  return this.fill\n      + this.align\n      + this.sign\n      + this.symbol\n      + (this.zero ? \"0\" : \"\")\n      + (this.width == null ? \"\" : Math.max(1, this.width | 0))\n      + (this.comma ? \",\" : \"\")\n      + (this.precision == null ? \"\" : \".\" + Math.max(0, this.precision | 0))\n      + (this.trim ? \"~\" : \"\")\n      + this.type;\n};\n","// Trims insignificant zeros, e.g., replaces 1.2000k with 1.2k.\nexport default function(s) {\n  out: for (var n = s.length, i = 1, i0 = -1, i1; i < n; ++i) {\n    switch (s[i]) {\n      case \".\": i0 = i1 = i; break;\n      case \"0\": if (i0 === 0) i0 = i; i1 = i; break;\n      default: if (i0 > 0) { if (!+s[i]) break out; i0 = 0; } break;\n    }\n  }\n  return i0 > 0 ? s.slice(0, i0) + s.slice(i1 + 1) : s;\n}\n","import formatDecimal from \"./formatDecimal\";\n\nexport var prefixExponent;\n\nexport default function(x, p) {\n  var d = formatDecimal(x, p);\n  if (!d) return x + \"\";\n  var coefficient = d[0],\n      exponent = d[1],\n      i = exponent - (prefixExponent = Math.max(-8, Math.min(8, Math.floor(exponent / 3))) * 3) + 1,\n      n = coefficient.length;\n  return i === n ? coefficient\n      : i > n ? coefficient + new Array(i - n + 1).join(\"0\")\n      : i > 0 ? coefficient.slice(0, i) + \".\" + coefficient.slice(i)\n      : \"0.\" + new Array(1 - i).join(\"0\") + formatDecimal(x, Math.max(0, p + i - 1))[0]; // less than 1y!\n}\n","import formatLocale from \"./locale\";\n\nvar locale;\nexport var format;\nexport var formatPrefix;\n\ndefaultLocale({\n  decimal: \".\",\n  thousands: \",\",\n  grouping: [3],\n  currency: [\"$\", \"\"]\n});\n\nexport default function defaultLocale(definition) {\n  locale = formatLocale(definition);\n  format = locale.format;\n  formatPrefix = locale.formatPrefix;\n  return locale;\n}\n","import formatDecimal from \"./formatDecimal\";\n\nexport default function(x, p) {\n  var d = formatDecimal(x, p);\n  if (!d) return x + \"\";\n  var coefficient = d[0],\n      exponent = d[1];\n  return exponent < 0 ? \"0.\" + new Array(-exponent).join(\"0\") + coefficient\n      : coefficient.length > exponent + 1 ? coefficient.slice(0, exponent + 1) + \".\" + coefficient.slice(exponent + 1)\n      : coefficient + new Array(exponent - coefficient.length + 2).join(\"0\");\n}\n","import formatPrefixAuto from \"./formatPrefixAuto\";\nimport formatRounded from \"./formatRounded\";\n\nexport default {\n  \"%\": function(x, p) { return (x * 100).toFixed(p); },\n  \"b\": function(x) { return Math.round(x).toString(2); },\n  \"c\": function(x) { return x + \"\"; },\n  \"d\": function(x) { return Math.round(x).toString(10); },\n  \"e\": function(x, p) { return x.toExponential(p); },\n  \"f\": function(x, p) { return x.toFixed(p); },\n  \"g\": function(x, p) { return x.toPrecision(p); },\n  \"o\": function(x) { return Math.round(x).toString(8); },\n  \"p\": function(x, p) { return formatRounded(x * 100, p); },\n  \"r\": formatRounded,\n  \"s\": formatPrefixAuto,\n  \"X\": function(x) { return Math.round(x).toString(16).toUpperCase(); },\n  \"x\": function(x) { return Math.round(x).toString(16); }\n};\n","export default function(x) {\n  return x;\n}\n","import exponent from \"./exponent\";\nimport formatGroup from \"./formatGroup\";\nimport formatNumerals from \"./formatNumerals\";\nimport formatSpecifier from \"./formatSpecifier\";\nimport formatTrim from \"./formatTrim\";\nimport formatTypes from \"./formatTypes\";\nimport {prefixExponent} from \"./formatPrefixAuto\";\nimport identity from \"./identity\";\n\nvar prefixes = [\"y\",\"z\",\"a\",\"f\",\"p\",\"n\",\"µ\",\"m\",\"\",\"k\",\"M\",\"G\",\"T\",\"P\",\"E\",\"Z\",\"Y\"];\n\nexport default function(locale) {\n  var group = locale.grouping && locale.thousands ? formatGroup(locale.grouping, locale.thousands) : identity,\n      currency = locale.currency,\n      decimal = locale.decimal,\n      numerals = locale.numerals ? formatNumerals(locale.numerals) : identity,\n      percent = locale.percent || \"%\";\n\n  function newFormat(specifier) {\n    specifier = formatSpecifier(specifier);\n\n    var fill = specifier.fill,\n        align = specifier.align,\n        sign = specifier.sign,\n        symbol = specifier.symbol,\n        zero = specifier.zero,\n        width = specifier.width,\n        comma = specifier.comma,\n        precision = specifier.precision,\n        trim = specifier.trim,\n        type = specifier.type;\n\n    // The \"n\" type is an alias for \",g\".\n    if (type === \"n\") comma = true, type = \"g\";\n\n    // The \"\" type, and any invalid type, is an alias for \".12~g\".\n    else if (!formatTypes[type]) precision == null && (precision = 12), trim = true, type = \"g\";\n\n    // If zero fill is specified, padding goes after sign and before digits.\n    if (zero || (fill === \"0\" && align === \"=\")) zero = true, fill = \"0\", align = \"=\";\n\n    // Compute the prefix and suffix.\n    // For SI-prefix, the suffix is lazily computed.\n    var prefix = symbol === \"$\" ? currency[0] : symbol === \"#\" && /[boxX]/.test(type) ? \"0\" + type.toLowerCase() : \"\",\n        suffix = symbol === \"$\" ? currency[1] : /[%p]/.test(type) ? percent : \"\";\n\n    // What format function should we use?\n    // Is this an integer type?\n    // Can this type generate exponential notation?\n    var formatType = formatTypes[type],\n        maybeSuffix = /[defgprs%]/.test(type);\n\n    // Set the default precision if not specified,\n    // or clamp the specified precision to the supported range.\n    // For significant precision, it must be in [1, 21].\n    // For fixed precision, it must be in [0, 20].\n    precision = precision == null ? 6\n        : /[gprs]/.test(type) ? Math.max(1, Math.min(21, precision))\n        : Math.max(0, Math.min(20, precision));\n\n    function format(value) {\n      var valuePrefix = prefix,\n          valueSuffix = suffix,\n          i, n, c;\n\n      if (type === \"c\") {\n        valueSuffix = formatType(value) + valueSuffix;\n        value = \"\";\n      } else {\n        value = +value;\n\n        // Perform the initial formatting.\n        var valueNegative = value < 0;\n        value = formatType(Math.abs(value), precision);\n\n        // Trim insignificant zeros.\n        if (trim) value = formatTrim(value);\n\n        // If a negative value rounds to zero during formatting, treat as positive.\n        if (valueNegative && +value === 0) valueNegative = false;\n\n        // Compute the prefix and suffix.\n        valuePrefix = (valueNegative ? (sign === \"(\" ? sign : \"-\") : sign === \"-\" || sign === \"(\" ? \"\" : sign) + valuePrefix;\n        valueSuffix = (type === \"s\" ? prefixes[8 + prefixExponent / 3] : \"\") + valueSuffix + (valueNegative && sign === \"(\" ? \")\" : \"\");\n\n        // Break the formatted value into the integer “value” part that can be\n        // grouped, and fractional or exponential “suffix” part that is not.\n        if (maybeSuffix) {\n          i = -1, n = value.length;\n          while (++i < n) {\n            if (c = value.charCodeAt(i), 48 > c || c > 57) {\n              valueSuffix = (c === 46 ? decimal + value.slice(i + 1) : value.slice(i)) + valueSuffix;\n              value = value.slice(0, i);\n              break;\n            }\n          }\n        }\n      }\n\n      // If the fill character is not \"0\", grouping is applied before padding.\n      if (comma && !zero) value = group(value, Infinity);\n\n      // Compute the padding.\n      var length = valuePrefix.length + value.length + valueSuffix.length,\n          padding = length < width ? new Array(width - length + 1).join(fill) : \"\";\n\n      // If the fill character is \"0\", grouping is applied after padding.\n      if (comma && zero) value = group(padding + value, padding.length ? width - valueSuffix.length : Infinity), padding = \"\";\n\n      // Reconstruct the final output based on the desired alignment.\n      switch (align) {\n        case \"<\": value = valuePrefix + value + valueSuffix + padding; break;\n        case \"=\": value = valuePrefix + padding + value + valueSuffix; break;\n        case \"^\": value = padding.slice(0, length = padding.length >> 1) + valuePrefix + value + valueSuffix + padding.slice(length); break;\n        default: value = padding + valuePrefix + value + valueSuffix; break;\n      }\n\n      return numerals(value);\n    }\n\n    format.toString = function() {\n      return specifier + \"\";\n    };\n\n    return format;\n  }\n\n  function formatPrefix(specifier, value) {\n    var f = newFormat((specifier = formatSpecifier(specifier), specifier.type = \"f\", specifier)),\n        e = Math.max(-8, Math.min(8, Math.floor(exponent(value) / 3))) * 3,\n        k = Math.pow(10, -e),\n        prefix = prefixes[8 + e / 3];\n    return function(value) {\n      return f(k * value) + prefix;\n    };\n  }\n\n  return {\n    format: newFormat,\n    formatPrefix: formatPrefix\n  };\n}\n","export default function(grouping, thousands) {\n  return function(value, width) {\n    var i = value.length,\n        t = [],\n        j = 0,\n        g = grouping[0],\n        length = 0;\n\n    while (i > 0 && g > 0) {\n      if (length + g + 1 > width) g = Math.max(1, width - length);\n      t.push(value.substring(i -= g, i + g));\n      if ((length += g + 1) > width) break;\n      g = grouping[j = (j + 1) % grouping.length];\n    }\n\n    return t.reverse().join(thousands);\n  };\n}\n","export default function(numerals) {\n  return function(value) {\n    return value.replace(/[0-9]/g, function(i) {\n      return numerals[+i];\n    });\n  };\n}\n","import exponent from \"./exponent\";\n\nexport default function(step) {\n  return Math.max(0, -exponent(Math.abs(step)));\n}\n","import {tickStep} from \"d3-array\";\nimport {format, formatPrefix, formatSpecifier, precisionFixed, precisionPrefix, precisionRound} from \"d3-format\";\n\nexport default function(domain, count, specifier) {\n  var start = domain[0],\n      stop = domain[domain.length - 1],\n      step = tickStep(start, stop, count == null ? 10 : count),\n      precision;\n  specifier = formatSpecifier(specifier == null ? \",f\" : specifier);\n  switch (specifier.type) {\n    case \"s\": {\n      var value = Math.max(Math.abs(start), Math.abs(stop));\n      if (specifier.precision == null && !isNaN(precision = precisionPrefix(step, value))) specifier.precision = precision;\n      return formatPrefix(specifier, value);\n    }\n    case \"\":\n    case \"e\":\n    case \"g\":\n    case \"p\":\n    case \"r\": {\n      if (specifier.precision == null && !isNaN(precision = precisionRound(step, Math.max(Math.abs(start), Math.abs(stop))))) specifier.precision = precision - (specifier.type === \"e\");\n      break;\n    }\n    case \"f\":\n    case \"%\": {\n      if (specifier.precision == null && !isNaN(precision = precisionFixed(step))) specifier.precision = precision - (specifier.type === \"%\") * 2;\n      break;\n    }\n  }\n  return format(specifier);\n}\n","import exponent from \"./exponent\";\n\nexport default function(step, value) {\n  return Math.max(0, Math.max(-8, Math.min(8, Math.floor(exponent(value) / 3))) * 3 - exponent(Math.abs(step)));\n}\n","import exponent from \"./exponent\";\n\nexport default function(step, max) {\n  step = Math.abs(step), max = Math.abs(max) - step;\n  return Math.max(0, exponent(max) - exponent(step)) + 1;\n}\n","import {ticks, tickIncrement} from \"d3-array\";\nimport {interpolateNumber as reinterpolate} from \"d3-interpolate\";\nimport {default as continuous, copy, deinterpolateLinear as deinterpolate} from \"./continuous\";\nimport tickFormat from \"./tickFormat\";\n\nexport function linearish(scale) {\n  var domain = scale.domain;\n\n  scale.ticks = function(count) {\n    var d = domain();\n    return ticks(d[0], d[d.length - 1], count == null ? 10 : count);\n  };\n\n  scale.tickFormat = function(count, specifier) {\n    return tickFormat(domain(), count, specifier);\n  };\n\n  scale.nice = function(count) {\n    if (count == null) count = 10;\n\n    var d = domain(),\n        i0 = 0,\n        i1 = d.length - 1,\n        start = d[i0],\n        stop = d[i1],\n        step;\n\n    if (stop < start) {\n      step = start, start = stop, stop = step;\n      step = i0, i0 = i1, i1 = step;\n    }\n\n    step = tickIncrement(start, stop, count);\n\n    if (step > 0) {\n      start = Math.floor(start / step) * step;\n      stop = Math.ceil(stop / step) * step;\n      step = tickIncrement(start, stop, count);\n    } else if (step < 0) {\n      start = Math.ceil(start * step) / step;\n      stop = Math.floor(stop * step) / step;\n      step = tickIncrement(start, stop, count);\n    }\n\n    if (step > 0) {\n      d[i0] = Math.floor(start / step) * step;\n      d[i1] = Math.ceil(stop / step) * step;\n      domain(d);\n    } else if (step < 0) {\n      d[i0] = Math.ceil(start * step) / step;\n      d[i1] = Math.floor(stop * step) / step;\n      domain(d);\n    }\n\n    return scale;\n  };\n\n  return scale;\n}\n\nexport default function linear() {\n  var scale = continuous(deinterpolate, reinterpolate);\n\n  scale.copy = function() {\n    return copy(scale, linear());\n  };\n\n  return linearish(scale);\n}\n","export default function(domain, interval) {\n  domain = domain.slice();\n\n  var i0 = 0,\n      i1 = domain.length - 1,\n      x0 = domain[i0],\n      x1 = domain[i1],\n      t;\n\n  if (x1 < x0) {\n    t = i0, i0 = i1, i1 = t;\n    t = x0, x0 = x1, x1 = t;\n  }\n\n  domain[i0] = interval.floor(x0);\n  domain[i1] = interval.ceil(x1);\n  return domain;\n}\n","var t0 = new Date,\n    t1 = new Date;\n\nexport default function newInterval(floori, offseti, count, field) {\n\n  function interval(date) {\n    return floori(date = new Date(+date)), date;\n  }\n\n  interval.floor = interval;\n\n  interval.ceil = function(date) {\n    return floori(date = new Date(date - 1)), offseti(date, 1), floori(date), date;\n  };\n\n  interval.round = function(date) {\n    var d0 = interval(date),\n        d1 = interval.ceil(date);\n    return date - d0 < d1 - date ? d0 : d1;\n  };\n\n  interval.offset = function(date, step) {\n    return offseti(date = new Date(+date), step == null ? 1 : Math.floor(step)), date;\n  };\n\n  interval.range = function(start, stop, step) {\n    var range = [], previous;\n    start = interval.ceil(start);\n    step = step == null ? 1 : Math.floor(step);\n    if (!(start < stop) || !(step > 0)) return range; // also handles Invalid Date\n    do range.push(previous = new Date(+start)), offseti(start, step), floori(start);\n    while (previous < start && start < stop);\n    return range;\n  };\n\n  interval.filter = function(test) {\n    return newInterval(function(date) {\n      if (date >= date) while (floori(date), !test(date)) date.setTime(date - 1);\n    }, function(date, step) {\n      if (date >= date) {\n        if (step < 0) while (++step <= 0) {\n          while (offseti(date, -1), !test(date)) {} // eslint-disable-line no-empty\n        } else while (--step >= 0) {\n          while (offseti(date, +1), !test(date)) {} // eslint-disable-line no-empty\n        }\n      }\n    });\n  };\n\n  if (count) {\n    interval.count = function(start, end) {\n      t0.setTime(+start), t1.setTime(+end);\n      floori(t0), floori(t1);\n      return Math.floor(count(t0, t1));\n    };\n\n    interval.every = function(step) {\n      step = Math.floor(step);\n      return !isFinite(step) || !(step > 0) ? null\n          : !(step > 1) ? interval\n          : interval.filter(field\n              ? function(d) { return field(d) % step === 0; }\n              : function(d) { return interval.count(0, d) % step === 0; });\n    };\n  }\n\n  return interval;\n}\n","import interval from \"./interval\";\n\nvar millisecond = interval(function() {\n  // noop\n}, function(date, step) {\n  date.setTime(+date + step);\n}, function(start, end) {\n  return end - start;\n});\n\n// An optimized implementation for this simple case.\nmillisecond.every = function(k) {\n  k = Math.floor(k);\n  if (!isFinite(k) || !(k > 0)) return null;\n  if (!(k > 1)) return millisecond;\n  return interval(function(date) {\n    date.setTime(Math.floor(date / k) * k);\n  }, function(date, step) {\n    date.setTime(+date + step * k);\n  }, function(start, end) {\n    return (end - start) / k;\n  });\n};\n\nexport default millisecond;\nexport var milliseconds = millisecond.range;\n","export var durationSecond = 1e3;\nexport var durationMinute = 6e4;\nexport var durationHour = 36e5;\nexport var durationDay = 864e5;\nexport var durationWeek = 6048e5;\n","import interval from \"./interval\";\nimport {durationSecond} from \"./duration\";\n\nvar second = interval(function(date) {\n  date.setTime(date - date.getMilliseconds());\n}, function(date, step) {\n  date.setTime(+date + step * durationSecond);\n}, function(start, end) {\n  return (end - start) / durationSecond;\n}, function(date) {\n  return date.getUTCSeconds();\n});\n\nexport default second;\nexport var seconds = second.range;\n","import interval from \"./interval\";\nimport {durationMinute, durationSecond} from \"./duration\";\n\nvar minute = interval(function(date) {\n  date.setTime(date - date.getMilliseconds() - date.getSeconds() * durationSecond);\n}, function(date, step) {\n  date.setTime(+date + step * durationMinute);\n}, function(start, end) {\n  return (end - start) / durationMinute;\n}, function(date) {\n  return date.getMinutes();\n});\n\nexport default minute;\nexport var minutes = minute.range;\n","import interval from \"./interval\";\nimport {durationHour, durationMinute, durationSecond} from \"./duration\";\n\nvar hour = interval(function(date) {\n  date.setTime(date - date.getMilliseconds() - date.getSeconds() * durationSecond - date.getMinutes() * durationMinute);\n}, function(date, step) {\n  date.setTime(+date + step * durationHour);\n}, function(start, end) {\n  return (end - start) / durationHour;\n}, function(date) {\n  return date.getHours();\n});\n\nexport default hour;\nexport var hours = hour.range;\n","import interval from \"./interval\";\nimport {durationDay, durationMinute} from \"./duration\";\n\nvar day = interval(function(date) {\n  date.setHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setDate(date.getDate() + step);\n}, function(start, end) {\n  return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * durationMinute) / durationDay;\n}, function(date) {\n  return date.getDate() - 1;\n});\n\nexport default day;\nexport var days = day.range;\n","import interval from \"./interval\";\nimport {durationMinute, durationWeek} from \"./duration\";\n\nfunction weekday(i) {\n  return interval(function(date) {\n    date.setDate(date.getDate() - (date.getDay() + 7 - i) % 7);\n    date.setHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setDate(date.getDate() + step * 7);\n  }, function(start, end) {\n    return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * durationMinute) / durationWeek;\n  });\n}\n\nexport var sunday = weekday(0);\nexport var monday = weekday(1);\nexport var tuesday = weekday(2);\nexport var wednesday = weekday(3);\nexport var thursday = weekday(4);\nexport var friday = weekday(5);\nexport var saturday = weekday(6);\n\nexport var sundays = sunday.range;\nexport var mondays = monday.range;\nexport var tuesdays = tuesday.range;\nexport var wednesdays = wednesday.range;\nexport var thursdays = thursday.range;\nexport var fridays = friday.range;\nexport var saturdays = saturday.range;\n","import interval from \"./interval\";\n\nvar month = interval(function(date) {\n  date.setDate(1);\n  date.setHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setMonth(date.getMonth() + step);\n}, function(start, end) {\n  return end.getMonth() - start.getMonth() + (end.getFullYear() - start.getFullYear()) * 12;\n}, function(date) {\n  return date.getMonth();\n});\n\nexport default month;\nexport var months = month.range;\n","import interval from \"./interval\";\n\nvar year = interval(function(date) {\n  date.setMonth(0, 1);\n  date.setHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setFullYear(date.getFullYear() + step);\n}, function(start, end) {\n  return end.getFullYear() - start.getFullYear();\n}, function(date) {\n  return date.getFullYear();\n});\n\n// An optimized implementation for this simple case.\nyear.every = function(k) {\n  return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : interval(function(date) {\n    date.setFullYear(Math.floor(date.getFullYear() / k) * k);\n    date.setMonth(0, 1);\n    date.setHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setFullYear(date.getFullYear() + step * k);\n  });\n};\n\nexport default year;\nexport var years = year.range;\n","import interval from \"./interval\";\nimport {durationMinute} from \"./duration\";\n\nvar utcMinute = interval(function(date) {\n  date.setUTCSeconds(0, 0);\n}, function(date, step) {\n  date.setTime(+date + step * durationMinute);\n}, function(start, end) {\n  return (end - start) / durationMinute;\n}, function(date) {\n  return date.getUTCMinutes();\n});\n\nexport default utcMinute;\nexport var utcMinutes = utcMinute.range;\n","import interval from \"./interval\";\nimport {durationHour} from \"./duration\";\n\nvar utcHour = interval(function(date) {\n  date.setUTCMinutes(0, 0, 0);\n}, function(date, step) {\n  date.setTime(+date + step * durationHour);\n}, function(start, end) {\n  return (end - start) / durationHour;\n}, function(date) {\n  return date.getUTCHours();\n});\n\nexport default utcHour;\nexport var utcHours = utcHour.range;\n","import interval from \"./interval\";\nimport {durationDay} from \"./duration\";\n\nvar utcDay = interval(function(date) {\n  date.setUTCHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setUTCDate(date.getUTCDate() + step);\n}, function(start, end) {\n  return (end - start) / durationDay;\n}, function(date) {\n  return date.getUTCDate() - 1;\n});\n\nexport default utcDay;\nexport var utcDays = utcDay.range;\n","import interval from \"./interval\";\nimport {durationWeek} from \"./duration\";\n\nfunction utcWeekday(i) {\n  return interval(function(date) {\n    date.setUTCDate(date.getUTCDate() - (date.getUTCDay() + 7 - i) % 7);\n    date.setUTCHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setUTCDate(date.getUTCDate() + step * 7);\n  }, function(start, end) {\n    return (end - start) / durationWeek;\n  });\n}\n\nexport var utcSunday = utcWeekday(0);\nexport var utcMonday = utcWeekday(1);\nexport var utcTuesday = utcWeekday(2);\nexport var utcWednesday = utcWeekday(3);\nexport var utcThursday = utcWeekday(4);\nexport var utcFriday = utcWeekday(5);\nexport var utcSaturday = utcWeekday(6);\n\nexport var utcSundays = utcSunday.range;\nexport var utcMondays = utcMonday.range;\nexport var utcTuesdays = utcTuesday.range;\nexport var utcWednesdays = utcWednesday.range;\nexport var utcThursdays = utcThursday.range;\nexport var utcFridays = utcFriday.range;\nexport var utcSaturdays = utcSaturday.range;\n","import interval from \"./interval\";\n\nvar utcMonth = interval(function(date) {\n  date.setUTCDate(1);\n  date.setUTCHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setUTCMonth(date.getUTCMonth() + step);\n}, function(start, end) {\n  return end.getUTCMonth() - start.getUTCMonth() + (end.getUTCFullYear() - start.getUTCFullYear()) * 12;\n}, function(date) {\n  return date.getUTCMonth();\n});\n\nexport default utcMonth;\nexport var utcMonths = utcMonth.range;\n","import interval from \"./interval\";\n\nvar utcYear = interval(function(date) {\n  date.setUTCMonth(0, 1);\n  date.setUTCHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setUTCFullYear(date.getUTCFullYear() + step);\n}, function(start, end) {\n  return end.getUTCFullYear() - start.getUTCFullYear();\n}, function(date) {\n  return date.getUTCFullYear();\n});\n\n// An optimized implementation for this simple case.\nutcYear.every = function(k) {\n  return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : interval(function(date) {\n    date.setUTCFullYear(Math.floor(date.getUTCFullYear() / k) * k);\n    date.setUTCMonth(0, 1);\n    date.setUTCHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setUTCFullYear(date.getUTCFullYear() + step * k);\n  });\n};\n\nexport default utcYear;\nexport var utcYears = utcYear.range;\n","import {\n  timeDay,\n  timeSunday,\n  timeMonday,\n  timeThursday,\n  timeYear,\n  utcDay,\n  utcSunday,\n  utcMonday,\n  utcThursday,\n  utcYear\n} from \"d3-time\";\n\nfunction localDate(d) {\n  if (0 <= d.y && d.y < 100) {\n    var date = new Date(-1, d.m, d.d, d.H, d.M, d.S, d.L);\n    date.setFullYear(d.y);\n    return date;\n  }\n  return new Date(d.y, d.m, d.d, d.H, d.M, d.S, d.L);\n}\n\nfunction utcDate(d) {\n  if (0 <= d.y && d.y < 100) {\n    var date = new Date(Date.UTC(-1, d.m, d.d, d.H, d.M, d.S, d.L));\n    date.setUTCFullYear(d.y);\n    return date;\n  }\n  return new Date(Date.UTC(d.y, d.m, d.d, d.H, d.M, d.S, d.L));\n}\n\nfunction newYear(y) {\n  return {y: y, m: 0, d: 1, H: 0, M: 0, S: 0, L: 0};\n}\n\nexport default function formatLocale(locale) {\n  var locale_dateTime = locale.dateTime,\n      locale_date = locale.date,\n      locale_time = locale.time,\n      locale_periods = locale.periods,\n      locale_weekdays = locale.days,\n      locale_shortWeekdays = locale.shortDays,\n      locale_months = locale.months,\n      locale_shortMonths = locale.shortMonths;\n\n  var periodRe = formatRe(locale_periods),\n      periodLookup = formatLookup(locale_periods),\n      weekdayRe = formatRe(locale_weekdays),\n      weekdayLookup = formatLookup(locale_weekdays),\n      shortWeekdayRe = formatRe(locale_shortWeekdays),\n      shortWeekdayLookup = formatLookup(locale_shortWeekdays),\n      monthRe = formatRe(locale_months),\n      monthLookup = formatLookup(locale_months),\n      shortMonthRe = formatRe(locale_shortMonths),\n      shortMonthLookup = formatLookup(locale_shortMonths);\n\n  var formats = {\n    \"a\": formatShortWeekday,\n    \"A\": formatWeekday,\n    \"b\": formatShortMonth,\n    \"B\": formatMonth,\n    \"c\": null,\n    \"d\": formatDayOfMonth,\n    \"e\": formatDayOfMonth,\n    \"f\": formatMicroseconds,\n    \"H\": formatHour24,\n    \"I\": formatHour12,\n    \"j\": formatDayOfYear,\n    \"L\": formatMilliseconds,\n    \"m\": formatMonthNumber,\n    \"M\": formatMinutes,\n    \"p\": formatPeriod,\n    \"Q\": formatUnixTimestamp,\n    \"s\": formatUnixTimestampSeconds,\n    \"S\": formatSeconds,\n    \"u\": formatWeekdayNumberMonday,\n    \"U\": formatWeekNumberSunday,\n    \"V\": formatWeekNumberISO,\n    \"w\": formatWeekdayNumberSunday,\n    \"W\": formatWeekNumberMonday,\n    \"x\": null,\n    \"X\": null,\n    \"y\": formatYear,\n    \"Y\": formatFullYear,\n    \"Z\": formatZone,\n    \"%\": formatLiteralPercent\n  };\n\n  var utcFormats = {\n    \"a\": formatUTCShortWeekday,\n    \"A\": formatUTCWeekday,\n    \"b\": formatUTCShortMonth,\n    \"B\": formatUTCMonth,\n    \"c\": null,\n    \"d\": formatUTCDayOfMonth,\n    \"e\": formatUTCDayOfMonth,\n    \"f\": formatUTCMicroseconds,\n    \"H\": formatUTCHour24,\n    \"I\": formatUTCHour12,\n    \"j\": formatUTCDayOfYear,\n    \"L\": formatUTCMilliseconds,\n    \"m\": formatUTCMonthNumber,\n    \"M\": formatUTCMinutes,\n    \"p\": formatUTCPeriod,\n    \"Q\": formatUnixTimestamp,\n    \"s\": formatUnixTimestampSeconds,\n    \"S\": formatUTCSeconds,\n    \"u\": formatUTCWeekdayNumberMonday,\n    \"U\": formatUTCWeekNumberSunday,\n    \"V\": formatUTCWeekNumberISO,\n    \"w\": formatUTCWeekdayNumberSunday,\n    \"W\": formatUTCWeekNumberMonday,\n    \"x\": null,\n    \"X\": null,\n    \"y\": formatUTCYear,\n    \"Y\": formatUTCFullYear,\n    \"Z\": formatUTCZone,\n    \"%\": formatLiteralPercent\n  };\n\n  var parses = {\n    \"a\": parseShortWeekday,\n    \"A\": parseWeekday,\n    \"b\": parseShortMonth,\n    \"B\": parseMonth,\n    \"c\": parseLocaleDateTime,\n    \"d\": parseDayOfMonth,\n    \"e\": parseDayOfMonth,\n    \"f\": parseMicroseconds,\n    \"H\": parseHour24,\n    \"I\": parseHour24,\n    \"j\": parseDayOfYear,\n    \"L\": parseMilliseconds,\n    \"m\": parseMonthNumber,\n    \"M\": parseMinutes,\n    \"p\": parsePeriod,\n    \"Q\": parseUnixTimestamp,\n    \"s\": parseUnixTimestampSeconds,\n    \"S\": parseSeconds,\n    \"u\": parseWeekdayNumberMonday,\n    \"U\": parseWeekNumberSunday,\n    \"V\": parseWeekNumberISO,\n    \"w\": parseWeekdayNumberSunday,\n    \"W\": parseWeekNumberMonday,\n    \"x\": parseLocaleDate,\n    \"X\": parseLocaleTime,\n    \"y\": parseYear,\n    \"Y\": parseFullYear,\n    \"Z\": parseZone,\n    \"%\": parseLiteralPercent\n  };\n\n  // These recursive directive definitions must be deferred.\n  formats.x = newFormat(locale_date, formats);\n  formats.X = newFormat(locale_time, formats);\n  formats.c = newFormat(locale_dateTime, formats);\n  utcFormats.x = newFormat(locale_date, utcFormats);\n  utcFormats.X = newFormat(locale_time, utcFormats);\n  utcFormats.c = newFormat(locale_dateTime, utcFormats);\n\n  function newFormat(specifier, formats) {\n    return function(date) {\n      var string = [],\n          i = -1,\n          j = 0,\n          n = specifier.length,\n          c,\n          pad,\n          format;\n\n      if (!(date instanceof Date)) date = new Date(+date);\n\n      while (++i < n) {\n        if (specifier.charCodeAt(i) === 37) {\n          string.push(specifier.slice(j, i));\n          if ((pad = pads[c = specifier.charAt(++i)]) != null) c = specifier.charAt(++i);\n          else pad = c === \"e\" ? \" \" : \"0\";\n          if (format = formats[c]) c = format(date, pad);\n          string.push(c);\n          j = i + 1;\n        }\n      }\n\n      string.push(specifier.slice(j, i));\n      return string.join(\"\");\n    };\n  }\n\n  function newParse(specifier, newDate) {\n    return function(string) {\n      var d = newYear(1900),\n          i = parseSpecifier(d, specifier, string += \"\", 0),\n          week, day;\n      if (i != string.length) return null;\n\n      // If a UNIX timestamp is specified, return it.\n      if (\"Q\" in d) return new Date(d.Q);\n\n      // The am-pm flag is 0 for AM, and 1 for PM.\n      if (\"p\" in d) d.H = d.H % 12 + d.p * 12;\n\n      // Convert day-of-week and week-of-year to day-of-year.\n      if (\"V\" in d) {\n        if (d.V < 1 || d.V > 53) return null;\n        if (!(\"w\" in d)) d.w = 1;\n        if (\"Z\" in d) {\n          week = utcDate(newYear(d.y)), day = week.getUTCDay();\n          week = day > 4 || day === 0 ? utcMonday.ceil(week) : utcMonday(week);\n          week = utcDay.offset(week, (d.V - 1) * 7);\n          d.y = week.getUTCFullYear();\n          d.m = week.getUTCMonth();\n          d.d = week.getUTCDate() + (d.w + 6) % 7;\n        } else {\n          week = newDate(newYear(d.y)), day = week.getDay();\n          week = day > 4 || day === 0 ? timeMonday.ceil(week) : timeMonday(week);\n          week = timeDay.offset(week, (d.V - 1) * 7);\n          d.y = week.getFullYear();\n          d.m = week.getMonth();\n          d.d = week.getDate() + (d.w + 6) % 7;\n        }\n      } else if (\"W\" in d || \"U\" in d) {\n        if (!(\"w\" in d)) d.w = \"u\" in d ? d.u % 7 : \"W\" in d ? 1 : 0;\n        day = \"Z\" in d ? utcDate(newYear(d.y)).getUTCDay() : newDate(newYear(d.y)).getDay();\n        d.m = 0;\n        d.d = \"W\" in d ? (d.w + 6) % 7 + d.W * 7 - (day + 5) % 7 : d.w + d.U * 7 - (day + 6) % 7;\n      }\n\n      // If a time zone is specified, all fields are interpreted as UTC and then\n      // offset according to the specified time zone.\n      if (\"Z\" in d) {\n        d.H += d.Z / 100 | 0;\n        d.M += d.Z % 100;\n        return utcDate(d);\n      }\n\n      // Otherwise, all fields are in local time.\n      return newDate(d);\n    };\n  }\n\n  function parseSpecifier(d, specifier, string, j) {\n    var i = 0,\n        n = specifier.length,\n        m = string.length,\n        c,\n        parse;\n\n    while (i < n) {\n      if (j >= m) return -1;\n      c = specifier.charCodeAt(i++);\n      if (c === 37) {\n        c = specifier.charAt(i++);\n        parse = parses[c in pads ? specifier.charAt(i++) : c];\n        if (!parse || ((j = parse(d, string, j)) < 0)) return -1;\n      } else if (c != string.charCodeAt(j++)) {\n        return -1;\n      }\n    }\n\n    return j;\n  }\n\n  function parsePeriod(d, string, i) {\n    var n = periodRe.exec(string.slice(i));\n    return n ? (d.p = periodLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseShortWeekday(d, string, i) {\n    var n = shortWeekdayRe.exec(string.slice(i));\n    return n ? (d.w = shortWeekdayLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseWeekday(d, string, i) {\n    var n = weekdayRe.exec(string.slice(i));\n    return n ? (d.w = weekdayLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseShortMonth(d, string, i) {\n    var n = shortMonthRe.exec(string.slice(i));\n    return n ? (d.m = shortMonthLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseMonth(d, string, i) {\n    var n = monthRe.exec(string.slice(i));\n    return n ? (d.m = monthLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseLocaleDateTime(d, string, i) {\n    return parseSpecifier(d, locale_dateTime, string, i);\n  }\n\n  function parseLocaleDate(d, string, i) {\n    return parseSpecifier(d, locale_date, string, i);\n  }\n\n  function parseLocaleTime(d, string, i) {\n    return parseSpecifier(d, locale_time, string, i);\n  }\n\n  function formatShortWeekday(d) {\n    return locale_shortWeekdays[d.getDay()];\n  }\n\n  function formatWeekday(d) {\n    return locale_weekdays[d.getDay()];\n  }\n\n  function formatShortMonth(d) {\n    return locale_shortMonths[d.getMonth()];\n  }\n\n  function formatMonth(d) {\n    return locale_months[d.getMonth()];\n  }\n\n  function formatPeriod(d) {\n    return locale_periods[+(d.getHours() >= 12)];\n  }\n\n  function formatUTCShortWeekday(d) {\n    return locale_shortWeekdays[d.getUTCDay()];\n  }\n\n  function formatUTCWeekday(d) {\n    return locale_weekdays[d.getUTCDay()];\n  }\n\n  function formatUTCShortMonth(d) {\n    return locale_shortMonths[d.getUTCMonth()];\n  }\n\n  function formatUTCMonth(d) {\n    return locale_months[d.getUTCMonth()];\n  }\n\n  function formatUTCPeriod(d) {\n    return locale_periods[+(d.getUTCHours() >= 12)];\n  }\n\n  return {\n    format: function(specifier) {\n      var f = newFormat(specifier += \"\", formats);\n      f.toString = function() { return specifier; };\n      return f;\n    },\n    parse: function(specifier) {\n      var p = newParse(specifier += \"\", localDate);\n      p.toString = function() { return specifier; };\n      return p;\n    },\n    utcFormat: function(specifier) {\n      var f = newFormat(specifier += \"\", utcFormats);\n      f.toString = function() { return specifier; };\n      return f;\n    },\n    utcParse: function(specifier) {\n      var p = newParse(specifier, utcDate);\n      p.toString = function() { return specifier; };\n      return p;\n    }\n  };\n}\n\nvar pads = {\"-\": \"\", \"_\": \" \", \"0\": \"0\"},\n    numberRe = /^\\s*\\d+/, // note: ignores next directive\n    percentRe = /^%/,\n    requoteRe = /[\\\\^$*+?|[\\]().{}]/g;\n\nfunction pad(value, fill, width) {\n  var sign = value < 0 ? \"-\" : \"\",\n      string = (sign ? -value : value) + \"\",\n      length = string.length;\n  return sign + (length < width ? new Array(width - length + 1).join(fill) + string : string);\n}\n\nfunction requote(s) {\n  return s.replace(requoteRe, \"\\\\$&\");\n}\n\nfunction formatRe(names) {\n  return new RegExp(\"^(?:\" + names.map(requote).join(\"|\") + \")\", \"i\");\n}\n\nfunction formatLookup(names) {\n  var map = {}, i = -1, n = names.length;\n  while (++i < n) map[names[i].toLowerCase()] = i;\n  return map;\n}\n\nfunction parseWeekdayNumberSunday(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 1));\n  return n ? (d.w = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekdayNumberMonday(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 1));\n  return n ? (d.u = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekNumberSunday(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.U = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekNumberISO(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.V = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekNumberMonday(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.W = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseFullYear(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 4));\n  return n ? (d.y = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseYear(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.y = +n[0] + (+n[0] > 68 ? 1900 : 2000), i + n[0].length) : -1;\n}\n\nfunction parseZone(d, string, i) {\n  var n = /^(Z)|([+-]\\d\\d)(?::?(\\d\\d))?/.exec(string.slice(i, i + 6));\n  return n ? (d.Z = n[1] ? 0 : -(n[2] + (n[3] || \"00\")), i + n[0].length) : -1;\n}\n\nfunction parseMonthNumber(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.m = n[0] - 1, i + n[0].length) : -1;\n}\n\nfunction parseDayOfMonth(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.d = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseDayOfYear(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 3));\n  return n ? (d.m = 0, d.d = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseHour24(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.H = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseMinutes(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.M = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseSeconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.S = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseMilliseconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 3));\n  return n ? (d.L = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseMicroseconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 6));\n  return n ? (d.L = Math.floor(n[0] / 1000), i + n[0].length) : -1;\n}\n\nfunction parseLiteralPercent(d, string, i) {\n  var n = percentRe.exec(string.slice(i, i + 1));\n  return n ? i + n[0].length : -1;\n}\n\nfunction parseUnixTimestamp(d, string, i) {\n  var n = numberRe.exec(string.slice(i));\n  return n ? (d.Q = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseUnixTimestampSeconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i));\n  return n ? (d.Q = (+n[0]) * 1000, i + n[0].length) : -1;\n}\n\nfunction formatDayOfMonth(d, p) {\n  return pad(d.getDate(), p, 2);\n}\n\nfunction formatHour24(d, p) {\n  return pad(d.getHours(), p, 2);\n}\n\nfunction formatHour12(d, p) {\n  return pad(d.getHours() % 12 || 12, p, 2);\n}\n\nfunction formatDayOfYear(d, p) {\n  return pad(1 + timeDay.count(timeYear(d), d), p, 3);\n}\n\nfunction formatMilliseconds(d, p) {\n  return pad(d.getMilliseconds(), p, 3);\n}\n\nfunction formatMicroseconds(d, p) {\n  return formatMilliseconds(d, p) + \"000\";\n}\n\nfunction formatMonthNumber(d, p) {\n  return pad(d.getMonth() + 1, p, 2);\n}\n\nfunction formatMinutes(d, p) {\n  return pad(d.getMinutes(), p, 2);\n}\n\nfunction formatSeconds(d, p) {\n  return pad(d.getSeconds(), p, 2);\n}\n\nfunction formatWeekdayNumberMonday(d) {\n  var day = d.getDay();\n  return day === 0 ? 7 : day;\n}\n\nfunction formatWeekNumberSunday(d, p) {\n  return pad(timeSunday.count(timeYear(d), d), p, 2);\n}\n\nfunction formatWeekNumberISO(d, p) {\n  var day = d.getDay();\n  d = (day >= 4 || day === 0) ? timeThursday(d) : timeThursday.ceil(d);\n  return pad(timeThursday.count(timeYear(d), d) + (timeYear(d).getDay() === 4), p, 2);\n}\n\nfunction formatWeekdayNumberSunday(d) {\n  return d.getDay();\n}\n\nfunction formatWeekNumberMonday(d, p) {\n  return pad(timeMonday.count(timeYear(d), d), p, 2);\n}\n\nfunction formatYear(d, p) {\n  return pad(d.getFullYear() % 100, p, 2);\n}\n\nfunction formatFullYear(d, p) {\n  return pad(d.getFullYear() % 10000, p, 4);\n}\n\nfunction formatZone(d) {\n  var z = d.getTimezoneOffset();\n  return (z > 0 ? \"-\" : (z *= -1, \"+\"))\n      + pad(z / 60 | 0, \"0\", 2)\n      + pad(z % 60, \"0\", 2);\n}\n\nfunction formatUTCDayOfMonth(d, p) {\n  return pad(d.getUTCDate(), p, 2);\n}\n\nfunction formatUTCHour24(d, p) {\n  return pad(d.getUTCHours(), p, 2);\n}\n\nfunction formatUTCHour12(d, p) {\n  return pad(d.getUTCHours() % 12 || 12, p, 2);\n}\n\nfunction formatUTCDayOfYear(d, p) {\n  return pad(1 + utcDay.count(utcYear(d), d), p, 3);\n}\n\nfunction formatUTCMilliseconds(d, p) {\n  return pad(d.getUTCMilliseconds(), p, 3);\n}\n\nfunction formatUTCMicroseconds(d, p) {\n  return formatUTCMilliseconds(d, p) + \"000\";\n}\n\nfunction formatUTCMonthNumber(d, p) {\n  return pad(d.getUTCMonth() + 1, p, 2);\n}\n\nfunction formatUTCMinutes(d, p) {\n  return pad(d.getUTCMinutes(), p, 2);\n}\n\nfunction formatUTCSeconds(d, p) {\n  return pad(d.getUTCSeconds(), p, 2);\n}\n\nfunction formatUTCWeekdayNumberMonday(d) {\n  var dow = d.getUTCDay();\n  return dow === 0 ? 7 : dow;\n}\n\nfunction formatUTCWeekNumberSunday(d, p) {\n  return pad(utcSunday.count(utcYear(d), d), p, 2);\n}\n\nfunction formatUTCWeekNumberISO(d, p) {\n  var day = d.getUTCDay();\n  d = (day >= 4 || day === 0) ? utcThursday(d) : utcThursday.ceil(d);\n  return pad(utcThursday.count(utcYear(d), d) + (utcYear(d).getUTCDay() === 4), p, 2);\n}\n\nfunction formatUTCWeekdayNumberSunday(d) {\n  return d.getUTCDay();\n}\n\nfunction formatUTCWeekNumberMonday(d, p) {\n  return pad(utcMonday.count(utcYear(d), d), p, 2);\n}\n\nfunction formatUTCYear(d, p) {\n  return pad(d.getUTCFullYear() % 100, p, 2);\n}\n\nfunction formatUTCFullYear(d, p) {\n  return pad(d.getUTCFullYear() % 10000, p, 4);\n}\n\nfunction formatUTCZone() {\n  return \"+0000\";\n}\n\nfunction formatLiteralPercent() {\n  return \"%\";\n}\n\nfunction formatUnixTimestamp(d) {\n  return +d;\n}\n\nfunction formatUnixTimestampSeconds(d) {\n  return Math.floor(+d / 1000);\n}\n","import formatLocale from \"./locale\";\n\nvar locale;\nexport var timeFormat;\nexport var timeParse;\nexport var utcFormat;\nexport var utcParse;\n\ndefaultLocale({\n  dateTime: \"%x, %X\",\n  date: \"%-m/%-d/%Y\",\n  time: \"%-I:%M:%S %p\",\n  periods: [\"AM\", \"PM\"],\n  days: [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"],\n  shortDays: [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"],\n  months: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"],\n  shortMonths: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"]\n});\n\nexport default function defaultLocale(definition) {\n  locale = formatLocale(definition);\n  timeFormat = locale.format;\n  timeParse = locale.parse;\n  utcFormat = locale.utcFormat;\n  utcParse = locale.utcParse;\n  return locale;\n}\n","import {utcFormat} from \"./defaultLocale\";\n\nexport var isoSpecifier = \"%Y-%m-%dT%H:%M:%S.%LZ\";\n\nfunction formatIsoNative(date) {\n  return date.toISOString();\n}\n\nvar formatIso = Date.prototype.toISOString\n    ? formatIsoNative\n    : utcFormat(isoSpecifier);\n\nexport default formatIso;\n","import {isoSpecifier} from \"./isoFormat\";\nimport {utcParse} from \"./defaultLocale\";\n\nfunction parseIsoNative(string) {\n  var date = new Date(string);\n  return isNaN(date) ? null : date;\n}\n\nvar parseIso = +new Date(\"2000-01-01T00:00:00.000Z\")\n    ? parseIsoNative\n    : utcParse(isoSpecifier);\n\nexport default parseIso;\n","import {bisector, tickStep} from \"d3-array\";\nimport {interpolateNumber as reinterpolate} from \"d3-interpolate\";\nimport {timeYear, timeMonth, timeWeek, timeDay, timeHour, timeMinute, timeSecond, timeMillisecond} from \"d3-time\";\nimport {timeFormat} from \"d3-time-format\";\nimport {map} from \"./array\";\nimport {default as continuous, copy, deinterpolateLinear as deinterpolate} from \"./continuous\";\nimport nice from \"./nice\";\n\nvar durationSecond = 1000,\n    durationMinute = durationSecond * 60,\n    durationHour = durationMinute * 60,\n    durationDay = durationHour * 24,\n    durationWeek = durationDay * 7,\n    durationMonth = durationDay * 30,\n    durationYear = durationDay * 365;\n\nfunction date(t) {\n  return new Date(t);\n}\n\nfunction number(t) {\n  return t instanceof Date ? +t : +new Date(+t);\n}\n\nexport function calendar(year, month, week, day, hour, minute, second, millisecond, format) {\n  var scale = continuous(deinterpolate, reinterpolate),\n      invert = scale.invert,\n      domain = scale.domain;\n\n  var formatMillisecond = format(\".%L\"),\n      formatSecond = format(\":%S\"),\n      formatMinute = format(\"%I:%M\"),\n      formatHour = format(\"%I %p\"),\n      formatDay = format(\"%a %d\"),\n      formatWeek = format(\"%b %d\"),\n      formatMonth = format(\"%B\"),\n      formatYear = format(\"%Y\");\n\n  var tickIntervals = [\n    [second,  1,      durationSecond],\n    [second,  5,  5 * durationSecond],\n    [second, 15, 15 * durationSecond],\n    [second, 30, 30 * durationSecond],\n    [minute,  1,      durationMinute],\n    [minute,  5,  5 * durationMinute],\n    [minute, 15, 15 * durationMinute],\n    [minute, 30, 30 * durationMinute],\n    [  hour,  1,      durationHour  ],\n    [  hour,  3,  3 * durationHour  ],\n    [  hour,  6,  6 * durationHour  ],\n    [  hour, 12, 12 * durationHour  ],\n    [   day,  1,      durationDay   ],\n    [   day,  2,  2 * durationDay   ],\n    [  week,  1,      durationWeek  ],\n    [ month,  1,      durationMonth ],\n    [ month,  3,  3 * durationMonth ],\n    [  year,  1,      durationYear  ]\n  ];\n\n  function tickFormat(date) {\n    return (second(date) < date ? formatMillisecond\n        : minute(date) < date ? formatSecond\n        : hour(date) < date ? formatMinute\n        : day(date) < date ? formatHour\n        : month(date) < date ? (week(date) < date ? formatDay : formatWeek)\n        : year(date) < date ? formatMonth\n        : formatYear)(date);\n  }\n\n  function tickInterval(interval, start, stop, step) {\n    if (interval == null) interval = 10;\n\n    // If a desired tick count is specified, pick a reasonable tick interval\n    // based on the extent of the domain and a rough estimate of tick size.\n    // Otherwise, assume interval is already a time interval and use it.\n    if (typeof interval === \"number\") {\n      var target = Math.abs(stop - start) / interval,\n          i = bisector(function(i) { return i[2]; }).right(tickIntervals, target);\n      if (i === tickIntervals.length) {\n        step = tickStep(start / durationYear, stop / durationYear, interval);\n        interval = year;\n      } else if (i) {\n        i = tickIntervals[target / tickIntervals[i - 1][2] < tickIntervals[i][2] / target ? i - 1 : i];\n        step = i[1];\n        interval = i[0];\n      } else {\n        step = Math.max(tickStep(start, stop, interval), 1);\n        interval = millisecond;\n      }\n    }\n\n    return step == null ? interval : interval.every(step);\n  }\n\n  scale.invert = function(y) {\n    return new Date(invert(y));\n  };\n\n  scale.domain = function(_) {\n    return arguments.length ? domain(map.call(_, number)) : domain().map(date);\n  };\n\n  scale.ticks = function(interval, step) {\n    var d = domain(),\n        t0 = d[0],\n        t1 = d[d.length - 1],\n        r = t1 < t0,\n        t;\n    if (r) t = t0, t0 = t1, t1 = t;\n    t = tickInterval(interval, t0, t1, step);\n    t = t ? t.range(t0, t1 + 1) : []; // inclusive stop\n    return r ? t.reverse() : t;\n  };\n\n  scale.tickFormat = function(count, specifier) {\n    return specifier == null ? tickFormat : format(specifier);\n  };\n\n  scale.nice = function(interval, step) {\n    var d = domain();\n    return (interval = tickInterval(interval, d[0], d[d.length - 1], step))\n        ? domain(nice(d, interval))\n        : scale;\n  };\n\n  scale.copy = function() {\n    return copy(scale, calendar(year, month, week, day, hour, minute, second, millisecond, format));\n  };\n\n  return scale;\n}\n\nexport default function() {\n  return calendar(timeYear, timeMonth, timeWeek, timeDay, timeHour, timeMinute, timeSecond, timeMillisecond, timeFormat).domain([new Date(2000, 0, 1), new Date(2000, 0, 2)]);\n}\n","export {\n  default as scaleBand,\n  point as scalePoint\n} from \"./band\";\n\nexport {\n  default as scaleIdentity\n} from \"./identity\";\n\nexport {\n  default as scaleLinear\n} from \"./linear\";\n\nexport {\n  default as scaleLog\n} from \"./log\";\n\nexport {\n  default as scaleOrdinal,\n  implicit as scaleImplicit\n} from \"./ordinal\";\n\nexport {\n  default as scalePow,\n  sqrt as scaleSqrt\n} from \"./pow\";\n\nexport {\n  default as scaleQuantile\n} from \"./quantile\";\n\nexport {\n  default as scaleQuantize\n} from \"./quantize\";\n\nexport {\n  default as scaleThreshold\n} from \"./threshold\";\n\nexport {\n  default as scaleTime\n} from \"./time\";\n\nexport {\n  default as scaleUtc\n} from \"./utcTime\";\n\nexport {\n  default as scaleSequential\n} from \"./sequential\";\n\nexport {\n  default as scaleDiverging\n} from \"./diverging\";\n","export function basis(t1, v0, v1, v2, v3) {\n  var t2 = t1 * t1, t3 = t2 * t1;\n  return ((1 - 3 * t1 + 3 * t2 - t3) * v0\n      + (4 - 6 * t2 + 3 * t3) * v1\n      + (1 + 3 * t1 + 3 * t2 - 3 * t3) * v2\n      + t3 * v3) / 6;\n}\n\nexport default function(values) {\n  var n = values.length - 1;\n  return function(t) {\n    var i = t <= 0 ? (t = 0) : t >= 1 ? (t = 1, n - 1) : Math.floor(t * n),\n        v1 = values[i],\n        v2 = values[i + 1],\n        v0 = i > 0 ? values[i - 1] : 2 * v1 - v2,\n        v3 = i < n - 1 ? values[i + 2] : 2 * v2 - v1;\n    return basis((t - i / n) * n, v0, v1, v2, v3);\n  };\n}\n","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n","import constant from \"./constant\";\n\nfunction linear(a, d) {\n  return function(t) {\n    return a + t * d;\n  };\n}\n\nfunction exponential(a, b, y) {\n  return a = Math.pow(a, y), b = Math.pow(b, y) - a, y = 1 / y, function(t) {\n    return Math.pow(a + t * b, y);\n  };\n}\n\nexport function hue(a, b) {\n  var d = b - a;\n  return d ? linear(a, d > 180 || d < -180 ? d - 360 * Math.round(d / 360) : d) : constant(isNaN(a) ? b : a);\n}\n\nexport function gamma(y) {\n  return (y = +y) === 1 ? nogamma : function(a, b) {\n    return b - a ? exponential(a, b, y) : constant(isNaN(a) ? b : a);\n  };\n}\n\nexport default function nogamma(a, b) {\n  var d = b - a;\n  return d ? linear(a, d) : constant(isNaN(a) ? b : a);\n}\n","import {rgb as colorRgb} from \"d3-color\";\nimport basis from \"./basis\";\nimport basisClosed from \"./basisClosed\";\nimport nogamma, {gamma} from \"./color\";\n\nexport default (function rgbGamma(y) {\n  var color = gamma(y);\n\n  function rgb(start, end) {\n    var r = color((start = colorRgb(start)).r, (end = colorRgb(end)).r),\n        g = color(start.g, end.g),\n        b = color(start.b, end.b),\n        opacity = nogamma(start.opacity, end.opacity);\n    return function(t) {\n      start.r = r(t);\n      start.g = g(t);\n      start.b = b(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n\n  rgb.gamma = rgbGamma;\n\n  return rgb;\n})(1);\n\nfunction rgbSpline(spline) {\n  return function(colors) {\n    var n = colors.length,\n        r = new Array(n),\n        g = new Array(n),\n        b = new Array(n),\n        i, color;\n    for (i = 0; i < n; ++i) {\n      color = colorRgb(colors[i]);\n      r[i] = color.r || 0;\n      g[i] = color.g || 0;\n      b[i] = color.b || 0;\n    }\n    r = spline(r);\n    g = spline(g);\n    b = spline(b);\n    color.opacity = 1;\n    return function(t) {\n      color.r = r(t);\n      color.g = g(t);\n      color.b = b(t);\n      return color + \"\";\n    };\n  };\n}\n\nexport var rgbBasis = rgbSpline(basis);\nexport var rgbBasisClosed = rgbSpline(basisClosed);\n","import {basis} from \"./basis\";\n\nexport default function(values) {\n  var n = values.length;\n  return function(t) {\n    var i = Math.floor(((t %= 1) < 0 ? ++t : t) * n),\n        v0 = values[(i + n - 1) % n],\n        v1 = values[i % n],\n        v2 = values[(i + 1) % n],\n        v3 = values[(i + 2) % n];\n    return basis((t - i / n) * n, v0, v1, v2, v3);\n  };\n}\n","export default function(a, b) {\n  return a = +a, b -= a, function(t) {\n    return a + b * t;\n  };\n}\n","import number from \"./number\";\n\nvar reA = /[-+]?(?:\\d+\\.?\\d*|\\.?\\d+)(?:[eE][-+]?\\d+)?/g,\n    reB = new RegExp(reA.source, \"g\");\n\nfunction zero(b) {\n  return function() {\n    return b;\n  };\n}\n\nfunction one(b) {\n  return function(t) {\n    return b(t) + \"\";\n  };\n}\n\nexport default function(a, b) {\n  var bi = reA.lastIndex = reB.lastIndex = 0, // scan index for next number in b\n      am, // current match in a\n      bm, // current match in b\n      bs, // string preceding current number in b, if any\n      i = -1, // index in s\n      s = [], // string constants and placeholders\n      q = []; // number interpolators\n\n  // Coerce inputs to strings.\n  a = a + \"\", b = b + \"\";\n\n  // Interpolate pairs of numbers in a & b.\n  while ((am = reA.exec(a))\n      && (bm = reB.exec(b))) {\n    if ((bs = bm.index) > bi) { // a string precedes the next number in b\n      bs = b.slice(bi, bs);\n      if (s[i]) s[i] += bs; // coalesce with previous string\n      else s[++i] = bs;\n    }\n    if ((am = am[0]) === (bm = bm[0])) { // numbers in a & b match\n      if (s[i]) s[i] += bm; // coalesce with previous string\n      else s[++i] = bm;\n    } else { // interpolate non-matching numbers\n      s[++i] = null;\n      q.push({i: i, x: number(am, bm)});\n    }\n    bi = reB.lastIndex;\n  }\n\n  // Add remains of b.\n  if (bi < b.length) {\n    bs = b.slice(bi);\n    if (s[i]) s[i] += bs; // coalesce with previous string\n    else s[++i] = bs;\n  }\n\n  // Special optimization for only a single match.\n  // Otherwise, interpolate each of the numbers and rejoin the string.\n  return s.length < 2 ? (q[0]\n      ? one(q[0].x)\n      : zero(b))\n      : (b = q.length, function(t) {\n          for (var i = 0, o; i < b; ++i) s[(o = q[i]).i] = o.x(t);\n          return s.join(\"\");\n        });\n}\n","import decompose, {identity} from \"./decompose\";\n\nvar cssNode,\n    cssRoot,\n    cssView,\n    svgNode;\n\nexport function parseCss(value) {\n  if (value === \"none\") return identity;\n  if (!cssNode) cssNode = document.createElement(\"DIV\"), cssRoot = document.documentElement, cssView = document.defaultView;\n  cssNode.style.transform = value;\n  value = cssView.getComputedStyle(cssRoot.appendChild(cssNode), null).getPropertyValue(\"transform\");\n  cssRoot.removeChild(cssNode);\n  value = value.slice(7, -1).split(\",\");\n  return decompose(+value[0], +value[1], +value[2], +value[3], +value[4], +value[5]);\n}\n\nexport function parseSvg(value) {\n  if (value == null) return identity;\n  if (!svgNode) svgNode = document.createElementNS(\"http://www.w3.org/2000/svg\", \"g\");\n  svgNode.setAttribute(\"transform\", value);\n  if (!(value = svgNode.transform.baseVal.consolidate())) return identity;\n  value = value.matrix;\n  return decompose(value.a, value.b, value.c, value.d, value.e, value.f);\n}\n","import {color} from \"d3-color\";\nimport rgb from \"./rgb\";\nimport array from \"./array\";\nimport date from \"./date\";\nimport number from \"./number\";\nimport object from \"./object\";\nimport string from \"./string\";\nimport constant from \"./constant\";\n\nexport default function(a, b) {\n  var t = typeof b, c;\n  return b == null || t === \"boolean\" ? constant(b)\n      : (t === \"number\" ? number\n      : t === \"string\" ? ((c = color(b)) ? (b = c, rgb) : string)\n      : b instanceof color ? rgb\n      : b instanceof Date ? date\n      : Array.isArray(b) ? array\n      : typeof b.valueOf !== \"function\" && typeof b.toString !== \"function\" || isNaN(b) ? object\n      : number)(a, b);\n}\n","export default function(a, b) {\n  var d = new Date;\n  return a = +a, b -= a, function(t) {\n    return d.setTime(a + b * t), d;\n  };\n}\n","import value from \"./value\";\n\nexport default function(a, b) {\n  var nb = b ? b.length : 0,\n      na = a ? Math.min(nb, a.length) : 0,\n      x = new Array(na),\n      c = new Array(nb),\n      i;\n\n  for (i = 0; i < na; ++i) x[i] = value(a[i], b[i]);\n  for (; i < nb; ++i) c[i] = b[i];\n\n  return function(t) {\n    for (i = 0; i < na; ++i) c[i] = x[i](t);\n    return c;\n  };\n}\n","import value from \"./value\";\n\nexport default function(a, b) {\n  var i = {},\n      c = {},\n      k;\n\n  if (a === null || typeof a !== \"object\") a = {};\n  if (b === null || typeof b !== \"object\") b = {};\n\n  for (k in b) {\n    if (k in a) {\n      i[k] = value(a[k], b[k]);\n    } else {\n      c[k] = b[k];\n    }\n  }\n\n  return function(t) {\n    for (k in i) c[k] = i[k](t);\n    return c;\n  };\n}\n","export default function(a, b) {\n  return a = +a, b -= a, function(t) {\n    return Math.round(a + b * t);\n  };\n}\n","var degrees = 180 / Math.PI;\n\nexport var identity = {\n  translateX: 0,\n  translateY: 0,\n  rotate: 0,\n  skewX: 0,\n  scaleX: 1,\n  scaleY: 1\n};\n\nexport default function(a, b, c, d, e, f) {\n  var scaleX, scaleY, skewX;\n  if (scaleX = Math.sqrt(a * a + b * b)) a /= scaleX, b /= scaleX;\n  if (skewX = a * c + b * d) c -= a * skewX, d -= b * skewX;\n  if (scaleY = Math.sqrt(c * c + d * d)) c /= scaleY, d /= scaleY, skewX /= scaleY;\n  if (a * d < b * c) a = -a, b = -b, skewX = -skewX, scaleX = -scaleX;\n  return {\n    translateX: e,\n    translateY: f,\n    rotate: Math.atan2(b, a) * degrees,\n    skewX: Math.atan(skewX) * degrees,\n    scaleX: scaleX,\n    scaleY: scaleY\n  };\n}\n","import number from \"../number\";\nimport {parseCss, parseSvg} from \"./parse\";\n\nfunction interpolateTransform(parse, pxComma, pxParen, degParen) {\n\n  function pop(s) {\n    return s.length ? s.pop() + \" \" : \"\";\n  }\n\n  function translate(xa, ya, xb, yb, s, q) {\n    if (xa !== xb || ya !== yb) {\n      var i = s.push(\"translate(\", null, pxComma, null, pxParen);\n      q.push({i: i - 4, x: number(xa, xb)}, {i: i - 2, x: number(ya, yb)});\n    } else if (xb || yb) {\n      s.push(\"translate(\" + xb + pxComma + yb + pxParen);\n    }\n  }\n\n  function rotate(a, b, s, q) {\n    if (a !== b) {\n      if (a - b > 180) b += 360; else if (b - a > 180) a += 360; // shortest path\n      q.push({i: s.push(pop(s) + \"rotate(\", null, degParen) - 2, x: number(a, b)});\n    } else if (b) {\n      s.push(pop(s) + \"rotate(\" + b + degParen);\n    }\n  }\n\n  function skewX(a, b, s, q) {\n    if (a !== b) {\n      q.push({i: s.push(pop(s) + \"skewX(\", null, degParen) - 2, x: number(a, b)});\n    } else if (b) {\n      s.push(pop(s) + \"skewX(\" + b + degParen);\n    }\n  }\n\n  function scale(xa, ya, xb, yb, s, q) {\n    if (xa !== xb || ya !== yb) {\n      var i = s.push(pop(s) + \"scale(\", null, \",\", null, \")\");\n      q.push({i: i - 4, x: number(xa, xb)}, {i: i - 2, x: number(ya, yb)});\n    } else if (xb !== 1 || yb !== 1) {\n      s.push(pop(s) + \"scale(\" + xb + \",\" + yb + \")\");\n    }\n  }\n\n  return function(a, b) {\n    var s = [], // string constants and placeholders\n        q = []; // number interpolators\n    a = parse(a), b = parse(b);\n    translate(a.translateX, a.translateY, b.translateX, b.translateY, s, q);\n    rotate(a.rotate, b.rotate, s, q);\n    skewX(a.skewX, b.skewX, s, q);\n    scale(a.scaleX, a.scaleY, b.scaleX, b.scaleY, s, q);\n    a = b = null; // gc\n    return function(t) {\n      var i = -1, n = q.length, o;\n      while (++i < n) s[(o = q[i]).i] = o.x(t);\n      return s.join(\"\");\n    };\n  };\n}\n\nexport var interpolateTransformCss = interpolateTransform(parseCss, \"px, \", \"px)\", \"deg)\");\nexport var interpolateTransformSvg = interpolateTransform(parseSvg, \", \", \")\", \")\");\n","var rho = Math.SQRT2,\n    rho2 = 2,\n    rho4 = 4,\n    epsilon2 = 1e-12;\n\nfunction cosh(x) {\n  return ((x = Math.exp(x)) + 1 / x) / 2;\n}\n\nfunction sinh(x) {\n  return ((x = Math.exp(x)) - 1 / x) / 2;\n}\n\nfunction tanh(x) {\n  return ((x = Math.exp(2 * x)) - 1) / (x + 1);\n}\n\n// p0 = [ux0, uy0, w0]\n// p1 = [ux1, uy1, w1]\nexport default function(p0, p1) {\n  var ux0 = p0[0], uy0 = p0[1], w0 = p0[2],\n      ux1 = p1[0], uy1 = p1[1], w1 = p1[2],\n      dx = ux1 - ux0,\n      dy = uy1 - uy0,\n      d2 = dx * dx + dy * dy,\n      i,\n      S;\n\n  // Special case for u0 ≅ u1.\n  if (d2 < epsilon2) {\n    S = Math.log(w1 / w0) / rho;\n    i = function(t) {\n      return [\n        ux0 + t * dx,\n        uy0 + t * dy,\n        w0 * Math.exp(rho * t * S)\n      ];\n    }\n  }\n\n  // General case.\n  else {\n    var d1 = Math.sqrt(d2),\n        b0 = (w1 * w1 - w0 * w0 + rho4 * d2) / (2 * w0 * rho2 * d1),\n        b1 = (w1 * w1 - w0 * w0 - rho4 * d2) / (2 * w1 * rho2 * d1),\n        r0 = Math.log(Math.sqrt(b0 * b0 + 1) - b0),\n        r1 = Math.log(Math.sqrt(b1 * b1 + 1) - b1);\n    S = (r1 - r0) / rho;\n    i = function(t) {\n      var s = t * S,\n          coshr0 = cosh(r0),\n          u = w0 / (rho2 * d1) * (coshr0 * tanh(rho * s + r0) - sinh(r0));\n      return [\n        ux0 + u * dx,\n        uy0 + u * dy,\n        w0 * coshr0 / cosh(rho * s + r0)\n      ];\n    }\n  }\n\n  i.duration = S * 1000;\n\n  return i;\n}\n","import {hsl as colorHsl} from \"d3-color\";\nimport color, {hue} from \"./color\";\n\nfunction hsl(hue) {\n  return function(start, end) {\n    var h = hue((start = colorHsl(start)).h, (end = colorHsl(end)).h),\n        s = color(start.s, end.s),\n        l = color(start.l, end.l),\n        opacity = color(start.opacity, end.opacity);\n    return function(t) {\n      start.h = h(t);\n      start.s = s(t);\n      start.l = l(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n}\n\nexport default hsl(hue);\nexport var hslLong = hsl(color);\n","import {hcl as colorHcl} from \"d3-color\";\nimport color, {hue} from \"./color\";\n\nfunction hcl(hue) {\n  return function(start, end) {\n    var h = hue((start = colorHcl(start)).h, (end = colorHcl(end)).h),\n        c = color(start.c, end.c),\n        l = color(start.l, end.l),\n        opacity = color(start.opacity, end.opacity);\n    return function(t) {\n      start.h = h(t);\n      start.c = c(t);\n      start.l = l(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n}\n\nexport default hcl(hue);\nexport var hclLong = hcl(color);\n","import {cubehelix as colorCubehelix} from \"d3-color\";\nimport color, {hue} from \"./color\";\n\nfunction cubehelix(hue) {\n  return (function cubehelixGamma(y) {\n    y = +y;\n\n    function cubehelix(start, end) {\n      var h = hue((start = colorCubehelix(start)).h, (end = colorCubehelix(end)).h),\n          s = color(start.s, end.s),\n          l = color(start.l, end.l),\n          opacity = color(start.opacity, end.opacity);\n      return function(t) {\n        start.h = h(t);\n        start.s = s(t);\n        start.l = l(Math.pow(t, y));\n        start.opacity = opacity(t);\n        return start + \"\";\n      };\n    }\n\n    cubehelix.gamma = cubehelixGamma;\n\n    return cubehelix;\n  })(1);\n}\n\nexport default cubehelix(hue);\nexport var cubehelixLong = cubehelix(color);\n","export {default as interpolate} from \"./value\";\nexport {default as interpolateArray} from \"./array\";\nexport {default as interpolateBasis} from \"./basis\";\nexport {default as interpolateBasisClosed} from \"./basisClosed\";\nexport {default as interpolateDate} from \"./date\";\nexport {default as interpolateDiscrete} from \"./discrete\";\nexport {default as interpolateHue} from \"./hue\";\nexport {default as interpolateNumber} from \"./number\";\nexport {default as interpolateObject} from \"./object\";\nexport {default as interpolateRound} from \"./round\";\nexport {default as interpolateString} from \"./string\";\nexport {interpolateTransformCss, interpolateTransformSvg} from \"./transform/index\";\nexport {default as interpolateZoom} from \"./zoom\";\nexport {default as interpolateRgb, rgbBasis as interpolateRgbBasis, rgbBasisClosed as interpolateRgbBasisClosed} from \"./rgb\";\nexport {default as interpolateHsl, hslLong as interpolateHslLong} from \"./hsl\";\nexport {default as interpolateLab} from \"./lab\";\nexport {default as interpolateHcl, hclLong as interpolateHclLong} from \"./hcl\";\nexport {default as interpolateCubehelix, cubehelixLong as interpolateCubehelixLong} from \"./cubehelix\";\nexport {default as piecewise} from \"./piecewise\";\nexport {default as quantize} from \"./quantize\";\n","export default function(constructor, factory, prototype) {\n  constructor.prototype = factory.prototype = prototype;\n  prototype.constructor = constructor;\n}\n\nexport function extend(parent, definition) {\n  var prototype = Object.create(parent.prototype);\n  for (var key in definition) prototype[key] = definition[key];\n  return prototype;\n}\n","import define, {extend} from \"./define\";\n\nexport function Color() {}\n\nexport var darker = 0.7;\nexport var brighter = 1 / darker;\n\nvar reI = \"\\\\s*([+-]?\\\\d+)\\\\s*\",\n    reN = \"\\\\s*([+-]?\\\\d*\\\\.?\\\\d+(?:[eE][+-]?\\\\d+)?)\\\\s*\",\n    reP = \"\\\\s*([+-]?\\\\d*\\\\.?\\\\d+(?:[eE][+-]?\\\\d+)?)%\\\\s*\",\n    reHex3 = /^#([0-9a-f]{3})$/,\n    reHex6 = /^#([0-9a-f]{6})$/,\n    reRgbInteger = new RegExp(\"^rgb\\\\(\" + [reI, reI, reI] + \"\\\\)$\"),\n    reRgbPercent = new RegExp(\"^rgb\\\\(\" + [reP, reP, reP] + \"\\\\)$\"),\n    reRgbaInteger = new RegExp(\"^rgba\\\\(\" + [reI, reI, reI, reN] + \"\\\\)$\"),\n    reRgbaPercent = new RegExp(\"^rgba\\\\(\" + [reP, reP, reP, reN] + \"\\\\)$\"),\n    reHslPercent = new RegExp(\"^hsl\\\\(\" + [reN, reP, reP] + \"\\\\)$\"),\n    reHslaPercent = new RegExp(\"^hsla\\\\(\" + [reN, reP, reP, reN] + \"\\\\)$\");\n\nvar named = {\n  aliceblue: 0xf0f8ff,\n  antiquewhite: 0xfaebd7,\n  aqua: 0x00ffff,\n  aquamarine: 0x7fffd4,\n  azure: 0xf0ffff,\n  beige: 0xf5f5dc,\n  bisque: 0xffe4c4,\n  black: 0x000000,\n  blanchedalmond: 0xffebcd,\n  blue: 0x0000ff,\n  blueviolet: 0x8a2be2,\n  brown: 0xa52a2a,\n  burlywood: 0xdeb887,\n  cadetblue: 0x5f9ea0,\n  chartreuse: 0x7fff00,\n  chocolate: 0xd2691e,\n  coral: 0xff7f50,\n  cornflowerblue: 0x6495ed,\n  cornsilk: 0xfff8dc,\n  crimson: 0xdc143c,\n  cyan: 0x00ffff,\n  darkblue: 0x00008b,\n  darkcyan: 0x008b8b,\n  darkgoldenrod: 0xb8860b,\n  darkgray: 0xa9a9a9,\n  darkgreen: 0x006400,\n  darkgrey: 0xa9a9a9,\n  darkkhaki: 0xbdb76b,\n  darkmagenta: 0x8b008b,\n  darkolivegreen: 0x556b2f,\n  darkorange: 0xff8c00,\n  darkorchid: 0x9932cc,\n  darkred: 0x8b0000,\n  darksalmon: 0xe9967a,\n  darkseagreen: 0x8fbc8f,\n  darkslateblue: 0x483d8b,\n  darkslategray: 0x2f4f4f,\n  darkslategrey: 0x2f4f4f,\n  darkturquoise: 0x00ced1,\n  darkviolet: 0x9400d3,\n  deeppink: 0xff1493,\n  deepskyblue: 0x00bfff,\n  dimgray: 0x696969,\n  dimgrey: 0x696969,\n  dodgerblue: 0x1e90ff,\n  firebrick: 0xb22222,\n  floralwhite: 0xfffaf0,\n  forestgreen: 0x228b22,\n  fuchsia: 0xff00ff,\n  gainsboro: 0xdcdcdc,\n  ghostwhite: 0xf8f8ff,\n  gold: 0xffd700,\n  goldenrod: 0xdaa520,\n  gray: 0x808080,\n  green: 0x008000,\n  greenyellow: 0xadff2f,\n  grey: 0x808080,\n  honeydew: 0xf0fff0,\n  hotpink: 0xff69b4,\n  indianred: 0xcd5c5c,\n  indigo: 0x4b0082,\n  ivory: 0xfffff0,\n  khaki: 0xf0e68c,\n  lavender: 0xe6e6fa,\n  lavenderblush: 0xfff0f5,\n  lawngreen: 0x7cfc00,\n  lemonchiffon: 0xfffacd,\n  lightblue: 0xadd8e6,\n  lightcoral: 0xf08080,\n  lightcyan: 0xe0ffff,\n  lightgoldenrodyellow: 0xfafad2,\n  lightgray: 0xd3d3d3,\n  lightgreen: 0x90ee90,\n  lightgrey: 0xd3d3d3,\n  lightpink: 0xffb6c1,\n  lightsalmon: 0xffa07a,\n  lightseagreen: 0x20b2aa,\n  lightskyblue: 0x87cefa,\n  lightslategray: 0x778899,\n  lightslategrey: 0x778899,\n  lightsteelblue: 0xb0c4de,\n  lightyellow: 0xffffe0,\n  lime: 0x00ff00,\n  limegreen: 0x32cd32,\n  linen: 0xfaf0e6,\n  magenta: 0xff00ff,\n  maroon: 0x800000,\n  mediumaquamarine: 0x66cdaa,\n  mediumblue: 0x0000cd,\n  mediumorchid: 0xba55d3,\n  mediumpurple: 0x9370db,\n  mediumseagreen: 0x3cb371,\n  mediumslateblue: 0x7b68ee,\n  mediumspringgreen: 0x00fa9a,\n  mediumturquoise: 0x48d1cc,\n  mediumvioletred: 0xc71585,\n  midnightblue: 0x191970,\n  mintcream: 0xf5fffa,\n  mistyrose: 0xffe4e1,\n  moccasin: 0xffe4b5,\n  navajowhite: 0xffdead,\n  navy: 0x000080,\n  oldlace: 0xfdf5e6,\n  olive: 0x808000,\n  olivedrab: 0x6b8e23,\n  orange: 0xffa500,\n  orangered: 0xff4500,\n  orchid: 0xda70d6,\n  palegoldenrod: 0xeee8aa,\n  palegreen: 0x98fb98,\n  paleturquoise: 0xafeeee,\n  palevioletred: 0xdb7093,\n  papayawhip: 0xffefd5,\n  peachpuff: 0xffdab9,\n  peru: 0xcd853f,\n  pink: 0xffc0cb,\n  plum: 0xdda0dd,\n  powderblue: 0xb0e0e6,\n  purple: 0x800080,\n  rebeccapurple: 0x663399,\n  red: 0xff0000,\n  rosybrown: 0xbc8f8f,\n  royalblue: 0x4169e1,\n  saddlebrown: 0x8b4513,\n  salmon: 0xfa8072,\n  sandybrown: 0xf4a460,\n  seagreen: 0x2e8b57,\n  seashell: 0xfff5ee,\n  sienna: 0xa0522d,\n  silver: 0xc0c0c0,\n  skyblue: 0x87ceeb,\n  slateblue: 0x6a5acd,\n  slategray: 0x708090,\n  slategrey: 0x708090,\n  snow: 0xfffafa,\n  springgreen: 0x00ff7f,\n  steelblue: 0x4682b4,\n  tan: 0xd2b48c,\n  teal: 0x008080,\n  thistle: 0xd8bfd8,\n  tomato: 0xff6347,\n  turquoise: 0x40e0d0,\n  violet: 0xee82ee,\n  wheat: 0xf5deb3,\n  white: 0xffffff,\n  whitesmoke: 0xf5f5f5,\n  yellow: 0xffff00,\n  yellowgreen: 0x9acd32\n};\n\ndefine(Color, color, {\n  displayable: function() {\n    return this.rgb().displayable();\n  },\n  hex: function() {\n    return this.rgb().hex();\n  },\n  toString: function() {\n    return this.rgb() + \"\";\n  }\n});\n\nexport default function color(format) {\n  var m;\n  format = (format + \"\").trim().toLowerCase();\n  return (m = reHex3.exec(format)) ? (m = parseInt(m[1], 16), new Rgb((m >> 8 & 0xf) | (m >> 4 & 0x0f0), (m >> 4 & 0xf) | (m & 0xf0), ((m & 0xf) << 4) | (m & 0xf), 1)) // #f00\n      : (m = reHex6.exec(format)) ? rgbn(parseInt(m[1], 16)) // #ff0000\n      : (m = reRgbInteger.exec(format)) ? new Rgb(m[1], m[2], m[3], 1) // rgb(255, 0, 0)\n      : (m = reRgbPercent.exec(format)) ? new Rgb(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, 1) // rgb(100%, 0%, 0%)\n      : (m = reRgbaInteger.exec(format)) ? rgba(m[1], m[2], m[3], m[4]) // rgba(255, 0, 0, 1)\n      : (m = reRgbaPercent.exec(format)) ? rgba(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, m[4]) // rgb(100%, 0%, 0%, 1)\n      : (m = reHslPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, 1) // hsl(120, 50%, 50%)\n      : (m = reHslaPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, m[4]) // hsla(120, 50%, 50%, 1)\n      : named.hasOwnProperty(format) ? rgbn(named[format])\n      : format === \"transparent\" ? new Rgb(NaN, NaN, NaN, 0)\n      : null;\n}\n\nfunction rgbn(n) {\n  return new Rgb(n >> 16 & 0xff, n >> 8 & 0xff, n & 0xff, 1);\n}\n\nfunction rgba(r, g, b, a) {\n  if (a <= 0) r = g = b = NaN;\n  return new Rgb(r, g, b, a);\n}\n\nexport function rgbConvert(o) {\n  if (!(o instanceof Color)) o = color(o);\n  if (!o) return new Rgb;\n  o = o.rgb();\n  return new Rgb(o.r, o.g, o.b, o.opacity);\n}\n\nexport function rgb(r, g, b, opacity) {\n  return arguments.length === 1 ? rgbConvert(r) : new Rgb(r, g, b, opacity == null ? 1 : opacity);\n}\n\nexport function Rgb(r, g, b, opacity) {\n  this.r = +r;\n  this.g = +g;\n  this.b = +b;\n  this.opacity = +opacity;\n}\n\ndefine(Rgb, rgb, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\n  },\n  rgb: function() {\n    return this;\n  },\n  displayable: function() {\n    return (0 <= this.r && this.r <= 255)\n        && (0 <= this.g && this.g <= 255)\n        && (0 <= this.b && this.b <= 255)\n        && (0 <= this.opacity && this.opacity <= 1);\n  },\n  hex: function() {\n    return \"#\" + hex(this.r) + hex(this.g) + hex(this.b);\n  },\n  toString: function() {\n    var a = this.opacity; a = isNaN(a) ? 1 : Math.max(0, Math.min(1, a));\n    return (a === 1 ? \"rgb(\" : \"rgba(\")\n        + Math.max(0, Math.min(255, Math.round(this.r) || 0)) + \", \"\n        + Math.max(0, Math.min(255, Math.round(this.g) || 0)) + \", \"\n        + Math.max(0, Math.min(255, Math.round(this.b) || 0))\n        + (a === 1 ? \")\" : \", \" + a + \")\");\n  }\n}));\n\nfunction hex(value) {\n  value = Math.max(0, Math.min(255, Math.round(value) || 0));\n  return (value < 16 ? \"0\" : \"\") + value.toString(16);\n}\n\nfunction hsla(h, s, l, a) {\n  if (a <= 0) h = s = l = NaN;\n  else if (l <= 0 || l >= 1) h = s = NaN;\n  else if (s <= 0) h = NaN;\n  return new Hsl(h, s, l, a);\n}\n\nexport function hslConvert(o) {\n  if (o instanceof Hsl) return new Hsl(o.h, o.s, o.l, o.opacity);\n  if (!(o instanceof Color)) o = color(o);\n  if (!o) return new Hsl;\n  if (o instanceof Hsl) return o;\n  o = o.rgb();\n  var r = o.r / 255,\n      g = o.g / 255,\n      b = o.b / 255,\n      min = Math.min(r, g, b),\n      max = Math.max(r, g, b),\n      h = NaN,\n      s = max - min,\n      l = (max + min) / 2;\n  if (s) {\n    if (r === max) h = (g - b) / s + (g < b) * 6;\n    else if (g === max) h = (b - r) / s + 2;\n    else h = (r - g) / s + 4;\n    s /= l < 0.5 ? max + min : 2 - max - min;\n    h *= 60;\n  } else {\n    s = l > 0 && l < 1 ? 0 : h;\n  }\n  return new Hsl(h, s, l, o.opacity);\n}\n\nexport function hsl(h, s, l, opacity) {\n  return arguments.length === 1 ? hslConvert(h) : new Hsl(h, s, l, opacity == null ? 1 : opacity);\n}\n\nfunction Hsl(h, s, l, opacity) {\n  this.h = +h;\n  this.s = +s;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Hsl, hsl, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Hsl(this.h, this.s, this.l * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Hsl(this.h, this.s, this.l * k, this.opacity);\n  },\n  rgb: function() {\n    var h = this.h % 360 + (this.h < 0) * 360,\n        s = isNaN(h) || isNaN(this.s) ? 0 : this.s,\n        l = this.l,\n        m2 = l + (l < 0.5 ? l : 1 - l) * s,\n        m1 = 2 * l - m2;\n    return new Rgb(\n      hsl2rgb(h >= 240 ? h - 240 : h + 120, m1, m2),\n      hsl2rgb(h, m1, m2),\n      hsl2rgb(h < 120 ? h + 240 : h - 120, m1, m2),\n      this.opacity\n    );\n  },\n  displayable: function() {\n    return (0 <= this.s && this.s <= 1 || isNaN(this.s))\n        && (0 <= this.l && this.l <= 1)\n        && (0 <= this.opacity && this.opacity <= 1);\n  }\n}));\n\n/* From FvD 13.37, CSS Color Module Level 3 */\nfunction hsl2rgb(h, m1, m2) {\n  return (h < 60 ? m1 + (m2 - m1) * h / 60\n      : h < 180 ? m2\n      : h < 240 ? m1 + (m2 - m1) * (240 - h) / 60\n      : m1) * 255;\n}\n","export var deg2rad = Math.PI / 180;\nexport var rad2deg = 180 / Math.PI;\n","import define, {extend} from \"./define\";\nimport {Color, rgbConvert, Rgb} from \"./color\";\nimport {deg2rad, rad2deg} from \"./math\";\n\n// https://beta.observablehq.com/@mbostock/lab-and-rgb\nvar K = 18,\n    Xn = 0.96422,\n    Yn = 1,\n    Zn = 0.82521,\n    t0 = 4 / 29,\n    t1 = 6 / 29,\n    t2 = 3 * t1 * t1,\n    t3 = t1 * t1 * t1;\n\nfunction labConvert(o) {\n  if (o instanceof Lab) return new Lab(o.l, o.a, o.b, o.opacity);\n  if (o instanceof Hcl) {\n    if (isNaN(o.h)) return new Lab(o.l, 0, 0, o.opacity);\n    var h = o.h * deg2rad;\n    return new Lab(o.l, Math.cos(h) * o.c, Math.sin(h) * o.c, o.opacity);\n  }\n  if (!(o instanceof Rgb)) o = rgbConvert(o);\n  var r = rgb2lrgb(o.r),\n      g = rgb2lrgb(o.g),\n      b = rgb2lrgb(o.b),\n      y = xyz2lab((0.2225045 * r + 0.7168786 * g + 0.0606169 * b) / Yn), x, z;\n  if (r === g && g === b) x = z = y; else {\n    x = xyz2lab((0.4360747 * r + 0.3850649 * g + 0.1430804 * b) / Xn);\n    z = xyz2lab((0.0139322 * r + 0.0971045 * g + 0.7141733 * b) / Zn);\n  }\n  return new Lab(116 * y - 16, 500 * (x - y), 200 * (y - z), o.opacity);\n}\n\nexport function gray(l, opacity) {\n  return new Lab(l, 0, 0, opacity == null ? 1 : opacity);\n}\n\nexport default function lab(l, a, b, opacity) {\n  return arguments.length === 1 ? labConvert(l) : new Lab(l, a, b, opacity == null ? 1 : opacity);\n}\n\nexport function Lab(l, a, b, opacity) {\n  this.l = +l;\n  this.a = +a;\n  this.b = +b;\n  this.opacity = +opacity;\n}\n\ndefine(Lab, lab, extend(Color, {\n  brighter: function(k) {\n    return new Lab(this.l + K * (k == null ? 1 : k), this.a, this.b, this.opacity);\n  },\n  darker: function(k) {\n    return new Lab(this.l - K * (k == null ? 1 : k), this.a, this.b, this.opacity);\n  },\n  rgb: function() {\n    var y = (this.l + 16) / 116,\n        x = isNaN(this.a) ? y : y + this.a / 500,\n        z = isNaN(this.b) ? y : y - this.b / 200;\n    x = Xn * lab2xyz(x);\n    y = Yn * lab2xyz(y);\n    z = Zn * lab2xyz(z);\n    return new Rgb(\n      lrgb2rgb( 3.1338561 * x - 1.6168667 * y - 0.4906146 * z),\n      lrgb2rgb(-0.9787684 * x + 1.9161415 * y + 0.0334540 * z),\n      lrgb2rgb( 0.0719453 * x - 0.2289914 * y + 1.4052427 * z),\n      this.opacity\n    );\n  }\n}));\n\nfunction xyz2lab(t) {\n  return t > t3 ? Math.pow(t, 1 / 3) : t / t2 + t0;\n}\n\nfunction lab2xyz(t) {\n  return t > t1 ? t * t * t : t2 * (t - t0);\n}\n\nfunction lrgb2rgb(x) {\n  return 255 * (x <= 0.0031308 ? 12.92 * x : 1.055 * Math.pow(x, 1 / 2.4) - 0.055);\n}\n\nfunction rgb2lrgb(x) {\n  return (x /= 255) <= 0.04045 ? x / 12.92 : Math.pow((x + 0.055) / 1.055, 2.4);\n}\n\nfunction hclConvert(o) {\n  if (o instanceof Hcl) return new Hcl(o.h, o.c, o.l, o.opacity);\n  if (!(o instanceof Lab)) o = labConvert(o);\n  if (o.a === 0 && o.b === 0) return new Hcl(NaN, 0, o.l, o.opacity);\n  var h = Math.atan2(o.b, o.a) * rad2deg;\n  return new Hcl(h < 0 ? h + 360 : h, Math.sqrt(o.a * o.a + o.b * o.b), o.l, o.opacity);\n}\n\nexport function lch(l, c, h, opacity) {\n  return arguments.length === 1 ? hclConvert(l) : new Hcl(h, c, l, opacity == null ? 1 : opacity);\n}\n\nexport function hcl(h, c, l, opacity) {\n  return arguments.length === 1 ? hclConvert(h) : new Hcl(h, c, l, opacity == null ? 1 : opacity);\n}\n\nexport function Hcl(h, c, l, opacity) {\n  this.h = +h;\n  this.c = +c;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Hcl, hcl, extend(Color, {\n  brighter: function(k) {\n    return new Hcl(this.h, this.c, this.l + K * (k == null ? 1 : k), this.opacity);\n  },\n  darker: function(k) {\n    return new Hcl(this.h, this.c, this.l - K * (k == null ? 1 : k), this.opacity);\n  },\n  rgb: function() {\n    return labConvert(this).rgb();\n  }\n}));\n","import define, {extend} from \"./define\";\nimport {Color, rgbConvert, Rgb, darker, brighter} from \"./color\";\nimport {deg2rad, rad2deg} from \"./math\";\n\nvar A = -0.14861,\n    B = +1.78277,\n    C = -0.29227,\n    D = -0.90649,\n    E = +1.97294,\n    ED = E * D,\n    EB = E * B,\n    BC_DA = B * C - D * A;\n\nfunction cubehelixConvert(o) {\n  if (o instanceof Cubehelix) return new Cubehelix(o.h, o.s, o.l, o.opacity);\n  if (!(o instanceof Rgb)) o = rgbConvert(o);\n  var r = o.r / 255,\n      g = o.g / 255,\n      b = o.b / 255,\n      l = (BC_DA * b + ED * r - EB * g) / (BC_DA + ED - EB),\n      bl = b - l,\n      k = (E * (g - l) - C * bl) / D,\n      s = Math.sqrt(k * k + bl * bl) / (E * l * (1 - l)), // NaN if l=0 or l=1\n      h = s ? Math.atan2(k, bl) * rad2deg - 120 : NaN;\n  return new Cubehelix(h < 0 ? h + 360 : h, s, l, o.opacity);\n}\n\nexport default function cubehelix(h, s, l, opacity) {\n  return arguments.length === 1 ? cubehelixConvert(h) : new Cubehelix(h, s, l, opacity == null ? 1 : opacity);\n}\n\nexport function Cubehelix(h, s, l, opacity) {\n  this.h = +h;\n  this.s = +s;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Cubehelix, cubehelix, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Cubehelix(this.h, this.s, this.l * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Cubehelix(this.h, this.s, this.l * k, this.opacity);\n  },\n  rgb: function() {\n    var h = isNaN(this.h) ? 0 : (this.h + 120) * deg2rad,\n        l = +this.l,\n        a = isNaN(this.s) ? 0 : this.s * l * (1 - l),\n        cosh = Math.cos(h),\n        sinh = Math.sin(h);\n    return new Rgb(\n      255 * (l + a * (A * cosh + B * sinh)),\n      255 * (l + a * (C * cosh + D * sinh)),\n      255 * (l + a * (E * cosh)),\n      this.opacity\n    );\n  }\n}));\n","export {default as color, rgb, hsl} from \"./color\";\nexport {default as lab, hcl, lch, gray} from \"./lab\";\nexport {default as cubehelix} from \"./cubehelix\";\n"],"sourceRoot":""}