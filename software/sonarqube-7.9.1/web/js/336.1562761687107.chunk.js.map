{"version":3,"sources":["webpack:///./src/main/js/apps/create/organization/AlmApplicationInstalling.tsx","webpack:///./src/main/js/apps/create/organization/AutoOrganizationBind.tsx","webpack:///./src/main/js/apps/create/components/OrganizationAvatarInput.tsx","webpack:///./src/main/js/apps/create/components/OrganizationKeyInput.tsx","webpack:///./src/main/js/apps/create/components/OrganizationUrlInput.tsx","webpack:///./src/main/js/apps/create/organization/OrganizationDetailsForm.tsx","webpack:///./src/main/js/apps/create/organization/OrganizationDetailsStep.tsx","webpack:///./src/main/js/apps/create/components/FreeCardPlan.tsx","webpack:///./src/main/js/apps/create/components/PaidCardPlan.tsx","webpack:///./src/main/js/apps/create/organization/PlanSelect.tsx","webpack:///./src/main/js/apps/create/organization/AutoOrganizationCreate.tsx","webpack:///./src/main/js/apps/create/organization/PlanStep.tsx","webpack:///./src/main/js/apps/create/organization/AutoPersonalOrganizationBind.tsx","webpack:///./src/main/js/apps/create/organization/ManualOrganizationCreate.tsx","webpack:///./src/main/js/apps/create/organization/RemoteOrganizationChoose.tsx","webpack:///./src/main/js/apps/create/organization/CreateOrganization.tsx","webpack:///./src/main/js/apps/create/organization/actions.ts","webpack:///./src/main/js/app/utils/addGlobalSuccessMessage.ts","webpack:///./src/main/js/components/controls/RadioToggle.tsx","webpack:///./src/main/js/apps/tutorials/components/Step.tsx","webpack:///./src/main/js/apps/tutorials/styles.css?5461","webpack:///./src/main/js/apps/tutorials/styles.css","webpack:///./src/main/js/apps/organizations/actions.ts"],"names":["AlmApplicationInstalling","_a","almKey","index_js_exposed","DeferredSpinner","customSpinner","className","Object","l10n","almIntegrations","_super","AutoOrganizationBind","props","_this","call","this","mounted","handleChange","key","setState","organization","handleSubmit","event","preventDefault","state","submitting","onBindOrganization","then","stopSubmitting","getInitialSelectedOrganization","__extends","prototype","componentDidMount","componentWillUnmount","unboundOrganizations","length","render","id","onSubmit","OrganizationSelect","onChange","organizations","Alert","display","variant","react_router_es","target","to","pathname","buttons","disabled","OrganizationAvatarInput","apply","arguments","error","undefined","editing","touched","value","currentTarget","trim","validateUrl","handleBlur","handleFocus","OrganizationAvatarInput_extends","initialValue","Boolean","url","valid_url","isInvalid","isValidUrl","isValid","ValidationInput","description","label","name","OrganizationAvatar","avatar","classnames","is-invalid","is-valid","onBlur","onFocus","placeholder","type","OrganizationKeyInput","checkFreeKey","validating","catch","validateKey","debounce_default","OrganizationKeyInput_extends","test","required","urls","replace","autoFocus","maxLength","OrganizationUrlInput","OrganizationUrlInput_extends","OrganizationDetailsForm","handleAdditionalClick","additional","handleAvatarUpdate","handleDescriptionUpdate","handleKeyUpdate","handleNameUpdate","handleUrlUpdate","canSubmit","onContinue","OrganizationDetailsForm_extends","infoBlock","keyReadOnly","components_OrganizationKeyInput","onClick","DropdownIcon","turned","hidden","htmlFor","components_OrganizationAvatarInput","rows","components_OrganizationUrlInput","submitText","OrganizationDetailsStep","renderForm","children","renderResult","AlertSuccessIcon","OrganizationDetailsStep_extends","Step","finished","onOpen","open","stepNumber","stepTitle","FreeCardPlan","almName","hasWarning","FreeCardPlan_rest","showInfo","showWarning","RadioCard","FreeCardPlan_assign","title","titleInfo","utils","index_es","defaultMessage","values","alm","PaidCardPlan","isRecommended","startingPrice","PaidCardPlan_rest","PaidCardPlan_assign","recommended","price","UpgradeOrganizationAdvantages","Plan","Filters","PlanSelect","handleFreePlanClick","Free","handlePaidPlanClick","Paid","PlanSelect_extends","almApplication","almOrganization","plan","hasPrivateRepo","privateRepos","onlyPrivateRepo","publicRepos","cards","selected","aria-label","role","reverse","BillingForm","withCurrentUser","BillingFormShim","PlanStep","handlePlanChange","handleFreePlanSubmit","createOrganization","onDone","subscriptionPlans","ready","organization_PlanSelect","onCommit","onFailToUpgrade","onUpgradeFail","organizationKey","renderFormFields","renderSubmitGroup","PlanStep_extends","extensions","AutoOrganizationCreate","handleBindOrganization","alm_integration","installationId","almInstallId","onOrgCreated","handleCreateOrganization","AutoOrganizationCreate_assign","membersSync","almUrl","Promise","reject","handleOptionChange","filter","Create","AutoOrganizationCreate_extends","step","hasUnboundOrgs","organization_OrganizationDetailsStep","handleOrgDetailsStepOpen","OrganizationDetails","alt","src","width","handleCancelImport","RadioToggle","onCheck","options","Bind","organization_OrganizationDetailsForm","href","rel","handleOrgDetailsFinish","organization_AutoOrganizationBind","organization_PlanStep","AutoPersonalOrganizationBind","updateOrganization","AutoPersonalOrganizationBind_assign","importPersonalOrg","AutoPersonalOrganizationBind_extends","personalAvatar","small","personalName","ManualOrganizationCreate","ManualOrganizationCreate_extends","RemoteOrganizationChoose_RemoteOrganizationChoose","RemoteOrganizationChoose","unboundInstallationId","router","push","query","handleInstallAppClick","storage","Date","now","toString","handleInstallationChange","renderOption","height","RemoteOrganizationChoose_extends","almUnboundApplications","boundOrganization","boundAvatar","boundName","IdentityProviderLink","identityProvider","installationUrl","Select","clearable","labelKey","optionRenderer","sortBy_default","o","toLowerCase","valueKey","valueRenderer","organization_RemoteOrganizationChoose","CreateOrganization_CreateOrganization","CreateOrganization","almOrgLoading","bindingExistingOrg","loading","deleteOrganization","fetchAlmApplication","application","fetchAlmOrganization","resolve","setValidOrgKey","isStoredTimestampValid","fetchAlmUnboundApplications","fetchSubscriptionPlans","billing","updateUrlQuery","handleOrgCreated","skipOnboarding","tab","handlePlanDone","timestampKey","storedTimestamp","date_fns","Number","onTabChange","updateUrlState","getHeader","strings","keys","concat","times_default","i","join","find","Math","ceil","random","CreateOrganization_assign","stopLoading","location","renderContent","currentUser","_b","commonProps","hasAutoImport","organization_ManualOrganizationCreate","organization_AutoPersonalOrganizationBind","Tabs","tabs","node","organization_AutoOrganizationCreate","userOrganizations","actions","personalOrganization","admin","CreateOrganization_extends","pages","bindAndRedirectToOrganizationSettings","initRequests","all","componentDidUpdate","prevProps","prevQuery","addGlobalSuccessMessage","header","startedPrice","Helmet","titleTemplate","A11ySkipTarget","anchor","mapDispatchToProps","__rest","dispatch","__assign","newOrganization","store_organizations","changes","promises","users","__webpack_exports__","whenLoggedIn","withUserOrganizations","es","__webpack_require__","d","_getStore__WEBPACK_IMPORTED_MODULE_0__","_store_globalMessages__WEBPACK_IMPORTED_MODULE_1__","message","e","newValue","option","checked","htmlId","react__WEBPACK_IMPORTED_MODULE_0__","_Tooltip__WEBPACK_IMPORTED_MODULE_2__","overlay","tooltip","classnames__WEBPACK_IMPORTED_MODULE_1__","map","defaultProps","is-open","is-finished","clickable","tabIndex","content","module","hmr","transform","insertInto","locals","exports","_api_organizations__WEBPACK_IMPORTED_MODULE_0__","_store_organizations__WEBPACK_IMPORTED_MODULE_1__","_store_globalMessages__WEBPACK_IMPORTED_MODULE_2__","_helpers_l10n__WEBPACK_IMPORTED_MODULE_3__"],"mappings":"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","file":"js/336.1562761687107.chunk.js","sourcesContent":["/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport DeferredSpinner from '../../../components/common/DeferredSpinner';\nimport { sanitizeAlmId } from '../../../helpers/almIntegrations';\nimport { translate, translateWithParameters } from '../../../helpers/l10n';\n\nexport default function AlmApplicationInstalling({ almKey }: { almKey?: string }) {\n  return (\n    <DeferredSpinner\n      customSpinner={\n        <div className=\"sonarcloud page page-limited\">\n          <div className=\"huge-spacer-top text-center\">\n            <i className=\"spinner\" />\n            <p className=\"big-spacer-top\">\n              {translateWithParameters(\n                'onboarding.import_organization.installing',\n                almKey ? translate(sanitizeAlmId(almKey)) : 'ALM'\n              )}\n            </p>\n          </div>\n        </div>\n      }\n    />\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { Link } from 'react-router';\nimport OrganizationSelect from '../components/OrganizationSelect';\nimport DeferredSpinner from '../../../components/common/DeferredSpinner';\nimport { Alert } from '../../../components/ui/Alert';\nimport { SubmitButton } from '../../../components/ui/buttons';\nimport { translate, translateWithParameters } from '../../../helpers/l10n';\nimport { isGithub } from '../../../helpers/almIntegrations';\n\ninterface Props {\n  almKey: string;\n  onBindOrganization: (organization: string) => Promise<void>;\n  unboundOrganizations: T.Organization[];\n}\n\ninterface State {\n  organization: string;\n  submitting: boolean;\n}\n\nexport default class AutoOrganizationBind extends React.PureComponent<Props, State> {\n  mounted = false;\n\n  constructor(props: Props) {\n    super(props);\n    this.state = { organization: this.getInitialSelectedOrganization(props), submitting: false };\n  }\n\n  componentDidMount() {\n    this.mounted = true;\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  getInitialSelectedOrganization(props: Props) {\n    if (props.unboundOrganizations.length === 1) {\n      return props.unboundOrganizations[0].key;\n    }\n    return '';\n  }\n\n  handleChange = ({ key }: T.Organization) => {\n    this.setState({ organization: key });\n  };\n\n  handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    const { organization } = this.state;\n    if (organization) {\n      this.setState({ submitting: true });\n      this.props.onBindOrganization(organization).then(this.stopSubmitting, this.stopSubmitting);\n    }\n  };\n\n  stopSubmitting = () => {\n    if (this.mounted) {\n      this.setState({ submitting: false });\n    }\n  };\n\n  render() {\n    const { almKey } = this.props;\n    const { organization, submitting } = this.state;\n    return (\n      <form id=\"bind-organization-form\" onSubmit={this.handleSubmit}>\n        <OrganizationSelect\n          onChange={this.handleChange}\n          organization={organization}\n          organizations={this.props.unboundOrganizations}\n        />\n        {isGithub(almKey) && (\n          <Alert className=\"abs-width-400 big-spacer-top\" display=\"block\" variant=\"info\">\n            {translateWithParameters(\n              'onboarding.import_organization.bind_members_not_sync_info_x',\n              translate('organization', almKey)\n            )}\n            <Link\n              className=\"spacer-left\"\n              target=\"_blank\"\n              to={{ pathname: '/documentation/organizations/manage-team/' }}>\n              {translate('learn_more')}\n            </Link>\n          </Alert>\n        )}\n        <div className=\"display-flex-center big-spacer-top\">\n          <SubmitButton disabled={submitting || !organization}>\n            {translate('onboarding.import_organization.bind')}\n          </SubmitButton>\n          {submitting && <DeferredSpinner className=\"spacer-left\" />}\n        </div>\n      </form>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport * as classNames from 'classnames';\nimport { isWebUri } from 'valid-url';\nimport ValidationInput from '../../../components/controls/ValidationInput';\nimport { translate } from '../../../helpers/l10n';\nimport OrganizationAvatar from '../../../components/common/OrganizationAvatar';\n\ninterface Props {\n  initialValue?: string;\n  name?: string;\n  onChange: (value: string | undefined) => void;\n}\n\ninterface State {\n  editing: boolean;\n  error?: string;\n  touched: boolean;\n  value: string;\n}\n\nexport default class OrganizationAvatarInput extends React.PureComponent<Props, State> {\n  state: State = { error: undefined, editing: false, touched: false, value: '' };\n\n  componentDidMount() {\n    if (this.props.initialValue) {\n      const value = this.props.initialValue;\n      const error = this.validateUrl(value);\n      this.setState({ error, touched: Boolean(error), value });\n    }\n  }\n\n  handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const value = event.currentTarget.value.trim();\n    const error = this.validateUrl(value);\n    this.setState({ error, touched: true, value });\n    this.props.onChange(error === undefined ? value : undefined);\n  };\n\n  handleBlur = () => {\n    this.setState({ editing: false });\n  };\n\n  handleFocus = () => {\n    this.setState({ editing: true });\n  };\n\n  validateUrl(url: string) {\n    if (url.length > 0 && !isWebUri(url)) {\n      return translate('onboarding.create_organization.url.error');\n    }\n    return undefined;\n  }\n\n  render() {\n    const isInvalid = this.state.touched && !this.state.editing && this.state.error !== undefined;\n    const isValidUrl = this.state.error === undefined && this.state.value !== '';\n    const isValid = this.state.touched && isValidUrl;\n    return (\n      <ValidationInput\n        description={translate('onboarding.create_organization.avatar.description')}\n        error={this.state.error}\n        id=\"organization-avatar\"\n        isInvalid={isInvalid}\n        isValid={isValid}\n        label={translate('onboarding.create_organization.avatar')}>\n        <>\n          {(isValidUrl || this.props.name) && (\n            <OrganizationAvatar\n              className=\"display-block spacer-bottom\"\n              organization={{\n                avatar: isValidUrl ? this.state.value : undefined,\n                name: this.props.name || ''\n              }}\n            />\n          )}\n          <input\n            className={classNames('input-super-large', 'text-middle', {\n              'is-invalid': isInvalid,\n              'is-valid': isValid\n            })}\n            id=\"organization-avatar\"\n            onBlur={this.handleBlur}\n            onChange={this.handleChange}\n            onFocus={this.handleFocus}\n            placeholder={translate('onboarding.create_organization.avatar.placeholder')}\n            type=\"text\"\n            value={this.state.value}\n          />\n        </>\n      </ValidationInput>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport * as classNames from 'classnames';\nimport { debounce } from 'lodash';\nimport { getOrganization } from '../../../api/organizations';\nimport ValidationInput from '../../../components/controls/ValidationInput';\nimport { translate } from '../../../helpers/l10n';\nimport { getHostUrl } from '../../../helpers/urls';\n\ninterface Props {\n  initialValue?: string;\n  onChange: (value: string | undefined) => void;\n}\n\ninterface State {\n  error?: string;\n  touched: boolean;\n  validating: boolean;\n  value: string;\n}\n\nexport default class OrganizationKeyInput extends React.PureComponent<Props, State> {\n  mounted = false;\n  constructor(props: Props) {\n    super(props);\n    this.state = { error: undefined, touched: false, validating: false, value: '' };\n    this.checkFreeKey = debounce(this.checkFreeKey, 250);\n  }\n\n  componentDidMount() {\n    this.mounted = true;\n    if (this.props.initialValue !== undefined) {\n      this.setState({ value: this.props.initialValue });\n      this.validateKey(this.props.initialValue);\n    }\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  checkFreeKey = (key: string) => {\n    this.setState({ validating: true });\n    return getOrganization(key)\n      .then(organization => {\n        if (this.mounted) {\n          if (organization === undefined) {\n            this.setState({ error: undefined, validating: false });\n            this.props.onChange(key);\n          } else {\n            this.setState({\n              error: translate('onboarding.create_organization.organization_name.taken'),\n              touched: true,\n              validating: false\n            });\n            this.props.onChange(undefined);\n          }\n        }\n      })\n      .catch(() => {\n        if (this.mounted) {\n          this.setState({ error: undefined, validating: false });\n          this.props.onChange(key);\n        }\n      });\n  };\n\n  handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const { value } = event.currentTarget;\n    this.setState({ touched: true, value });\n    this.validateKey(value);\n  };\n\n  validateKey(key: string) {\n    if (key.length > 255 || !/^[a-z0-9][a-z0-9-]*[a-z0-9]?$/.test(key)) {\n      this.setState({\n        error: translate('onboarding.create_organization.organization_name.error'),\n        touched: true\n      });\n      this.props.onChange(undefined);\n    } else {\n      this.checkFreeKey(key);\n    }\n  }\n\n  render() {\n    const isInvalid = this.state.touched && this.state.error !== undefined;\n    const isValid = this.state.touched && !this.state.validating && this.state.error === undefined;\n    return (\n      <ValidationInput\n        error={this.state.error}\n        id=\"organization-key\"\n        isInvalid={isInvalid}\n        isValid={isValid}\n        label={translate('onboarding.create_organization.organization_name')}\n        required={true}>\n        <div className=\"display-inline-flex-baseline\">\n          <span className=\"little-spacer-right\">\n            {getHostUrl().replace(/https*:\\/\\//, '') + '/organizations/'}\n          </span>\n          <input\n            autoFocus={true}\n            className={classNames('input-super-large', {\n              'is-invalid': isInvalid,\n              'is-valid': isValid\n            })}\n            id=\"organization-key\"\n            maxLength={255}\n            onChange={this.handleChange}\n            type=\"text\"\n            value={this.state.value}\n          />\n        </div>\n      </ValidationInput>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport * as classNames from 'classnames';\nimport { isWebUri } from 'valid-url';\nimport ValidationInput from '../../../components/controls/ValidationInput';\nimport { translate } from '../../../helpers/l10n';\n\ninterface Props {\n  initialValue?: string;\n  onChange: (value: string | undefined) => void;\n}\n\ninterface State {\n  editing: boolean;\n  error?: string;\n  touched: boolean;\n  value: string;\n}\n\nexport default class OrganizationUrlInput extends React.PureComponent<Props, State> {\n  state: State = { error: undefined, editing: false, touched: false, value: '' };\n\n  componentDidMount() {\n    if (this.props.initialValue) {\n      const value = this.props.initialValue;\n      const error = this.validateUrl(value);\n      this.setState({ error, touched: Boolean(error), value });\n    }\n  }\n\n  handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const value = event.currentTarget.value.trim();\n    const error = this.validateUrl(value);\n    this.setState({ error, touched: true, value });\n    this.props.onChange(error === undefined ? value : undefined);\n  };\n\n  handleBlur = () => {\n    this.setState({ editing: false });\n  };\n\n  handleFocus = () => {\n    this.setState({ editing: true });\n  };\n\n  validateUrl(url: string) {\n    if (url.length > 0 && !isWebUri(url)) {\n      return translate('onboarding.create_organization.url.error');\n    }\n    return undefined;\n  }\n\n  render() {\n    const isInvalid = this.state.touched && !this.state.editing && this.state.error !== undefined;\n    const isValid = this.state.touched && this.state.error === undefined && this.state.value !== '';\n    return (\n      <ValidationInput\n        error={this.state.error}\n        id=\"organization-url\"\n        isInvalid={isInvalid}\n        isValid={isValid}\n        label={translate('onboarding.create_organization.url')}>\n        <input\n          className={classNames('input-super-large', 'text-middle', {\n            'is-invalid': isInvalid,\n            'is-valid': isValid\n          })}\n          id=\"organization-url\"\n          onBlur={this.handleBlur}\n          onChange={this.handleChange}\n          onFocus={this.handleFocus}\n          type=\"text\"\n          value={this.state.value}\n        />\n      </ValidationInput>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport DeferredSpinner from '../../../components/common/DeferredSpinner';\nimport DropdownIcon from '../../../components/icons-components/DropdownIcon';\nimport OrganizationAvatarInput from '../components/OrganizationAvatarInput';\nimport OrganizationKeyInput from '../components/OrganizationKeyInput';\nimport OrganizationUrlInput from '../components/OrganizationUrlInput';\nimport { ResetButtonLink, SubmitButton } from '../../../components/ui/buttons';\nimport { translate } from '../../../helpers/l10n';\n\ntype RequiredOrganization = Required<T.OrganizationBase>;\n\ninterface Props {\n  infoBlock?: React.ReactNode;\n  keyReadOnly?: boolean;\n  onContinue: (organization: T.Organization) => Promise<void>;\n  organization?: T.Organization;\n  submitText: string;\n}\n\ninterface State {\n  additional: boolean;\n  avatar?: string;\n  description?: string;\n  key?: string;\n  name?: string;\n  submitting: boolean;\n  url?: string;\n}\n\ntype ValidState = Pick<State, Exclude<keyof State, RequiredOrganization>> & RequiredOrganization;\n\nexport default class OrganizationDetailsForm extends React.PureComponent<Props, State> {\n  mounted = false;\n\n  constructor(props: Props) {\n    super(props);\n    const { organization } = props;\n    this.state = {\n      additional: false,\n      avatar: (organization && organization.avatar) || '',\n      description: (organization && organization.description) || '',\n      key: (organization && organization.key) || undefined,\n      name: (organization && organization.name) || '',\n      submitting: false,\n      url: (organization && organization.url) || ''\n    };\n  }\n\n  componentDidMount() {\n    this.mounted = true;\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  canSubmit(state: State): state is ValidState {\n    return Boolean(\n      state.key !== undefined &&\n        state.name !== undefined &&\n        state.description !== undefined &&\n        state.avatar !== undefined &&\n        state.url !== undefined\n    );\n  }\n\n  handleAdditionalClick = () => {\n    this.setState(state => ({ additional: !state.additional }));\n  };\n\n  handleAvatarUpdate = (avatar: string | undefined) => {\n    this.setState({ avatar });\n  };\n\n  handleDescriptionUpdate = (event: React.ChangeEvent<HTMLTextAreaElement>) => {\n    this.setState({ description: event.currentTarget.value });\n  };\n\n  handleKeyUpdate = (key: string | undefined) => {\n    this.setState({ key });\n  };\n\n  handleNameUpdate = (event: React.ChangeEvent<HTMLInputElement>) => {\n    this.setState({ name: event.currentTarget.value });\n  };\n\n  handleUrlUpdate = (url: string | undefined) => {\n    this.setState({ url });\n  };\n\n  handleSubmit = (event: React.FormEvent) => {\n    event.preventDefault();\n    const { state } = this;\n    if (this.canSubmit(state)) {\n      this.setState({ submitting: true });\n      this.props\n        .onContinue({\n          avatar: state.avatar,\n          description: state.description,\n          key: state.key,\n          name: state.name,\n          url: state.url\n        })\n        .then(this.stopSubmitting, this.stopSubmitting);\n    }\n  };\n\n  stopSubmitting = () => {\n    if (this.mounted) {\n      this.setState({ submitting: false });\n    }\n  };\n\n  render() {\n    const { submitting } = this.state;\n    const { infoBlock, keyReadOnly } = this.props;\n    return (\n      <form id=\"organization-form\" onSubmit={this.handleSubmit}>\n        {!keyReadOnly && (\n          <OrganizationKeyInput initialValue={this.state.key} onChange={this.handleKeyUpdate} />\n        )}\n        <div className=\"big-spacer-top\">\n          <ResetButtonLink onClick={this.handleAdditionalClick}>\n            {translate(\n              this.state.additional\n                ? 'onboarding.create_organization.hide_additional_info'\n                : 'onboarding.create_organization.add_additional_info'\n            )}\n            <DropdownIcon className=\"little-spacer-left\" turned={this.state.additional} />\n          </ResetButtonLink>\n        </div>\n        <div className=\"js-additional-info\" hidden={!this.state.additional}>\n          <div className=\"big-spacer-top\">\n            <label htmlFor=\"organization-display-name\">\n              <strong>{translate('onboarding.create_organization.display_name')}</strong>\n            </label>\n            <div className=\"little-spacer-top\">\n              <input\n                className=\"input-super-large text-middle\"\n                id=\"organization-display-name\"\n                maxLength={255}\n                onChange={this.handleNameUpdate}\n                type=\"text\"\n                value={this.state.name}\n              />\n            </div>\n            <div className=\"note abs-width-400\">\n              {translate('onboarding.create_organization.display_name.description')}\n            </div>\n          </div>\n          <div className=\"big-spacer-top\">\n            <OrganizationAvatarInput\n              initialValue={this.state.avatar}\n              name={this.state.name}\n              onChange={this.handleAvatarUpdate}\n            />\n          </div>\n          <div className=\"big-spacer-top\">\n            <label htmlFor=\"organization-description\">\n              <strong>{translate('onboarding.create_organization.description')}</strong>\n            </label>\n            <div className=\"little-spacer-top\">\n              <textarea\n                className=\"input-super-large text-middle\"\n                id=\"organization-description\"\n                maxLength={256}\n                onChange={this.handleDescriptionUpdate}\n                rows={3}\n                value={this.state.description}\n              />\n            </div>\n          </div>\n          <div className=\"big-spacer-top\">\n            <OrganizationUrlInput initialValue={this.state.url} onChange={this.handleUrlUpdate} />\n          </div>\n        </div>\n\n        {infoBlock}\n\n        <div className=\"display-flex-center big-spacer-top\">\n          <SubmitButton disabled={submitting || !this.canSubmit(this.state)}>\n            {this.props.submitText}\n          </SubmitButton>\n          {submitting && <DeferredSpinner className=\"spacer-left\" />}\n        </div>\n      </form>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport Step from '../../tutorials/components/Step';\nimport { translate } from '../../../helpers/l10n';\nimport AlertSuccessIcon from '../../../components/icons-components/AlertSuccessIcon';\n\ninterface Props {\n  children: React.ReactNode;\n  finished: boolean;\n  onOpen: () => void;\n  open: boolean;\n  organization?: T.Organization;\n  stepTitle?: string;\n}\nexport default class OrganizationDetailsStep extends React.PureComponent<Props> {\n  renderForm = () => {\n    return <div className=\"boxed-group-inner\">{this.props.children}</div>;\n  };\n\n  renderResult = () => {\n    const { organization } = this.props;\n    return organization ? (\n      <div className=\"boxed-group-actions display-flex-center\">\n        <AlertSuccessIcon className=\"spacer-right\" />\n        <strong className=\"text-limited\">{organization.key}</strong>\n      </div>\n    ) : null;\n  };\n\n  render() {\n    return (\n      <Step\n        finished={this.props.finished}\n        onOpen={this.props.onOpen}\n        open={this.props.open}\n        renderForm={this.renderForm}\n        renderResult={this.renderResult}\n        stepNumber={1}\n        stepTitle={\n          this.props.stepTitle || translate('onboarding.create_organization.enter_org_details')\n        }\n      />\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport RadioCard, { RadioCardProps } from '../../../components/controls/RadioCard';\nimport { Alert } from '../../../components/ui/Alert';\nimport { formatPrice } from '../organization/utils';\nimport { translate } from '../../../helpers/l10n';\n\ninterface Props extends RadioCardProps {\n  almName?: string;\n  hasWarning: boolean;\n}\n\nexport default function FreeCardPlan({ almName, hasWarning, ...props }: Props) {\n  const showInfo = almName && props.disabled;\n  const showWarning = almName && hasWarning && !props.disabled;\n\n  return (\n    <RadioCard title={translate('billing.free_plan.title')} titleInfo={formatPrice(0)} {...props}>\n      <div className=\"spacer-left\">\n        <ul className=\"big-spacer-left note\">\n          <li className=\"little-spacer-bottom\">\n            {translate('billing.free_plan.all_projects_analyzed_public')}\n          </li>\n          <li>{translate('billing.free_plan.anyone_can_browse_source_code')}</li>\n        </ul>\n      </div>\n      {showWarning && (\n        <Alert variant=\"warning\">\n          <FormattedMessage\n            defaultMessage={translate('billing.free_plan.private_repo_warning')}\n            id=\"billing.free_plan.private_repo_warning\"\n            values={{ alm: almName }}\n          />\n        </Alert>\n      )}\n      {showInfo && (\n        <Alert variant=\"info\">\n          <FormattedMessage\n            defaultMessage={translate('billing.free_plan.not_available_info')}\n            id=\"billing.free_plan.not_available_info\"\n            values={{ alm: almName }}\n          />\n        </Alert>\n      )}\n    </RadioCard>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport { Link } from 'react-router';\nimport UpgradeOrganizationAdvantages from './UpgradeOrganizationAdvantages';\nimport RadioCard, { RadioCardProps } from '../../../components/controls/RadioCard';\nimport { formatPrice } from '../organization/utils';\nimport { translate } from '../../../helpers/l10n';\n\ninterface Props extends RadioCardProps {\n  isRecommended: boolean;\n  startingPrice?: number;\n}\n\nexport default function PaidCardPlan({ isRecommended, startingPrice, ...props }: Props) {\n  return (\n    <RadioCard\n      recommended={isRecommended ? translate('billing.paid_plan.recommended') : undefined}\n      title={translate('billing.paid_plan.title')}\n      titleInfo={\n        startingPrice !== undefined && (\n          <FormattedMessage\n            defaultMessage={translate('billing.price_from_x')}\n            id=\"billing.price_from_x\"\n            values={{\n              price: <span className=\"big\">{formatPrice(startingPrice)}</span>\n            }}\n          />\n        )\n      }\n      {...props}>\n      <UpgradeOrganizationAdvantages />\n      <div className=\"big-spacer-left\">\n        <Link className=\"spacer-left\" target=\"_blank\" to=\"/about/pricing\">\n          {translate('billing.pricing.learn_more')}\n        </Link>\n      </div>\n    </RadioCard>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport FreeCardPlan from '../components/FreeCardPlan';\nimport PaidCardPlan from '../components/PaidCardPlan';\nimport { translate } from '../../../helpers/l10n';\n\nexport enum Plan {\n  Free = 'free',\n  Paid = 'paid'\n}\n\ninterface Props {\n  almApplication?: T.AlmApplication;\n  almOrganization?: T.AlmOrganization;\n  onChange: (plan: Plan) => void;\n  plan: Plan;\n  startingPrice: number;\n}\n\nexport default class PlanSelect extends React.PureComponent<Props> {\n  handleFreePlanClick = () => {\n    this.props.onChange(Plan.Free);\n  };\n\n  handlePaidPlanClick = () => {\n    this.props.onChange(Plan.Paid);\n  };\n\n  render() {\n    const { almApplication, almOrganization, plan } = this.props;\n    const hasPrivateRepo = Boolean(almOrganization && almOrganization.privateRepos > 0);\n    const onlyPrivateRepo = Boolean(\n      hasPrivateRepo && almOrganization && almOrganization.publicRepos === 0\n    );\n\n    const cards = [\n      <PaidCardPlan\n        isRecommended={hasPrivateRepo}\n        key=\"paid\"\n        onClick={this.handlePaidPlanClick}\n        selected={plan === Plan.Paid}\n        startingPrice={this.props.startingPrice}\n      />,\n      <FreeCardPlan\n        almName={almApplication && almApplication.name}\n        disabled={onlyPrivateRepo}\n        hasWarning={hasPrivateRepo && plan === Plan.Free}\n        key=\"free\"\n        onClick={this.handleFreePlanClick}\n        selected={plan === Plan.Free}\n      />\n    ];\n\n    return (\n      <div\n        aria-label={translate('onboarding.create_organization.choose_plan')}\n        className=\"display-flex-row huge-spacer-bottom\"\n        role=\"radiogroup\">\n        {hasPrivateRepo ? cards : cards.reverse()}\n      </div>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport AutoOrganizationBind from './AutoOrganizationBind';\nimport OrganizationDetailsForm from './OrganizationDetailsForm';\nimport OrganizationDetailsStep from './OrganizationDetailsStep';\nimport PlanStep from './PlanStep';\nimport { Step } from './utils';\nimport { Alert } from '../../../components/ui/Alert';\nimport { ClearButton } from '../../../components/ui/buttons';\nimport RadioToggle from '../../../components/controls/RadioToggle';\nimport { bindAlmOrganization } from '../../../api/alm-integration';\nimport { sanitizeAlmId, getAlmMembersUrl, isGithub } from '../../../helpers/almIntegrations';\nimport { translate, translateWithParameters } from '../../../helpers/l10n';\nimport { getBaseUrl } from '../../../helpers/urls';\n\nenum Filters {\n  Bind = 'bind',\n  Create = 'create'\n}\n\ninterface Props {\n  almApplication: T.AlmApplication;\n  almInstallId: string;\n  almOrganization: T.AlmOrganization;\n  className?: string;\n  createOrganization: (\n    organization: T.Organization & { installationId?: string }\n  ) => Promise<string>;\n  handleCancelImport: () => void;\n  handleOrgDetailsFinish: (organization: T.Organization) => Promise<void>;\n  handleOrgDetailsStepOpen: () => void;\n  onDone: () => void;\n  onOrgCreated: (organization: string) => void;\n  onUpgradeFail: () => void;\n  organization?: T.Organization;\n  step: Step;\n  subscriptionPlans?: T.SubscriptionPlan[];\n  unboundOrganizations: T.Organization[];\n}\n\ninterface State {\n  filter?: Filters;\n}\n\nexport default class AutoOrganizationCreate extends React.PureComponent<Props, State> {\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      filter: props.unboundOrganizations.length === 0 ? Filters.Create : undefined\n    };\n  }\n\n  handleBindOrganization = (organization: string) => {\n    return bindAlmOrganization({\n      organization,\n      installationId: this.props.almInstallId\n    }).then(() => this.props.onOrgCreated(organization));\n  };\n\n  handleCreateOrganization = () => {\n    const { almApplication, almOrganization, organization } = this.props;\n    if (!organization) {\n      return Promise.reject();\n    }\n    return this.props.createOrganization({\n      ...organization,\n      alm: {\n        key: almApplication.key,\n        membersSync: true,\n        url: almOrganization.almUrl\n      },\n      installationId: this.props.almInstallId\n    });\n  };\n\n  handleOptionChange = (filter: Filters) => {\n    this.setState({ filter });\n  };\n\n  render() {\n    const {\n      almApplication,\n      almOrganization,\n      className,\n      organization,\n      step,\n      subscriptionPlans,\n      unboundOrganizations\n    } = this.props;\n    const { filter } = this.state;\n    const hasUnboundOrgs = unboundOrganizations.length > 0;\n    const almKey = sanitizeAlmId(almApplication.key);\n    return (\n      <div className={className}>\n        <OrganizationDetailsStep\n          finished={organization !== undefined}\n          onOpen={this.props.handleOrgDetailsStepOpen}\n          open={step === Step.OrganizationDetails}\n          organization={organization}\n          stepTitle={translate('onboarding.import_organization.import_org_details')}>\n          <div className=\"huge-spacer-bottom\">\n            <p className=\"display-flex-center big-spacer-bottom\">\n              <FormattedMessage\n                defaultMessage={translate('onboarding.import_organization_x')}\n                id=\"onboarding.import_organization_x\"\n                values={{\n                  avatar: (\n                    <img\n                      alt={almApplication.name}\n                      className=\"little-spacer-left\"\n                      src={`${getBaseUrl()}/images/sonarcloud/${sanitizeAlmId(\n                        almApplication.key\n                      )}.svg`}\n                      width={16}\n                    />\n                  ),\n                  name: <strong>{almOrganization.name}</strong>\n                }}\n              />\n              <ClearButton className=\"little-spacer-left\" onClick={this.props.handleCancelImport} />\n            </p>\n\n            {hasUnboundOrgs && (\n              <RadioToggle\n                name=\"filter\"\n                onCheck={this.handleOptionChange}\n                options={[\n                  {\n                    label: translate('onboarding.import_organization.create_new'),\n                    value: Filters.Create\n                  },\n                  {\n                    label: translate('onboarding.import_organization.bind_existing'),\n                    value: Filters.Bind\n                  }\n                ]}\n                value={filter}\n              />\n            )}\n          </div>\n\n          {filter === Filters.Create && (\n            <OrganizationDetailsForm\n              infoBlock={\n                isGithub(almKey) && (\n                  <Alert className=\"abs-width-600 big-spacer-top\" display=\"block\" variant=\"info\">\n                    <p>\n                      {translateWithParameters(\n                        'onboarding.import_organization.members_sync_info_x',\n                        translate('organization', almKey),\n                        almOrganization.name,\n                        translate(almKey)\n                      )}\n                    </p>\n                    <a\n                      href={getAlmMembersUrl(almApplication.key, almOrganization.almUrl)}\n                      rel=\"noopener noreferrer\"\n                      target=\"_blank\">\n                      {translateWithParameters(\n                        'organization.members.see_all_members_on_x',\n                        translate(almKey)\n                      )}\n                    </a>\n                  </Alert>\n                )\n              }\n              onContinue={this.props.handleOrgDetailsFinish}\n              organization={almOrganization}\n              submitText={translate('continue')}\n            />\n          )}\n          {filter === Filters.Bind && (\n            <AutoOrganizationBind\n              almKey={almKey}\n              onBindOrganization={this.handleBindOrganization}\n              unboundOrganizations={unboundOrganizations}\n            />\n          )}\n        </OrganizationDetailsStep>\n\n        {subscriptionPlans !== undefined && filter !== Filters.Bind && (\n          <PlanStep\n            almApplication={this.props.almApplication}\n            almOrganization={this.props.almOrganization}\n            createOrganization={this.handleCreateOrganization}\n            onDone={this.props.onDone}\n            onUpgradeFail={this.props.onUpgradeFail}\n            open={step === Step.Plan}\n            subscriptionPlans={subscriptionPlans}\n          />\n        )}\n      </div>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport PlanSelect, { Plan } from './PlanSelect';\nimport BillingFormShim from '../components/BillingFormShim';\nimport DeferredSpinner from '../../../components/common/DeferredSpinner';\nimport Step from '../../tutorials/components/Step';\nimport { SubmitButton } from '../../../components/ui/buttons';\nimport { withCurrentUser } from '../../../components/hoc/withCurrentUser';\nimport { getExtensionStart } from '../../../helpers/extensions';\nimport { translate } from '../../../helpers/l10n';\n\nconst BillingForm = withCurrentUser(BillingFormShim);\n\ninterface Props {\n  almApplication?: T.AlmApplication;\n  almOrganization?: T.AlmOrganization;\n  createOrganization: () => Promise<string>;\n  onDone: () => void;\n  onUpgradeFail?: () => void;\n  open: boolean;\n  subscriptionPlans: T.SubscriptionPlan[];\n}\n\ninterface State {\n  plan: Plan;\n  ready: boolean;\n  submitting: boolean;\n}\n\nexport default class PlanStep extends React.PureComponent<Props, State> {\n  mounted = false;\n\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      plan: props.almOrganization && props.almOrganization.privateRepos > 0 ? Plan.Paid : Plan.Free,\n      ready: false,\n      submitting: false\n    };\n  }\n\n  componentDidMount() {\n    this.mounted = true;\n    getExtensionStart('billing/billing').then(\n      () => {\n        if (this.mounted) {\n          this.setState({ ready: true });\n        }\n      },\n      () => {}\n    );\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  handlePlanChange = (plan: Plan) => {\n    this.setState({ plan });\n  };\n\n  stopSubmitting = () => {\n    if (this.mounted) {\n      this.setState({ submitting: false });\n    }\n  };\n\n  handleFreePlanSubmit = (event: React.FormEvent) => {\n    event.preventDefault();\n    this.setState({ submitting: true });\n    return this.props.createOrganization().then(() => {\n      this.props.onDone();\n      this.stopSubmitting();\n    }, this.stopSubmitting);\n  };\n\n  renderForm = () => {\n    const { submitting } = this.state;\n    const { subscriptionPlans } = this.props;\n    const startingPrice = subscriptionPlans && subscriptionPlans[0] && subscriptionPlans[0].price;\n    return (\n      <div className=\"boxed-group-inner\">\n        {this.state.ready && (\n          <>\n            <PlanSelect\n              almApplication={this.props.almApplication}\n              almOrganization={this.props.almOrganization}\n              onChange={this.handlePlanChange}\n              plan={this.state.plan}\n              startingPrice={startingPrice}\n            />\n\n            {this.state.plan === Plan.Paid ? (\n              <BillingForm\n                onCommit={this.props.onDone}\n                onFailToUpgrade={this.props.onUpgradeFail}\n                organizationKey={this.props.createOrganization}\n                subscriptionPlans={this.props.subscriptionPlans}>\n                {({ onSubmit, renderFormFields, renderSubmitGroup }) => (\n                  <form id=\"organization-paid-plan-form\" onSubmit={onSubmit}>\n                    {renderFormFields()}\n                    <div className=\"billing-input-large big-spacer-top\">\n                      {renderSubmitGroup(\n                        translate('onboarding.create_organization.create_and_upgrade')\n                      )}\n                    </div>\n                  </form>\n                )}\n              </BillingForm>\n            ) : (\n              <form\n                className=\"display-flex-center big-spacer-top\"\n                id=\"organization-free-plan-form\"\n                onSubmit={this.handleFreePlanSubmit}>\n                <SubmitButton disabled={submitting}>\n                  {translate('my_account.create_organization')}\n                </SubmitButton>\n                {submitting && <DeferredSpinner className=\"spacer-left\" />}\n              </form>\n            )}\n          </>\n        )}\n      </div>\n    );\n  };\n\n  render() {\n    const { almOrganization } = this.props;\n    const stepTitle = translate(\n      almOrganization && almOrganization.privateRepos > 0 && almOrganization.publicRepos === 0\n        ? 'onboarding.create_organization.enter_payment_details'\n        : 'onboarding.create_organization.choose_plan'\n    );\n\n    return (\n      <Step\n        finished={false}\n        onOpen={() => {}}\n        open={this.props.open}\n        renderForm={this.renderForm}\n        renderResult={() => null}\n        stepNumber={2}\n        stepTitle={stepTitle}\n      />\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport OrganizationDetailsForm from './OrganizationDetailsForm';\nimport OrganizationDetailsStep from './OrganizationDetailsStep';\nimport PlanStep from './PlanStep';\nimport { Step } from './utils';\nimport { ClearButton } from '../../../components/ui/buttons';\nimport OrganizationAvatar from '../../../components/common/OrganizationAvatar';\nimport { getBaseUrl } from '../../../helpers/urls';\nimport { translate } from '../../../helpers/l10n';\nimport { sanitizeAlmId } from '../../../helpers/almIntegrations';\n\ninterface Props {\n  almApplication: T.AlmApplication;\n  almInstallId?: string;\n  almOrganization: T.AlmOrganization;\n  handleCancelImport: () => void;\n  handleOrgDetailsFinish: (organization: T.Organization) => Promise<void>;\n  handleOrgDetailsStepOpen: () => void;\n  importPersonalOrg: T.Organization;\n  onDone: () => void;\n  organization?: T.Organization;\n  step: Step;\n  subscriptionPlans?: T.SubscriptionPlan[];\n  updateOrganization: (\n    organization: T.Organization & { installationId?: string }\n  ) => Promise<string>;\n}\n\nexport default class AutoPersonalOrganizationBind extends React.PureComponent<Props> {\n  handleCreateOrganization = () => {\n    const { organization } = this.props;\n    if (!organization) {\n      return Promise.reject();\n    }\n    return this.props.updateOrganization({\n      ...organization,\n      installationId: this.props.almInstallId\n    });\n  };\n\n  handleOrgDetailsFinish = (organization: T.Organization) => {\n    return this.props.handleOrgDetailsFinish({\n      ...organization,\n      key: this.props.importPersonalOrg.key\n    });\n  };\n\n  render() {\n    const { almApplication, importPersonalOrg, organization, step, subscriptionPlans } = this.props;\n    return (\n      <>\n        <OrganizationDetailsStep\n          finished={organization !== undefined}\n          onOpen={this.props.handleOrgDetailsStepOpen}\n          open={step === Step.OrganizationDetails}\n          organization={organization}\n          stepTitle={translate('onboarding.import_organization.personal.import_org_details')}>\n          <div className=\"display-flex-center big-spacer-bottom\">\n            <FormattedMessage\n              defaultMessage={translate('onboarding.import_personal_organization_x')}\n              id=\"onboarding.import_personal_organization_x\"\n              values={{\n                avatar: (\n                  <img\n                    alt={almApplication.name}\n                    className=\"little-spacer-left\"\n                    src={`${getBaseUrl()}/images/sonarcloud/${sanitizeAlmId(\n                      almApplication.key\n                    )}.svg`}\n                    width={16}\n                  />\n                ),\n                name: <strong>{this.props.almOrganization.name}</strong>,\n                personalAvatar: importPersonalOrg && (\n                  <OrganizationAvatar organization={importPersonalOrg} small={true} />\n                ),\n                personalName: importPersonalOrg && <strong>{importPersonalOrg.name}</strong>\n              }}\n            />\n            <ClearButton className=\"little-spacer-left\" onClick={this.props.handleCancelImport} />\n          </div>\n          <OrganizationDetailsForm\n            keyReadOnly={true}\n            onContinue={this.handleOrgDetailsFinish}\n            organization={importPersonalOrg}\n            submitText={translate('continue')}\n          />\n        </OrganizationDetailsStep>\n        {subscriptionPlans !== undefined && (\n          <PlanStep\n            almApplication={this.props.almApplication}\n            almOrganization={this.props.almOrganization}\n            createOrganization={this.handleCreateOrganization}\n            onDone={this.props.onDone}\n            open={step === Step.Plan}\n            subscriptionPlans={subscriptionPlans}\n          />\n        )}\n      </>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport OrganizationDetailsForm from './OrganizationDetailsForm';\nimport OrganizationDetailsStep from './OrganizationDetailsStep';\nimport PlanStep from './PlanStep';\nimport { Step } from './utils';\nimport { translate } from '../../../helpers/l10n';\n\ninterface Props {\n  createOrganization: (organization: T.Organization) => Promise<string>;\n  className?: string;\n  onUpgradeFail: () => void;\n  handleOrgDetailsFinish: (organization: T.Organization) => Promise<void>;\n  handleOrgDetailsStepOpen: () => void;\n  onDone: () => void;\n  organization?: T.Organization;\n  step: Step;\n  subscriptionPlans?: T.SubscriptionPlan[];\n}\n\nexport default class ManualOrganizationCreate extends React.PureComponent<Props> {\n  handleCreateOrganization = () => {\n    const { organization } = this.props;\n    if (!organization) {\n      return Promise.reject();\n    }\n    return this.props.createOrganization(organization);\n  };\n\n  render() {\n    const { className, organization, subscriptionPlans } = this.props;\n    return (\n      <div className={className}>\n        <OrganizationDetailsStep\n          finished={organization !== undefined}\n          onOpen={this.props.handleOrgDetailsStepOpen}\n          open={this.props.step === Step.OrganizationDetails}\n          organization={organization}>\n          <OrganizationDetailsForm\n            onContinue={this.props.handleOrgDetailsFinish}\n            organization={organization}\n            submitText={translate('continue')}\n          />\n        </OrganizationDetailsStep>\n\n        {subscriptionPlans !== undefined && (\n          <PlanStep\n            createOrganization={this.handleCreateOrganization}\n            onDone={this.props.onDone}\n            onUpgradeFail={this.props.onUpgradeFail}\n            open={this.props.step === Step.Plan}\n            subscriptionPlans={subscriptionPlans}\n          />\n        )}\n      </div>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport * as classNames from 'classnames';\nimport { WithRouterProps, withRouter } from 'react-router';\nimport { FormattedMessage } from 'react-intl';\nimport { sortBy } from 'lodash';\nimport { serializeQuery, ORGANIZATION_IMPORT_BINDING_IN_PROGRESS_TIMESTAMP } from './utils';\nimport IdentityProviderLink from '../../../components/ui/IdentityProviderLink';\nimport OrganizationAvatar from '../../../components/common/OrganizationAvatar';\nimport Select from '../../../components/controls/Select';\nimport { Alert } from '../../../components/ui/Alert';\nimport { SubmitButton } from '../../../components/ui/buttons';\nimport { sanitizeAlmId } from '../../../helpers/almIntegrations';\nimport { translate, translateWithParameters } from '../../../helpers/l10n';\nimport { save } from '../../../helpers/storage';\nimport { getBaseUrl } from '../../../helpers/urls';\n\ninterface Props {\n  almApplication: T.AlmApplication;\n  almInstallId?: string;\n  almOrganization?: T.AlmOrganization;\n  almUnboundApplications: T.AlmUnboundApplication[];\n  boundOrganization?: T.OrganizationBase;\n  className?: string;\n}\n\ninterface State {\n  unboundInstallationId: string;\n}\n\nexport class RemoteOrganizationChoose extends React.PureComponent<Props & WithRouterProps, State> {\n  state: State = { unboundInstallationId: '' };\n\n  handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n\n    const { unboundInstallationId } = this.state;\n    if (unboundInstallationId) {\n      this.props.router.push({\n        pathname: '/create-organization',\n        query: serializeQuery({\n          almInstallId: unboundInstallationId,\n          almKey: this.props.almApplication.key\n        })\n      });\n    }\n  };\n\n  handleInstallAppClick = () => {\n    save(ORGANIZATION_IMPORT_BINDING_IN_PROGRESS_TIMESTAMP, Date.now().toString(10));\n  };\n\n  handleInstallationChange = ({ installationId }: T.AlmUnboundApplication) => {\n    this.setState({ unboundInstallationId: installationId });\n  };\n\n  renderOption = (organization: T.AlmUnboundApplication) => {\n    const { almApplication } = this.props;\n    return (\n      <span>\n        <img\n          alt={almApplication.name}\n          className=\"spacer-right\"\n          height={14}\n          src={`${getBaseUrl()}/images/sonarcloud/${sanitizeAlmId(almApplication.key)}.svg`}\n        />\n        {organization.name}\n      </span>\n    );\n  };\n\n  render() {\n    const {\n      almApplication,\n      almInstallId,\n      almOrganization,\n      almUnboundApplications,\n      boundOrganization,\n      className\n    } = this.props;\n    const { unboundInstallationId } = this.state;\n    return (\n      <div className={classNames('boxed-group', className)}>\n        <div className=\"boxed-group-header\">\n          <h2>{translate('onboarding.import_organization.import_org_details')}</h2>\n        </div>\n        <div className=\"boxed-group-inner\">\n          {almInstallId && !almOrganization && (\n            <Alert className=\"big-spacer-bottom width-60\" variant=\"error\">\n              <div className=\"markdown\">\n                {translate('onboarding.import_organization.org_not_found')}\n                <ul>\n                  <li>{translate('onboarding.import_organization.org_not_found.tips_1')}</li>\n                  <li>{translate('onboarding.import_organization.org_not_found.tips_2')}</li>\n                </ul>\n              </div>\n            </Alert>\n          )}\n          {almOrganization && boundOrganization && (\n            <Alert className=\"big-spacer-bottom width-60\" variant=\"error\">\n              <FormattedMessage\n                defaultMessage={translate('onboarding.import_organization.already_bound_x')}\n                id=\"onboarding.import_organization.already_bound_x\"\n                values={{\n                  avatar: (\n                    <img\n                      alt={almApplication.name}\n                      className=\"little-spacer-left\"\n                      src={`${getBaseUrl()}/images/sonarcloud/${sanitizeAlmId(\n                        almApplication.key\n                      )}.svg`}\n                      width={16}\n                    />\n                  ),\n                  name: <strong>{almOrganization.name}</strong>,\n                  boundAvatar: (\n                    <OrganizationAvatar\n                      className=\"little-spacer-left\"\n                      organization={boundOrganization}\n                      small={true}\n                    />\n                  ),\n                  boundName: <strong>{boundOrganization.name}</strong>\n                }}\n              />\n            </Alert>\n          )}\n          <div className=\"display-flex-center\">\n            <div className=\"display-inline-block\">\n              <IdentityProviderLink\n                className=\"display-inline-block\"\n                identityProvider={almApplication}\n                onClick={this.handleInstallAppClick}\n                small={true}\n                url={almApplication.installationUrl}>\n                {translate(\n                  'onboarding.import_organization.choose_organization_button',\n                  almApplication.key\n                )}\n              </IdentityProviderLink>\n            </div>\n            {almUnboundApplications.length > 0 && (\n              <div className=\"display-flex-stretch\">\n                <div className=\"vertical-pipe-separator\">\n                  <div className=\"vertical-separator \" />\n                  <span className=\"note\">{translate('or')}</span>\n                  <div className=\"vertical-separator\" />\n                </div>\n                <form className=\"big-spacer-top big-spacer-bottom\" onSubmit={this.handleSubmit}>\n                  <div className=\"form-field abs-width-400\">\n                    <label className=\"text-normal\" htmlFor=\"select-unbound-installation\">\n                      {translateWithParameters(\n                        'onboarding.import_organization.choose_unbound_installation_x',\n                        translate(sanitizeAlmId(almApplication.key))\n                      )}\n                    </label>\n                    <Select\n                      className=\"input-super-large\"\n                      clearable={false}\n                      id=\"select-unbound-installation\"\n                      labelKey=\"name\"\n                      onChange={this.handleInstallationChange}\n                      optionRenderer={this.renderOption}\n                      options={sortBy(almUnboundApplications, o => o.name.toLowerCase())}\n                      placeholder={translate('onboarding.import_organization.choose_organization')}\n                      value={unboundInstallationId}\n                      valueKey=\"installationId\"\n                      valueRenderer={this.renderOption}\n                    />\n                  </div>\n                  <SubmitButton disabled={!unboundInstallationId}>\n                    {translate('continue')}\n                  </SubmitButton>\n                </form>\n              </div>\n            )}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default withRouter(RemoteOrganizationChoose);\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport * as classNames from 'classnames';\nimport { differenceInMinutes } from 'date-fns';\nimport { times } from 'lodash';\nimport { connect } from 'react-redux';\nimport { Helmet } from 'react-helmet';\nimport { withRouter, WithRouterProps } from 'react-router';\nimport { createOrganization, updateOrganization } from './actions';\nimport {\n  ORGANIZATION_IMPORT_REDIRECT_TO_PROJECT_TIMESTAMP,\n  parseQuery,\n  serializeQuery,\n  Query,\n  ORGANIZATION_IMPORT_BINDING_IN_PROGRESS_TIMESTAMP,\n  Step,\n  BIND_ORGANIZATION_REDIRECT_TO_ORG_TIMESTAMP,\n  BIND_ORGANIZATION_KEY\n} from './utils';\nimport AlmApplicationInstalling from './AlmApplicationInstalling';\nimport AutoOrganizationCreate from './AutoOrganizationCreate';\nimport AutoPersonalOrganizationBind from './AutoPersonalOrganizationBind';\nimport ManualOrganizationCreate from './ManualOrganizationCreate';\nimport RemoteOrganizationChoose from './RemoteOrganizationChoose';\nimport A11ySkipTarget from '../../../app/components/a11y/A11ySkipTarget';\nimport DeferredSpinner from '../../../components/common/DeferredSpinner';\nimport Tabs from '../../../components/controls/Tabs';\nimport { whenLoggedIn } from '../../../components/hoc/whenLoggedIn';\nimport { withUserOrganizations } from '../../../components/hoc/withUserOrganizations';\nimport { deleteOrganization } from '../../organizations/actions';\nimport {\n  getAlmAppInfo,\n  getAlmOrganization,\n  GetAlmOrganizationResponse,\n  listUnboundApplications,\n  bindAlmOrganization\n} from '../../../api/alm-integration';\nimport { getSubscriptionPlans } from '../../../api/billing';\nimport * as api from '../../../api/organizations';\nimport {\n  hasAdvancedALMIntegration,\n  isPersonal,\n  sanitizeAlmId\n} from '../../../helpers/almIntegrations';\nimport { translate, translateWithParameters } from '../../../helpers/l10n';\nimport { addWhitePageClass, removeWhitePageClass } from '../../../helpers/pages';\nimport { get, remove } from '../../../helpers/storage';\nimport { slugify } from '../../../helpers/strings';\nimport { getOrganizationUrl } from '../../../helpers/urls';\nimport { skipOnboarding } from '../../../store/users';\nimport addGlobalSuccessMessage from '../../../app/utils/addGlobalSuccessMessage';\nimport '../../tutorials/styles.css'; // TODO remove me\n\ninterface Props {\n  createOrganization: (\n    organization: T.Organization & { installationId?: string }\n  ) => Promise<string>;\n  currentUser: T.LoggedInUser;\n  deleteOrganization: (key: string) => Promise<void>;\n  updateOrganization: (\n    organization: T.Organization & { installationId?: string }\n  ) => Promise<string>;\n  userOrganizations: T.Organization[];\n  skipOnboarding: () => void;\n}\n\ninterface State {\n  almApplication?: T.AlmApplication;\n  almOrganization?: T.AlmOrganization;\n  almOrgLoading: boolean;\n  almUnboundApplications: T.AlmUnboundApplication[];\n  bindingExistingOrg: boolean;\n  boundOrganization?: T.OrganizationBase;\n  loading: boolean;\n  organization?: T.Organization;\n  step: Step;\n  subscriptionPlans?: T.SubscriptionPlan[];\n}\n\ntype StateWithAutoImport = State & Required<Pick<State, 'almApplication'>>;\n\ntype TabKeys = 'auto' | 'manual';\n\ninterface LocationState {\n  tab?: TabKeys;\n}\n\nexport class CreateOrganization extends React.PureComponent<Props & WithRouterProps, State> {\n  mounted = false;\n  state: State = {\n    almOrgLoading: false,\n    almUnboundApplications: [],\n    bindingExistingOrg: false,\n    loading: true,\n    step: Step.OrganizationDetails\n  };\n\n  componentDidMount() {\n    this.mounted = true;\n    addWhitePageClass();\n\n    const query = parseQuery(this.props.location.query);\n\n    //highjack the process for the organization settings\n    if (\n      hasAdvancedALMIntegration(this.props.currentUser) &&\n      query.almInstallId &&\n      this.isStoredTimestampValid(BIND_ORGANIZATION_REDIRECT_TO_ORG_TIMESTAMP)\n    ) {\n      this.bindAndRedirectToOrganizationSettings(query.almInstallId);\n    } else {\n      const initRequests = [this.fetchSubscriptionPlans()];\n      if (hasAdvancedALMIntegration(this.props.currentUser)) {\n        initRequests.push(this.fetchAlmApplication());\n\n        if (query.almInstallId) {\n          this.fetchAlmOrganization(query.almInstallId);\n        } else {\n          initRequests.push(this.fetchAlmUnboundApplications());\n        }\n      }\n      Promise.all(initRequests).then(this.stopLoading, this.stopLoading);\n    }\n  }\n\n  componentDidUpdate(prevProps: WithRouterProps) {\n    const prevQuery = parseQuery(prevProps.location.query);\n    const query = parseQuery(this.props.location.query);\n    if (this.state.almApplication && prevQuery.almInstallId !== query.almInstallId) {\n      if (query.almInstallId) {\n        this.fetchAlmOrganization(query.almInstallId);\n      } else {\n        this.setState({ almOrganization: undefined, boundOrganization: undefined, loading: true });\n        this.fetchAlmUnboundApplications().then(this.stopLoading, this.stopLoading);\n      }\n    }\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n    removeWhitePageClass();\n  }\n\n  deleteOrganization = () => {\n    if (this.state.organization) {\n      this.props.deleteOrganization(this.state.organization.key);\n    }\n  };\n\n  fetchAlmApplication = () => {\n    return getAlmAppInfo().then(({ application }) => {\n      if (this.mounted) {\n        this.setState({ almApplication: application });\n      }\n    });\n  };\n\n  fetchAlmOrganization = (installationId: string) => {\n    this.setState({ almOrgLoading: true });\n    return getAlmOrganization({ installationId })\n      .then(({ almOrganization, boundOrganization }) => {\n        if (boundOrganization) {\n          return Promise.resolve({ almOrganization, boundOrganization });\n        }\n        return this.setValidOrgKey(almOrganization);\n      })\n      .then(\n        ({ almOrganization, boundOrganization }: GetAlmOrganizationResponse) => {\n          if (this.mounted) {\n            if (\n              boundOrganization &&\n              boundOrganization.key &&\n              !this.isStoredTimestampValid(ORGANIZATION_IMPORT_BINDING_IN_PROGRESS_TIMESTAMP)\n            ) {\n              this.props.router.push({\n                pathname: getOrganizationUrl(boundOrganization.key)\n              });\n            } else {\n              this.setState({ almOrganization, almOrgLoading: false, boundOrganization });\n            }\n          }\n        },\n        () => {\n          if (this.mounted) {\n            this.setState({ almOrgLoading: false });\n          }\n        }\n      );\n  };\n\n  fetchAlmUnboundApplications = () => {\n    return listUnboundApplications().then(almUnboundApplications => {\n      if (this.mounted) {\n        this.setState({ almUnboundApplications });\n      }\n    });\n  };\n\n  fetchSubscriptionPlans = () => {\n    return getSubscriptionPlans().then(subscriptionPlans => {\n      if (this.mounted) {\n        this.setState({ subscriptionPlans });\n      }\n    });\n  };\n\n  handleCancelImport = () => {\n    this.updateUrlQuery({ almInstallId: undefined, almKey: undefined });\n  };\n\n  handleOrgCreated = (organization: string) => {\n    this.props.skipOnboarding();\n    if (this.isStoredTimestampValid(ORGANIZATION_IMPORT_REDIRECT_TO_PROJECT_TIMESTAMP)) {\n      this.props.router.push({\n        pathname: '/projects/create',\n        state: { organization, tab: this.state.almOrganization ? 'auto' : 'manual' }\n      });\n    } else {\n      this.props.router.push({ pathname: getOrganizationUrl(organization) });\n    }\n  };\n\n  handleOrgDetailsFinish = (organization: T.Organization) => {\n    this.setState({ organization, step: Step.Plan });\n    return Promise.resolve();\n  };\n\n  handleOrgDetailsStepOpen = () => {\n    this.setState({ step: Step.OrganizationDetails });\n  };\n\n  handlePlanDone = () => {\n    if (this.state.organization) {\n      this.handleOrgCreated(this.state.organization.key);\n    }\n  };\n\n  hasAutoImport(state: State): state is StateWithAutoImport {\n    return Boolean(state.almApplication);\n  }\n\n  isStoredTimestampValid = (timestampKey: string) => {\n    const storedTimestamp = get(timestampKey);\n    remove(timestampKey);\n    return storedTimestamp && differenceInMinutes(Date.now(), Number(storedTimestamp)) < 10;\n  };\n\n  onTabChange = (tab: TabKeys) => {\n    this.updateUrlState({ tab });\n  };\n\n  bindAndRedirectToOrganizationSettings(installationId: string) {\n    const organizationKey = get(BIND_ORGANIZATION_KEY) || '';\n    remove(BIND_ORGANIZATION_KEY);\n\n    this.setState({ bindingExistingOrg: true });\n\n    bindAlmOrganization({\n      installationId,\n      organization: organizationKey\n    }).then(\n      () => {\n        this.props.router.push({\n          pathname: `/organizations/${organizationKey}`\n        });\n        addGlobalSuccessMessage(translate('organization.bind.success'));\n      },\n      () => {}\n    );\n  }\n\n  getHeader = (bindingExistingOrg: boolean, importPersonalOrg: boolean) => {\n    if (bindingExistingOrg) {\n      return translate('onboarding.binding_organization');\n    } else if (importPersonalOrg) {\n      return translate('onboarding.import_organization.personal.page.header');\n    } else {\n      return translate('onboarding.create_organization.page.header');\n    }\n  };\n\n  setValidOrgKey = (almOrganization: T.AlmOrganization) => {\n    const key = slugify(almOrganization.key);\n    const keys = [key, ...times(9, i => `${key}-${i + 1}`)];\n    return api\n      .getOrganizations({ organizations: keys.join(',') })\n      .then(\n        ({ organizations }) => {\n          const availableKey = keys.find(key => !organizations.find(o => o.key === key));\n          return availableKey || `${key}-${Math.ceil(Math.random() * 1000) + 10}`;\n        },\n        () => key\n      )\n      .then(key => {\n        return { almOrganization: { ...almOrganization, key } };\n      });\n  };\n\n  stopLoading = () => {\n    if (this.mounted) {\n      this.setState({ loading: false });\n    }\n  };\n\n  updateUrlQuery = (query: Partial<Query> = {}) => {\n    this.props.router.push({\n      pathname: this.props.location.pathname,\n      query: serializeQuery({ ...parseQuery(this.props.location.query), ...query }),\n      state: this.props.location.state\n    });\n  };\n\n  updateUrlState = (state: Partial<LocationState> = {}) => {\n    this.props.router.replace({\n      pathname: this.props.location.pathname,\n      query: this.props.location.query,\n      state: { ...(this.props.location.state || {}), ...state }\n    });\n  };\n\n  renderContent = (almInstallId?: string, importPersonalOrg?: T.Organization) => {\n    const { currentUser, location } = this.props;\n    const { state } = this;\n    const { organization, step, subscriptionPlans } = state;\n    const { tab = 'auto' } = (location.state || {}) as LocationState;\n\n    const commonProps = {\n      handleOrgDetailsFinish: this.handleOrgDetailsFinish,\n      handleOrgDetailsStepOpen: this.handleOrgDetailsStepOpen,\n      onDone: this.handlePlanDone,\n      organization,\n      step,\n      subscriptionPlans\n    };\n\n    if (!this.hasAutoImport(state)) {\n      return (\n        <ManualOrganizationCreate\n          {...commonProps}\n          createOrganization={this.props.createOrganization}\n          onUpgradeFail={this.deleteOrganization}\n          organization={this.state.organization}\n          step={this.state.step}\n        />\n      );\n    }\n\n    const { almApplication, almOrganization, boundOrganization } = state;\n\n    if (importPersonalOrg && almOrganization && almApplication) {\n      return (\n        <AutoPersonalOrganizationBind\n          {...commonProps}\n          almApplication={almApplication}\n          almInstallId={almInstallId}\n          almOrganization={almOrganization}\n          handleCancelImport={this.handleCancelImport}\n          importPersonalOrg={importPersonalOrg}\n          subscriptionPlans={subscriptionPlans}\n          updateOrganization={this.props.updateOrganization}\n        />\n      );\n    }\n\n    return (\n      <>\n        <Tabs<TabKeys>\n          onChange={this.onTabChange}\n          selected={tab || 'auto'}\n          tabs={[\n            {\n              key: 'auto',\n              node: translateWithParameters(\n                'onboarding.import_organization.import_from_x',\n                translate(sanitizeAlmId(almApplication.key))\n              )\n            },\n            {\n              key: 'manual',\n              node: translate('onboarding.create_organization.create_manually')\n            }\n          ]}\n        />\n\n        <ManualOrganizationCreate\n          {...commonProps}\n          className={classNames({ hidden: tab !== 'manual' && this.hasAutoImport(state) })}\n          createOrganization={this.props.createOrganization}\n          onUpgradeFail={this.deleteOrganization}\n        />\n\n        {almInstallId && almOrganization && !boundOrganization ? (\n          <AutoOrganizationCreate\n            {...commonProps}\n            almApplication={almApplication}\n            almInstallId={almInstallId}\n            almOrganization={almOrganization}\n            className={classNames({ hidden: tab !== 'auto' })}\n            createOrganization={this.props.createOrganization}\n            handleCancelImport={this.handleCancelImport}\n            onOrgCreated={this.handleOrgCreated}\n            onUpgradeFail={this.deleteOrganization}\n            unboundOrganizations={this.props.userOrganizations.filter(\n              ({ actions = {}, alm, key }) =>\n                !alm && key !== currentUser.personalOrganization && actions.admin\n            )}\n          />\n        ) : (\n          <RemoteOrganizationChoose\n            almApplication={almApplication}\n            almInstallId={almInstallId}\n            almOrganization={almOrganization}\n            almUnboundApplications={state.almUnboundApplications}\n            boundOrganization={boundOrganization}\n            className={classNames({ hidden: tab !== 'auto' })}\n          />\n        )}\n      </>\n    );\n  };\n\n  render() {\n    const { currentUser, location } = this.props;\n    const query = parseQuery(location.query);\n\n    if (this.state.almOrgLoading) {\n      return <AlmApplicationInstalling almKey={query.almKey} />;\n    }\n\n    const { almOrganization, bindingExistingOrg, subscriptionPlans } = this.state;\n    const importPersonalOrg = isPersonal(almOrganization)\n      ? this.props.userOrganizations.find(o => o.key === currentUser.personalOrganization)\n      : undefined;\n    const header = this.getHeader(bindingExistingOrg, !!importPersonalOrg);\n\n    const startedPrice = subscriptionPlans && subscriptionPlans[0] && subscriptionPlans[0].price;\n\n    return (\n      <>\n        <Helmet title={header} titleTemplate=\"%s\" />\n        <div className=\"page page-limited huge-spacer-top huge-spacer-bottom\">\n          <A11ySkipTarget anchor=\"create_org_main\" />\n\n          <header className=\"page-header huge-spacer-bottom\">\n            <h1 className=\"page-title huge big-spacer-bottom\">\n              <strong>{header}</strong>\n            </h1>\n            {!importPersonalOrg && startedPrice !== undefined && (\n              <p className=\"page-description\">\n                {translate('onboarding.create_organization.page.description')}\n              </p>\n            )}\n          </header>\n          {this.state.loading ? (\n            <DeferredSpinner />\n          ) : (\n            this.renderContent(query.almInstallId, importPersonalOrg)\n          )}\n        </div>\n      </>\n    );\n  }\n}\n\nconst mapDispatchToProps = {\n  createOrganization: createOrganization as any,\n  deleteOrganization: deleteOrganization as any,\n  updateOrganization: updateOrganization as any,\n  skipOnboarding: skipOnboarding as any\n};\n\nexport default whenLoggedIn(\n  withUserOrganizations(\n    withRouter(\n      connect(\n        null,\n        mapDispatchToProps\n      )(CreateOrganization)\n    )\n  )\n);\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { Dispatch } from 'redux';\nimport { bindAlmOrganization } from '../../../api/alm-integration';\nimport * as api from '../../../api/organizations';\nimport * as actions from '../../../store/organizations';\nimport { isGithub } from '../../../helpers/almIntegrations';\n\nexport function createOrganization({\n  alm,\n  ...organization\n}: T.Organization & { installationId?: string }) {\n  return (dispatch: Dispatch) => {\n    return api\n      .createOrganization({ ...organization, name: organization.name || organization.key })\n      .then((newOrganization: T.Organization) => {\n        dispatch(actions.createOrganization({ ...newOrganization, alm }));\n        if (alm && alm.membersSync && isGithub(alm.key)) {\n          api.syncMembers(newOrganization.key);\n        }\n        return newOrganization.key;\n      });\n  };\n}\n\nexport function updateOrganization(organization: T.Organization & { installationId?: string }) {\n  return (dispatch: Dispatch) => {\n    const { key, installationId, ...changes } = organization;\n    const promises = [api.updateOrganization(key, changes)];\n    if (installationId) {\n      promises.push(bindAlmOrganization({ organization: key, installationId }));\n    }\n    return Promise.all(promises).then(() => {\n      dispatch(actions.updateOrganization(key, changes));\n      return organization.key;\n    });\n  };\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport getStore from './getStore';\nimport * as globalMessages from '../../store/globalMessages';\n\nexport default function addGlobalSuccessMessage(message: string): void {\n  const store = getStore();\n  store.dispatch(globalMessages.addGlobalSuccessMessage(message));\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport * as classNames from 'classnames';\nimport Tooltip from './Tooltip';\n\ninterface Option {\n  disabled?: boolean;\n  label: string;\n  tooltip?: string;\n  value: string;\n}\n\ninterface Props {\n  className?: string;\n  name: string;\n  onCheck: (value: string) => void;\n  options: Option[];\n  value?: string;\n}\n\nexport default class RadioToggle extends React.PureComponent<Props> {\n  static defaultProps = {\n    disabled: false,\n    value: null\n  };\n\n  handleChange = (e: React.SyntheticEvent<HTMLInputElement>) => {\n    const newValue = e.currentTarget.value;\n    this.props.onCheck(newValue);\n  };\n\n  renderOption = (option: Option) => {\n    const checked = option.value === this.props.value;\n    const htmlId = this.props.name + '__' + option.value;\n    return (\n      <li key={option.value}>\n        <input\n          checked={checked}\n          disabled={option.disabled}\n          id={htmlId}\n          name={this.props.name}\n          onChange={this.handleChange}\n          type=\"radio\"\n          value={option.value}\n        />\n        <Tooltip overlay={option.tooltip || undefined}>\n          <label htmlFor={htmlId}>{option.label}</label>\n        </Tooltip>\n      </li>\n    );\n  };\n\n  render() {\n    return (\n      <ul className={classNames('radio-toggle', this.props.className)}>\n        {this.props.options.map(this.renderOption)}\n      </ul>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\n/* eslint-disable jsx-a11y/no-static-element-interactions, jsx-a11y/no-noninteractive-tabindex */\nimport * as React from 'react';\nimport * as classNames from 'classnames';\n\ninterface Props {\n  finished?: boolean;\n  onOpen: VoidFunction;\n  open: boolean;\n  renderForm: () => React.ReactNode;\n  renderResult: () => React.ReactNode;\n  stepNumber: number;\n  stepTitle: React.ReactNode;\n}\n\nexport default function Step(props: Props) {\n  const className = classNames('boxed-group', 'onboarding-step', {\n    'is-open': props.open,\n    'is-finished': props.finished\n  });\n\n  const clickable = !props.open && props.finished;\n\n  const handleClick = (event: React.MouseEvent<HTMLDivElement>) => {\n    event.preventDefault();\n    props.onOpen();\n  };\n\n  return (\n    <div\n      className={className}\n      onClick={clickable ? handleClick : undefined}\n      role={clickable ? 'button' : undefined}\n      tabIndex={clickable ? 0 : undefined}>\n      <div className=\"onboarding-step-number\">{props.stepNumber}</div>\n      {!props.open && props.renderResult()}\n      <div className=\"boxed-group-header\">\n        <h2>{props.stepTitle}</h2>\n      </div>\n      {!props.open && <div className=\"boxed-group-inner\" />}\n      <div className={classNames({ hidden: !props.open })}>{props.renderForm()}</div>\n    </div>\n  );\n}\n","\nvar content = require(\"!!../../../../../node_modules/css-loader/dist/cjs.js??ref--6-1!../../../../../node_modules/postcss-loader/src/index.js??postcss!./styles.css\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../../../node_modules/css-loader/dist/cjs.js??ref--6-1!../../../../../node_modules/postcss-loader/src/index.js??postcss!./styles.css\", function() {\n\t\tvar newContent = require(\"!!../../../../../node_modules/css-loader/dist/cjs.js??ref--6-1!../../../../../node_modules/postcss-loader/src/index.js??postcss!./styles.css\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","exports = module.exports = require(\"../../../../../node_modules/css-loader/dist/runtime/api.js\")(false);\n// Module\nexports.push([module.id, \".onboarding-step{position:relative;padding-left:34px}.onboarding-step:not(.is-open):not(.is-finished){opacity:.4}.onboarding-step .boxed-group-actions{height:24px;line-height:24px}.onboarding-step hr{margin-left:-54px}.onboarding-step-number{position:absolute;top:15px;left:15px;width:24px;height:24px;line-height:24px;border-radius:24px;background-color:#b9b9b9;color:#fff;font-size:14px;text-align:center}.onboarding-step.is-open .onboarding-step-number{background-color:#236a97}.onboarding-step.is-finished{cursor:pointer;outline:none}\", \"\"]);\n\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { Dispatch } from 'redux';\nimport * as api from '../../api/organizations';\nimport * as actions from '../../store/organizations';\nimport { addGlobalSuccessMessage } from '../../store/globalMessages';\nimport { translate } from '../../helpers/l10n';\n\nexport function updateOrganization(key: string, changes: T.OrganizationBase) {\n  return (dispatch: Dispatch<any>) => {\n    return api.updateOrganization(key, changes).then(() => {\n      dispatch(actions.updateOrganization(key, changes));\n      dispatch(addGlobalSuccessMessage(translate('organization.updated')));\n    });\n  };\n}\n\nexport function deleteOrganization(key: string) {\n  return (dispatch: Dispatch<any>) => {\n    return api.deleteOrganization(key).then(() => {\n      dispatch(actions.deleteOrganization(key));\n    });\n  };\n}\n"],"sourceRoot":""}