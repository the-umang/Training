{"version":3,"sources":["webpack:///./src/main/js/api/plugins.ts","webpack:///./node_modules/lodash/findLastIndex.js","webpack:///./src/main/js/components/common/RestartButton.tsx","webpack:///./src/main/js/app/components/nav/settings/PendingPluginsActionNotif.tsx","webpack:///./src/main/js/app/components/nav/settings/SystemRestartNotif.tsx","webpack:///./src/main/js/app/components/nav/settings/SettingsNav.tsx","webpack:///./src/main/js/app/components/AdminContainer.tsx","webpack:///./src/main/js/components/controls/Modal.tsx","webpack:///./src/main/js/components/controls/SimpleModal.tsx","webpack:///./src/main/js/components/controls/ConfirmModal.tsx","webpack:///./src/main/js/components/controls/ConfirmButton.tsx","webpack:///./src/main/js/components/controls/ModalButton.tsx","webpack:///./node_modules/lodash/toFinite.js","webpack:///./node_modules/lodash/toInteger.js","webpack:///./node_modules/lodash/_baseFindIndex.js","webpack:///./src/main/js/api/system.ts","webpack:///./src/main/js/api/nav.ts","webpack:///./src/main/js/app/utils/handleRequiredAuthorization.ts","webpack:///./src/main/js/app/components/AdminContext.tsx"],"names":["getAvailablePlugins","Object","_helpers_request__WEBPACK_IMPORTED_MODULE_1__","catch","_app_utils_throwGlobalError__WEBPACK_IMPORTED_MODULE_2__","getPendingPlugins","getLastUpdates","updates","map","status","index","lodash_findLastIndex__WEBPACK_IMPORTED_MODULE_0___default","update","undefined","filter","_helpers_types__WEBPACK_IMPORTED_MODULE_3__","addChangelog","indexOf","previousUpdates","slice","__assign","getInstalledPlugins","f","then","_a","plugins","getInstalledPluginsWithUpdates","Promise","all","installed","plugin","updatePlugin","find","p","key","getPluginUpdates","installPlugin","data","uninstallPlugin","cancelPendingPlugins","baseFindIndex","__webpack_require__","baseIteratee","toInteger","nativeMax","Math","max","nativeMin","min","module","exports","array","predicate","fromIndex","length","RestartButton","_super","_this","apply","this","arguments","handleConfirm","_api_system__WEBPACK_IMPORTED_MODULE_4__","props","fetchSystemStatus","__extends","prototype","render","className","systemStatus","react__WEBPACK_IMPORTED_MODULE_0__","_controls_ConfirmButton__WEBPACK_IMPORTED_MODULE_2__","confirmButtonText","_helpers_l10n__WEBPACK_IMPORTED_MODULE_3__","modalBody","modalHeader","onConfirm","onClick","_ui_buttons__WEBPACK_IMPORTED_MODULE_5__","classnames__WEBPACK_IMPORTED_MODULE_1__","disabled","PendingPluginsActionNotif","handleRevert","refreshPending","pending","installing","updating","removing","index_js_exposed","Alert","display","variant","InstanceMessage","message","l10n","msg","idx","index_es","defaultMessage","id","values","nb","buttons","SystemRestartNotif","instance","system","link","react_router_es","to","pathname","settings_SettingsNav","SettingsNav","renderExtension","name","activeClassName","SettingsNav_extends","isSomethingActive","urls","path","window","location","some","url","baseUrl","isSecurityActive","isProjectsActive","isSystemActive","isMarketplace","renderConfigurationTab","organizationsEnabled","extensionsWithoutSupport","extensions","extension","Dropdown","overlay","tagName","onToggleClick","open","aria-expanded","aria-haspopup","classnames","active","href","DropdownIcon","renderProjectsTab","renderSecurityTab","notifComponent","pendingPlugins","hasSupportExtension","totalPendingPlugins","settings_PendingPluginsActionNotif","fetchPendingPlugins","ContextNavBar","height","theme","notif","NavBarTabs","defaultProps","AdminContainer_AdminContainer","AdminContainer","mounted","state","AdminContext","fetchNavigationSettings","nav","r","setAdminPages","setState","api_system","waitRestartingDone","document","reload","AdminContainer_extends","componentDidMount","appState","canAdmin","handleRequiredAuthorization","componentWillUnmount","adminPages","_b","defaultTitle","Helmet_default","a","titleTemplate","Provider","value","children","mapDispatchToProps","__webpack_exports__","es","rootReducer","Modal","react_modal__WEBPACK_IMPORTED_MODULE_1__","classnames__WEBPACK_IMPORTED_MODULE_2__","modal-small","size","modal-medium","modal-large","isOpen","overlayClassName","modal-no-backdrop","noBackdrop","SimpleModal","submitting","stopSubmitting","handleCloseClick","event","preventDefault","currentTarget","blur","onClose","handleFormSubmit","submit","handleSubmitClick","result","onSubmit","header","modalProps","__rest","_Modal__WEBPACK_IMPORTED_MODULE_1__","contentLabel","onRequestClose","onCloseClick","onFormSubmit","onSubmitClick","ConfirmModal","handleSubmit","confirmData","renderModalContent","confirmDisable","headerDescription","isDestructive","_c","cancelButtonText","_helpers_l10n__WEBPACK_IMPORTED_MODULE_4__","_common_DeferredSpinner__WEBPACK_IMPORTED_MODULE_2__","loading","_ui_buttons__WEBPACK_IMPORTED_MODULE_3__","autoFocus","_SimpleModal__WEBPACK_IMPORTED_MODULE_1__","ConfirmButton","renderConfirmModal","modalHeaderDescription","confirmModalProps","_ConfirmModal__WEBPACK_IMPORTED_MODULE_1__","_ModalButton__WEBPACK_IMPORTED_MODULE_2__","modal","ModalButton","handleButtonClick","handleCloseModal","toNumber","INFINITY","MAX_INTEGER","toFinite","remainder","fromRight","d","setLogLevel","getSystemInfo","getSystemStatus","getSystemUpgrades","getMigrationStatus","migrateDatabase","restart","waitSystemUPStatus","_helpers_request__WEBPACK_IMPORTED_MODULE_0__","_app_utils_throwGlobalError__WEBPACK_IMPORTED_MODULE_1__","level","slowThreshold","getComponentNavigation","getMarketplaceNavigation","getSettingsNavigation","_getStore__WEBPACK_IMPORTED_MODULE_0__","_getHistory__WEBPACK_IMPORTED_MODULE_1__","_store_appState__WEBPACK_IMPORTED_MODULE_2__","store","history","returnTo","search","hash","dispatch","replace","query","return_to","defaultPendingPlugins","defaultSystemStatus"],"mappings":"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","file":"js/300.1562761687107.chunk.js","sourcesContent":["/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { findLastIndex } from 'lodash';\nimport { getJSON, post } from '../helpers/request';\nimport throwGlobalError from '../app/utils/throwGlobalError';\nimport { isDefined } from '../helpers/types';\n\nexport interface Plugin {\n  key: string;\n  name: string;\n  category?: string;\n  description?: string;\n  editionBundled?: boolean;\n  license?: string;\n  organizationName?: string;\n  homepageUrl?: string;\n  organizationUrl?: string;\n  issueTrackerUrl?: string;\n  termsAndConditionsUrl?: string;\n}\n\nexport interface Release {\n  version: string;\n  date: string;\n  description?: string;\n  changeLogUrl?: string;\n}\n\nexport interface Update {\n  status: string;\n  release?: Release;\n  requires: Plugin[];\n  previousUpdates?: Update[];\n}\n\nexport interface PluginPendingResult {\n  installing: PluginPending[];\n  updating: PluginPending[];\n  removing: PluginPending[];\n}\n\nexport interface PluginAvailable extends Plugin {\n  release: Release;\n  update: Update;\n}\n\nexport interface PluginPending extends Plugin {\n  version: string;\n  implementationBuild: string;\n}\n\nexport interface PluginInstalled extends PluginPending {\n  filename: string;\n  hash: string;\n  sonarLintSupported: boolean;\n  updatedAt: number;\n  updates?: Update[];\n}\n\nexport function getAvailablePlugins(): Promise<{\n  plugins: PluginAvailable[];\n  updateCenterRefresh: string;\n}> {\n  return getJSON('/api/plugins/available').catch(throwGlobalError);\n}\n\nexport function getPendingPlugins(): Promise<PluginPendingResult> {\n  return getJSON('/api/plugins/pending').catch(throwGlobalError);\n}\n\nfunction getLastUpdates(updates: undefined | Update[]): Update[] {\n  if (!updates) {\n    return [];\n  }\n  const lastUpdate = ['COMPATIBLE', 'REQUIRES_SYSTEM_UPGRADE', 'DEPS_REQUIRE_SYSTEM_UPGRADE'].map(\n    status => {\n      const index = findLastIndex(updates, update => update.status === status);\n      return index > -1 ? updates[index] : undefined;\n    }\n  );\n  return lastUpdate.filter(isDefined);\n}\n\nfunction addChangelog(update: Update, updates?: Update[]) {\n  if (!updates) {\n    return update;\n  }\n  const index = updates.indexOf(update);\n  const previousUpdates = index > 0 ? updates.slice(0, index) : [];\n  return { ...update, previousUpdates };\n}\n\nexport function getInstalledPlugins(): Promise<PluginInstalled[]> {\n  return getJSON('/api/plugins/installed', { f: 'category' }).then(\n    ({ plugins }) => plugins,\n    throwGlobalError\n  );\n}\n\nexport function getInstalledPluginsWithUpdates(): Promise<PluginInstalled[]> {\n  return Promise.all([\n    getJSON('/api/plugins/installed', { f: 'category' }),\n    getJSON('/api/plugins/updates')\n  ])\n    .then(([installed, updates]) =>\n      installed.plugins.map((plugin: PluginInstalled) => {\n        const updatePlugin: PluginInstalled = updates.plugins.find(\n          (p: PluginInstalled) => p.key === plugin.key\n        );\n        if (updatePlugin) {\n          return {\n            ...updatePlugin,\n            ...plugin,\n            updates: getLastUpdates(updatePlugin.updates).map(update =>\n              addChangelog(update, updatePlugin.updates)\n            )\n          };\n        }\n        return plugin;\n      })\n    )\n    .catch(throwGlobalError);\n}\n\nexport function getPluginUpdates(): Promise<PluginInstalled[]> {\n  return Promise.all([getJSON('/api/plugins/updates'), getJSON('/api/plugins/installed')])\n    .then(([updates, installed]) =>\n      updates.plugins.map((updatePlugin: PluginInstalled) => {\n        const updates = getLastUpdates(updatePlugin.updates).map(update =>\n          addChangelog(update, updatePlugin.updates)\n        );\n        const plugin = installed.plugins.find((p: PluginInstalled) => p.key === updatePlugin.key);\n        if (plugin) {\n          return {\n            ...plugin,\n            ...updatePlugin,\n            updates\n          };\n        }\n        return { ...updatePlugin, updates };\n      })\n    )\n    .catch(throwGlobalError);\n}\n\nexport function installPlugin(data: { key: string }): Promise<void | Response> {\n  return post('/api/plugins/install', data).catch(throwGlobalError);\n}\n\nexport function uninstallPlugin(data: { key: string }): Promise<void | Response> {\n  return post('/api/plugins/uninstall', data).catch(throwGlobalError);\n}\n\nexport function updatePlugin(data: { key: string }): Promise<void | Response> {\n  return post('/api/plugins/update', data).catch(throwGlobalError);\n}\n\nexport function cancelPendingPlugins(): Promise<void | Response> {\n  return post('/api/plugins/cancel_all').catch(throwGlobalError);\n}\n","var baseFindIndex = require('./_baseFindIndex'),\n    baseIteratee = require('./_baseIteratee'),\n    toInteger = require('./toInteger');\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max,\n    nativeMin = Math.min;\n\n/**\n * This method is like `_.findIndex` except that it iterates over elements\n * of `collection` from right to left.\n *\n * @static\n * @memberOf _\n * @since 2.0.0\n * @category Array\n * @param {Array} array The array to inspect.\n * @param {Function} [predicate=_.identity] The function invoked per iteration.\n * @param {number} [fromIndex=array.length-1] The index to search from.\n * @returns {number} Returns the index of the found element, else `-1`.\n * @example\n *\n * var users = [\n *   { 'user': 'barney',  'active': true },\n *   { 'user': 'fred',    'active': false },\n *   { 'user': 'pebbles', 'active': false }\n * ];\n *\n * _.findLastIndex(users, function(o) { return o.user == 'pebbles'; });\n * // => 2\n *\n * // The `_.matches` iteratee shorthand.\n * _.findLastIndex(users, { 'user': 'barney', 'active': true });\n * // => 0\n *\n * // The `_.matchesProperty` iteratee shorthand.\n * _.findLastIndex(users, ['active', false]);\n * // => 2\n *\n * // The `_.property` iteratee shorthand.\n * _.findLastIndex(users, 'active');\n * // => 0\n */\nfunction findLastIndex(array, predicate, fromIndex) {\n  var length = array == null ? 0 : array.length;\n  if (!length) {\n    return -1;\n  }\n  var index = length - 1;\n  if (fromIndex !== undefined) {\n    index = toInteger(fromIndex);\n    index = fromIndex < 0\n      ? nativeMax(length + index, 0)\n      : nativeMin(index, length - 1);\n  }\n  return baseFindIndex(array, baseIteratee(predicate, 3), index, true);\n}\n\nmodule.exports = findLastIndex;\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport * as classNames from 'classnames';\nimport ConfirmButton from '../controls/ConfirmButton';\nimport { translate } from '../../helpers/l10n';\nimport { restart } from '../../api/system';\nimport { Button } from '../ui/buttons';\n\ninterface Props {\n  className?: string;\n  fetchSystemStatus: () => void;\n  systemStatus: T.SysStatus;\n}\n\nexport default class RestartButton extends React.PureComponent<Props> {\n  handleConfirm = () => {\n    return restart().then(this.props.fetchSystemStatus);\n  };\n\n  render() {\n    const { className, systemStatus } = this.props;\n    return (\n      <ConfirmButton\n        confirmButtonText={translate('restart')}\n        modalBody={\n          <>\n            <p className=\"spacer-top spacer-bottom\">\n              {translate('system.are_you_sure_to_restart')}\n            </p>\n            <p>{translate('system.forcing_shutdown_not_recommended')}</p>\n          </>\n        }\n        modalHeader={translate('system.restart_server')}\n        onConfirm={this.handleConfirm}>\n        {({ onClick }) => (\n          <Button\n            className={classNames('button-red', className)}\n            disabled={systemStatus !== 'UP'}\n            onClick={onClick}>\n            {systemStatus === 'RESTARTING'\n              ? translate('system.restart_in_progress')\n              : translate('system.restart_server')}\n          </Button>\n        )}\n      </ConfirmButton>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport InstanceMessage from '../../../../components/common/InstanceMessage';\nimport RestartButton from '../../../../components/common/RestartButton';\nimport { Alert } from '../../../../components/ui/Alert';\nimport { Button } from '../../../../components/ui/buttons';\nimport { cancelPendingPlugins, PluginPendingResult } from '../../../../api/plugins';\nimport { translate } from '../../../../helpers/l10n';\n\ninterface Props {\n  fetchSystemStatus: () => void;\n  pending: PluginPendingResult;\n  refreshPending: () => void;\n  systemStatus: T.SysStatus;\n}\n\nexport default class PendingPluginsActionNotif extends React.PureComponent<Props> {\n  handleRevert = () => {\n    cancelPendingPlugins().then(this.props.refreshPending, () => {});\n  };\n\n  render() {\n    const { installing, updating, removing } = this.props.pending;\n    const hasPendingActions = installing.length || updating.length || removing.length;\n    if (!hasPendingActions) {\n      return null;\n    }\n\n    return (\n      <Alert className=\"js-pending\" display=\"banner\" variant=\"info\">\n        <div className=\"display-flex-center\">\n          <span className=\"little-spacer-right\">\n            <InstanceMessage message={translate('marketplace.instance_needs_to_be_restarted_to')} />\n          </span>\n          {[\n            { length: installing.length, msg: 'marketplace.install_x_plugins' },\n            { length: updating.length, msg: 'marketplace.update_x_plugins' },\n            { length: removing.length, msg: 'marketplace.uninstall_x_plugins' }\n          ]\n            .filter(({ length }) => length > 0)\n            .map(({ length, msg }, idx) => (\n              <span key={msg}>\n                {idx > 0 && '; '}\n                <FormattedMessage\n                  defaultMessage={translate(msg)}\n                  id={msg}\n                  values={{ nb: <strong>{length}</strong> }}\n                />\n              </span>\n            ))}\n\n          <RestartButton\n            className=\"spacer-left\"\n            fetchSystemStatus={this.props.fetchSystemStatus}\n            systemStatus={this.props.systemStatus}\n          />\n          <Button className=\"spacer-left js-cancel-all\" onClick={this.handleRevert}>\n            {translate('marketplace.revert')}\n          </Button>\n        </div>\n      </Alert>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport { Link } from 'react-router';\nimport { Alert } from '../../../../components/ui/Alert';\nimport { translate } from '../../../../helpers/l10n';\nimport { getInstance } from '../../../../helpers/system';\n\nexport default function SystemRestartNotif() {\n  return (\n    <Alert display=\"banner\" variant=\"info\">\n      <FormattedMessage\n        defaultMessage={translate('system.instance_restarting')}\n        id=\"system.instance_restarting\"\n        values={{\n          instance: getInstance(),\n          link: (\n            <Link to={{ pathname: '/admin/background_tasks' }}>\n              {translate('background_tasks.page')}\n            </Link>\n          )\n        }}\n      />\n    </Alert>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport * as classNames from 'classnames';\nimport { IndexLink, Link } from 'react-router';\nimport PendingPluginsActionNotif from './PendingPluginsActionNotif';\nimport SystemRestartNotif from './SystemRestartNotif';\nimport ContextNavBar from '../../../../components/nav/ContextNavBar';\nimport Dropdown from '../../../../components/controls/Dropdown';\nimport DropdownIcon from '../../../../components/icons-components/DropdownIcon';\nimport NavBarTabs from '../../../../components/nav/NavBarTabs';\nimport * as theme from '../../../theme';\nimport { PluginPendingResult } from '../../../../api/plugins';\nimport { translate } from '../../../../helpers/l10n';\n\ninterface Props {\n  extensions: T.Extension[];\n  fetchPendingPlugins: () => void;\n  fetchSystemStatus: () => void;\n  location: {};\n  organizationsEnabled?: boolean;\n  pendingPlugins: PluginPendingResult;\n  systemStatus: T.SysStatus;\n}\n\nexport default class SettingsNav extends React.PureComponent<Props> {\n  static defaultProps = {\n    extensions: []\n  };\n\n  isSomethingActive(urls: string[]): boolean {\n    const path = window.location.pathname;\n    return urls.some((url: string) => path.indexOf((window as any).baseUrl + url) === 0);\n  }\n\n  isSecurityActive() {\n    const urls = [\n      '/admin/users',\n      '/admin/groups',\n      '/admin/permissions',\n      '/admin/permission_templates'\n    ];\n    return this.isSomethingActive(urls);\n  }\n\n  isProjectsActive() {\n    const urls = ['/admin/projects_management', '/admin/background_tasks'];\n    return this.isSomethingActive(urls);\n  }\n\n  isSystemActive() {\n    const urls = ['/admin/system'];\n    return this.isSomethingActive(urls);\n  }\n\n  isMarketplace() {\n    const urls = ['/admin/marketplace'];\n    return this.isSomethingActive(urls);\n  }\n\n  renderExtension = ({ key, name }: T.Extension) => {\n    return (\n      <li key={key}>\n        <Link activeClassName=\"active\" to={`/admin/extension/${key}`}>\n          {name}\n        </Link>\n      </li>\n    );\n  };\n\n  renderConfigurationTab() {\n    const { organizationsEnabled } = this.props;\n    const extensionsWithoutSupport = this.props.extensions.filter(\n      extension => extension.key !== 'license/support'\n    );\n    return (\n      <Dropdown\n        overlay={\n          <ul className=\"menu\">\n            <li>\n              <IndexLink activeClassName=\"active\" to=\"/admin/settings\">\n                {translate('settings.page')}\n              </IndexLink>\n            </li>\n            <li>\n              <IndexLink activeClassName=\"active\" to=\"/admin/settings/encryption\">\n                {translate('property.category.security.encryption')}\n              </IndexLink>\n            </li>\n            <li>\n              <IndexLink activeClassName=\"active\" to=\"/admin/custom_metrics\">\n                {translate('custom_metrics.page')}\n              </IndexLink>\n            </li>\n            {!organizationsEnabled && (\n              <li>\n                <IndexLink activeClassName=\"active\" to=\"/admin/webhooks\">\n                  {translate('webhooks.page')}\n                </IndexLink>\n              </li>\n            )}\n            {extensionsWithoutSupport.map(this.renderExtension)}\n          </ul>\n        }\n        tagName=\"li\">\n        {({ onToggleClick, open }) => (\n          <a\n            aria-expanded={open}\n            aria-haspopup=\"true\"\n            className={classNames('dropdown-toggle', {\n              active:\n                open ||\n                (!this.isSecurityActive() &&\n                  !this.isProjectsActive() &&\n                  !this.isSystemActive() &&\n                  !this.isSomethingActive(['/admin/extension/license/support']) &&\n                  !this.isMarketplace())\n            })}\n            href=\"#\"\n            id=\"settings-navigation-configuration\"\n            onClick={onToggleClick}>\n            {translate('sidebar.project_settings')}\n            <DropdownIcon className=\"little-spacer-left\" />\n          </a>\n        )}\n      </Dropdown>\n    );\n  }\n\n  renderProjectsTab() {\n    const { organizationsEnabled } = this.props;\n    return (\n      <Dropdown\n        overlay={\n          <ul className=\"menu\">\n            {!organizationsEnabled && (\n              <li>\n                <IndexLink activeClassName=\"active\" to=\"/admin/projects_management\">\n                  {translate('management')}\n                </IndexLink>\n              </li>\n            )}\n            <li>\n              <IndexLink activeClassName=\"active\" to=\"/admin/background_tasks\">\n                {translate('background_tasks.page')}\n              </IndexLink>\n            </li>\n          </ul>\n        }\n        tagName=\"li\">\n        {({ onToggleClick, open }) => (\n          <a\n            aria-expanded={open}\n            aria-haspopup=\"true\"\n            className={classNames('dropdown-toggle', { active: open || this.isProjectsActive() })}\n            href=\"#\"\n            onClick={onToggleClick}>\n            {translate('sidebar.projects')}\n            <DropdownIcon className=\"little-spacer-left\" />\n          </a>\n        )}\n      </Dropdown>\n    );\n  }\n\n  renderSecurityTab() {\n    const { organizationsEnabled } = this.props;\n    return (\n      <Dropdown\n        overlay={\n          <ul className=\"menu\">\n            <li>\n              <IndexLink activeClassName=\"active\" to=\"/admin/users\">\n                {translate('users.page')}\n              </IndexLink>\n            </li>\n            {!organizationsEnabled && (\n              <li>\n                <IndexLink activeClassName=\"active\" to=\"/admin/groups\">\n                  {translate('user_groups.page')}\n                </IndexLink>\n              </li>\n            )}\n            {!organizationsEnabled && (\n              <li>\n                <IndexLink activeClassName=\"active\" to=\"/admin/permissions\">\n                  {translate('global_permissions.page')}\n                </IndexLink>\n              </li>\n            )}\n            {!organizationsEnabled && (\n              <li>\n                <IndexLink activeClassName=\"active\" to=\"/admin/permission_templates\">\n                  {translate('permission_templates')}\n                </IndexLink>\n              </li>\n            )}\n          </ul>\n        }\n        tagName=\"li\">\n        {({ onToggleClick, open }) => (\n          <a\n            aria-expanded={open}\n            aria-haspopup=\"true\"\n            className={classNames('dropdown-toggle', { active: open || this.isSecurityActive() })}\n            href=\"#\"\n            onClick={onToggleClick}>\n            {translate('sidebar.security')}\n            <DropdownIcon className=\"little-spacer-left\" />\n          </a>\n        )}\n      </Dropdown>\n    );\n  }\n\n  render() {\n    const { extensions, pendingPlugins } = this.props;\n    const hasSupportExtension = extensions.find(extension => extension.key === 'license/support');\n    const totalPendingPlugins =\n      pendingPlugins.installing.length +\n      pendingPlugins.removing.length +\n      pendingPlugins.updating.length;\n\n    let notifComponent;\n    if (this.props.systemStatus === 'RESTARTING') {\n      notifComponent = <SystemRestartNotif />;\n    } else if (totalPendingPlugins > 0) {\n      notifComponent = (\n        <PendingPluginsActionNotif\n          fetchSystemStatus={this.props.fetchSystemStatus}\n          pending={pendingPlugins}\n          refreshPending={this.props.fetchPendingPlugins}\n          systemStatus={this.props.systemStatus}\n        />\n      );\n    }\n\n    return (\n      <ContextNavBar\n        height={notifComponent ? theme.contextNavHeightRaw + 30 : theme.contextNavHeightRaw}\n        id=\"context-navigation\"\n        notif={notifComponent}>\n        <header className=\"navbar-context-header\">\n          <h1>{translate('layout.settings')}</h1>\n        </header>\n\n        <NavBarTabs>\n          {this.renderConfigurationTab()}\n          {this.renderSecurityTab()}\n          {this.renderProjectsTab()}\n\n          <li>\n            <IndexLink activeClassName=\"active\" to=\"/admin/system\">\n              {translate('sidebar.system')}\n            </IndexLink>\n          </li>\n\n          <li>\n            <IndexLink activeClassName=\"active\" to=\"/admin/marketplace\">\n              {translate('marketplace.page')}\n            </IndexLink>\n          </li>\n\n          {hasSupportExtension && (\n            <li>\n              <IndexLink activeClassName=\"active\" to=\"/admin/extension/license/support\">\n                {translate('support')}\n              </IndexLink>\n            </li>\n          )}\n        </NavBarTabs>\n      </ContextNavBar>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport Helmet from 'react-helmet';\nimport { connect } from 'react-redux';\nimport AdminContext, { defaultPendingPlugins, defaultSystemStatus } from './AdminContext';\nimport SettingsNav from './nav/settings/SettingsNav';\nimport { getAppState, Store } from '../../store/rootReducer';\nimport { getSettingsNavigation } from '../../api/nav';\nimport { setAdminPages } from '../../store/appState';\nimport { translate } from '../../helpers/l10n';\nimport { PluginPendingResult, getPendingPlugins } from '../../api/plugins';\nimport handleRequiredAuthorization from '../utils/handleRequiredAuthorization';\nimport { getSystemStatus, waitSystemUPStatus } from '../../api/system';\n\ninterface Props {\n  appState: Pick<T.AppState, 'adminPages' | 'canAdmin' | 'organizationsEnabled'>;\n  location: {};\n  setAdminPages: (adminPages: T.Extension[]) => void;\n}\n\ninterface State {\n  pendingPlugins: PluginPendingResult;\n  systemStatus: T.SysStatus;\n}\n\nexport class AdminContainer extends React.PureComponent<Props, State> {\n  mounted = false;\n  state: State = {\n    pendingPlugins: defaultPendingPlugins,\n    systemStatus: defaultSystemStatus\n  };\n\n  componentDidMount() {\n    this.mounted = true;\n    if (!this.props.appState.canAdmin) {\n      handleRequiredAuthorization();\n    } else {\n      this.fetchNavigationSettings();\n      this.fetchPendingPlugins();\n      this.fetchSystemStatus();\n    }\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  fetchNavigationSettings = () => {\n    getSettingsNavigation().then(r => this.props.setAdminPages(r.extensions), () => {});\n  };\n\n  fetchPendingPlugins = () => {\n    getPendingPlugins().then(\n      pendingPlugins => {\n        if (this.mounted) {\n          this.setState({ pendingPlugins });\n        }\n      },\n      () => {}\n    );\n  };\n\n  fetchSystemStatus = () => {\n    getSystemStatus().then(\n      ({ status }) => {\n        if (this.mounted) {\n          this.setState({ systemStatus: status });\n          if (status === 'RESTARTING') {\n            this.waitRestartingDone();\n          }\n        }\n      },\n      () => {}\n    );\n  };\n\n  waitRestartingDone = () => {\n    waitSystemUPStatus().then(\n      ({ status }) => {\n        if (this.mounted) {\n          this.setState({ systemStatus: status });\n          document.location.reload();\n        }\n      },\n      () => {}\n    );\n  };\n\n  render() {\n    const { adminPages, organizationsEnabled } = this.props.appState;\n\n    // Check that the adminPages are loaded\n    if (!adminPages) {\n      return null;\n    }\n\n    const { pendingPlugins, systemStatus } = this.state;\n    const defaultTitle = translate('layout.settings');\n\n    return (\n      <div>\n        <Helmet defaultTitle={defaultTitle} titleTemplate={'%s - ' + defaultTitle} />\n        <SettingsNav\n          extensions={adminPages}\n          fetchPendingPlugins={this.fetchPendingPlugins}\n          fetchSystemStatus={this.fetchSystemStatus}\n          location={this.props.location}\n          organizationsEnabled={organizationsEnabled}\n          pendingPlugins={pendingPlugins}\n          systemStatus={systemStatus}\n        />\n        <AdminContext.Provider\n          value={{\n            fetchSystemStatus: this.fetchSystemStatus,\n            fetchPendingPlugins: this.fetchPendingPlugins,\n            pendingPlugins,\n            systemStatus\n          }}>\n          {this.props.children}\n        </AdminContext.Provider>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state: Store) => ({ appState: getAppState(state) });\n\nconst mapDispatchToProps = { setAdminPages };\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(AdminContainer);\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport * as ReactModal from 'react-modal';\nimport * as classNames from 'classnames';\n\nReactModal.setAppElement('#content');\n\nexport interface ModalProps {\n  children: React.ReactNode;\n  size?: 'small' | 'medium' | 'large';\n  noBackdrop?: boolean;\n}\n\ntype MandatoryProps = Pick<ReactModal.Props, 'contentLabel'>;\n\ntype Props = Partial<ReactModal.Props> & MandatoryProps & ModalProps;\n\nexport default function Modal(props: Props) {\n  return (\n    <ReactModal\n      className={classNames('modal', {\n        'modal-small': props.size === 'small',\n        'modal-medium': props.size === 'medium',\n        'modal-large': props.size === 'large'\n      })}\n      isOpen={true}\n      overlayClassName={classNames('modal-overlay', { 'modal-no-backdrop': props.noBackdrop })}\n      {...props}\n    />\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport Modal, { ModalProps } from './Modal';\n\nexport interface ChildrenProps {\n  onCloseClick: (event?: React.SyntheticEvent<HTMLElement>) => void;\n  onFormSubmit: (event: React.SyntheticEvent<HTMLFormElement>) => void;\n  onSubmitClick: (event?: React.SyntheticEvent<HTMLElement>) => void;\n  submitting: boolean;\n}\n\ninterface Props extends ModalProps {\n  children: (props: ChildrenProps) => React.ReactNode;\n  header: string;\n  onClose: () => void;\n  onSubmit: () => void | Promise<void>;\n}\n\ninterface State {\n  submitting: boolean;\n}\n\nexport default class SimpleModal extends React.Component<Props, State> {\n  mounted = false;\n  state: State = { submitting: false };\n\n  componentDidMount() {\n    this.mounted = true;\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  stopSubmitting = () => {\n    if (this.mounted) {\n      this.setState({ submitting: false });\n    }\n  };\n\n  handleCloseClick = (event?: React.SyntheticEvent<HTMLElement>) => {\n    if (event) {\n      event.preventDefault();\n      event.currentTarget.blur();\n    }\n    this.props.onClose();\n  };\n\n  handleFormSubmit = (event: React.SyntheticEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    this.submit();\n  };\n\n  handleSubmitClick = (event?: React.SyntheticEvent<HTMLElement>) => {\n    if (event) {\n      event.preventDefault();\n      event.currentTarget.blur();\n    }\n    this.submit();\n  };\n\n  submit = () => {\n    const result = this.props.onSubmit();\n    if (result) {\n      this.setState({ submitting: true });\n      result.then(this.stopSubmitting, this.stopSubmitting);\n    }\n  };\n\n  render() {\n    const { children, header, onClose, onSubmit, ...modalProps } = this.props;\n    return (\n      <Modal contentLabel={header} onRequestClose={onClose} {...modalProps}>\n        {children({\n          onCloseClick: this.handleCloseClick,\n          onFormSubmit: this.handleFormSubmit,\n          onSubmitClick: this.handleSubmitClick,\n          submitting: this.state.submitting\n        })}\n      </Modal>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { ModalProps } from './Modal';\nimport SimpleModal, { ChildrenProps } from './SimpleModal';\nimport DeferredSpinner from '../common/DeferredSpinner';\nimport { SubmitButton, ResetButtonLink } from '../ui/buttons';\nimport { translate } from '../../helpers/l10n';\n\nexport interface ConfirmModalProps<T> extends ModalProps {\n  cancelButtonText?: string;\n  confirmButtonText: string;\n  confirmData?: T;\n  confirmDisable?: boolean;\n  isDestructive?: boolean;\n  onConfirm: (data?: T) => void | Promise<void | Response>;\n}\n\ninterface Props<T> extends ConfirmModalProps<T> {\n  header: string;\n  headerDescription?: React.ReactNode;\n  onClose: () => void;\n}\n\nexport default class ConfirmModal<T = string> extends React.PureComponent<Props<T>> {\n  mounted = false;\n\n  componentDidMount() {\n    this.mounted = true;\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  handleSubmit = () => {\n    const result = this.props.onConfirm(this.props.confirmData);\n    if (result) {\n      return result.then(this.props.onClose, () => {});\n    } else {\n      this.props.onClose();\n      return undefined;\n    }\n  };\n\n  renderModalContent = ({ onCloseClick, onFormSubmit, submitting }: ChildrenProps) => {\n    const {\n      children,\n      confirmButtonText,\n      confirmDisable,\n      header,\n      headerDescription,\n      isDestructive,\n      cancelButtonText = translate('cancel')\n    } = this.props;\n    return (\n      <form onSubmit={onFormSubmit}>\n        <header className=\"modal-head\">\n          <h2>{header}</h2>\n          {headerDescription}\n        </header>\n        <div className=\"modal-body\">{children}</div>\n        <footer className=\"modal-foot\">\n          <DeferredSpinner className=\"spacer-right\" loading={submitting} />\n          <SubmitButton\n            autoFocus={true}\n            className={isDestructive ? 'button-red' : undefined}\n            disabled={submitting || confirmDisable}>\n            {confirmButtonText}\n          </SubmitButton>\n          <ResetButtonLink disabled={submitting} onClick={onCloseClick}>\n            {cancelButtonText}\n          </ResetButtonLink>\n        </footer>\n      </form>\n    );\n  };\n\n  render() {\n    const { header, onClose, noBackdrop, size } = this.props;\n    const modalProps = { header, onClose, noBackdrop, size };\n    return (\n      <SimpleModal onSubmit={this.handleSubmit} {...modalProps}>\n        {this.renderModalContent}\n      </SimpleModal>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport ConfirmModal, { ConfirmModalProps } from './ConfirmModal';\nimport ModalButton, { ChildrenProps, ModalProps } from './ModalButton';\n\ninterface Props<T> extends ConfirmModalProps<T> {\n  children: (props: ChildrenProps) => React.ReactNode;\n  modalBody: React.ReactNode;\n  modalHeader: string;\n  modalHeaderDescription?: React.ReactNode;\n}\n\ninterface State {\n  modal: boolean;\n}\n\nexport default class ConfirmButton<T> extends React.PureComponent<Props<T>, State> {\n  renderConfirmModal = ({ onClose }: ModalProps) => {\n    const {\n      children,\n      modalBody,\n      modalHeader,\n      modalHeaderDescription,\n      ...confirmModalProps\n    } = this.props;\n    return (\n      <ConfirmModal\n        header={modalHeader}\n        headerDescription={modalHeaderDescription}\n        onClose={onClose}\n        {...confirmModalProps}>\n        {modalBody}\n      </ConfirmModal>\n    );\n  };\n\n  render() {\n    return <ModalButton modal={this.renderConfirmModal}>{this.props.children}</ModalButton>;\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\n\nexport interface ChildrenProps {\n  onClick: () => void;\n  onFormSubmit: (event: React.FormEvent<HTMLFormElement>) => void;\n}\n\nexport interface ModalProps {\n  onClose: () => void;\n}\n\nexport interface Props {\n  children: (props: ChildrenProps) => React.ReactNode;\n  modal: (props: ModalProps) => React.ReactNode;\n}\n\ninterface State {\n  modal: boolean;\n}\n\nexport default class ModalButton extends React.PureComponent<Props, State> {\n  mounted = false;\n  state: State = { modal: false };\n\n  componentDidMount() {\n    this.mounted = true;\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  handleButtonClick = () => {\n    this.setState({ modal: true });\n  };\n\n  handleFormSubmit = (event?: React.FormEvent<HTMLFormElement>) => {\n    if (event) {\n      event.preventDefault();\n    }\n    this.setState({ modal: true });\n  };\n\n  handleCloseModal = () => {\n    if (this.mounted) {\n      this.setState({ modal: false });\n    }\n  };\n\n  render() {\n    return (\n      <>\n        {this.props.children({\n          onClick: this.handleButtonClick,\n          onFormSubmit: this.handleFormSubmit\n        })}\n        {this.state.modal && this.props.modal({ onClose: this.handleCloseModal })}\n      </>\n    );\n  }\n}\n","var toNumber = require('./toNumber');\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0,\n    MAX_INTEGER = 1.7976931348623157e+308;\n\n/**\n * Converts `value` to a finite number.\n *\n * @static\n * @memberOf _\n * @since 4.12.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {number} Returns the converted number.\n * @example\n *\n * _.toFinite(3.2);\n * // => 3.2\n *\n * _.toFinite(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toFinite(Infinity);\n * // => 1.7976931348623157e+308\n *\n * _.toFinite('3.2');\n * // => 3.2\n */\nfunction toFinite(value) {\n  if (!value) {\n    return value === 0 ? value : 0;\n  }\n  value = toNumber(value);\n  if (value === INFINITY || value === -INFINITY) {\n    var sign = (value < 0 ? -1 : 1);\n    return sign * MAX_INTEGER;\n  }\n  return value === value ? value : 0;\n}\n\nmodule.exports = toFinite;\n","var toFinite = require('./toFinite');\n\n/**\n * Converts `value` to an integer.\n *\n * **Note:** This method is loosely based on\n * [`ToInteger`](http://www.ecma-international.org/ecma-262/7.0/#sec-tointeger).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {number} Returns the converted integer.\n * @example\n *\n * _.toInteger(3.2);\n * // => 3\n *\n * _.toInteger(Number.MIN_VALUE);\n * // => 0\n *\n * _.toInteger(Infinity);\n * // => 1.7976931348623157e+308\n *\n * _.toInteger('3.2');\n * // => 3\n */\nfunction toInteger(value) {\n  var result = toFinite(value),\n      remainder = result % 1;\n\n  return result === result ? (remainder ? result - remainder : result) : 0;\n}\n\nmodule.exports = toInteger;\n","/**\n * The base implementation of `_.findIndex` and `_.findLastIndex` without\n * support for iteratee shorthands.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {Function} predicate The function invoked per iteration.\n * @param {number} fromIndex The index to search from.\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction baseFindIndex(array, predicate, fromIndex, fromRight) {\n  var length = array.length,\n      index = fromIndex + (fromRight ? 1 : -1);\n\n  while ((fromRight ? index-- : ++index < length)) {\n    if (predicate(array[index], index, array)) {\n      return index;\n    }\n  }\n  return -1;\n}\n\nmodule.exports = baseFindIndex;\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { getJSON, post, postJSON, requestTryAndRepeatUntil } from '../helpers/request';\nimport throwGlobalError from '../app/utils/throwGlobalError';\n\nexport function setLogLevel(level: string): Promise<void | Response> {\n  return post('/api/system/change_log_level', { level }).catch(throwGlobalError);\n}\n\nexport function getSystemInfo(): Promise<T.SysInfoCluster | T.SysInfoStandalone> {\n  return getJSON('/api/system/info').catch(throwGlobalError);\n}\n\nexport function getSystemStatus(): Promise<{ id: string; version: string; status: T.SysStatus }> {\n  return getJSON('/api/system/status');\n}\n\nexport function getSystemUpgrades(): Promise<{\n  upgrades: T.SystemUpgrade[];\n  updateCenterRefresh: string;\n}> {\n  return getJSON('/api/system/upgrades');\n}\n\nexport function getMigrationStatus(): Promise<{\n  message?: string;\n  startedAt?: string;\n  state: string;\n}> {\n  return getJSON('/api/system/db_migration_status');\n}\n\nexport function migrateDatabase(): Promise<{\n  message?: string;\n  startedAt?: string;\n  state: string;\n}> {\n  return postJSON('/api/system/migrate_db');\n}\n\nexport function restart(): Promise<void | Response> {\n  return post('/api/system/restart').catch(throwGlobalError);\n}\n\nexport function waitSystemUPStatus(): Promise<{\n  id: string;\n  version: string;\n  status: T.SysStatus;\n}> {\n  return requestTryAndRepeatUntil(\n    getSystemStatus,\n    { max: -1, slowThreshold: -15 },\n    ({ status }) => status === 'UP'\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { getJSON } from '../helpers/request';\nimport throwGlobalError from '../app/utils/throwGlobalError';\n\nexport function getGlobalNavigation(): Promise<T.AppState> {\n  return getJSON('/api/navigation/global');\n}\n\nexport function getComponentNavigation(\n  data: { component: string } & T.BranchParameters\n): Promise<any> {\n  return getJSON('/api/navigation/component', data).catch(throwGlobalError);\n}\n\nexport function getMarketplaceNavigation(): Promise<{ serverId: string; ncloc: number }> {\n  return getJSON('/api/navigation/marketplace').catch(throwGlobalError);\n}\n\nexport function getSettingsNavigation(): Promise<any> {\n  return getJSON('/api/navigation/settings').catch(throwGlobalError);\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport getStore from './getStore';\nimport getHistory from './getHistory';\nimport { requireAuthorization } from '../../store/appState';\n\nexport default function handleRequiredAuthorization() {\n  const store = getStore();\n  const history = getHistory();\n\n  const returnTo = window.location.pathname + window.location.search + window.location.hash;\n\n  store.dispatch(requireAuthorization());\n  history.replace({ pathname: '/sessions/new', query: { return_to: returnTo } });\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { PluginPendingResult } from '../../api/plugins';\n\nexport interface AdminContextInterface {\n  fetchSystemStatus: () => void;\n  fetchPendingPlugins: () => void;\n  pendingPlugins: PluginPendingResult;\n  systemStatus: T.SysStatus;\n}\n\nexport const defaultPendingPlugins = { installing: [], removing: [], updating: [] };\nexport const defaultSystemStatus = 'UP';\n\nconst AdminContext = React.createContext<AdminContextInterface>({\n  fetchSystemStatus: () => {},\n  fetchPendingPlugins: () => {},\n  pendingPlugins: defaultPendingPlugins,\n  systemStatus: defaultSystemStatus\n});\nexport default AdminContext;\n"],"sourceRoot":""}