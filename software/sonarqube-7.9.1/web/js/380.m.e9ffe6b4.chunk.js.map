{"version":3,"sources":["webpack:///./src/main/js/components/charts/DonutChart.tsx"],"names":["__webpack_require__","r","__webpack_exports__","d","DonutChart","react__WEBPACK_IMPORTED_MODULE_0__","d3_shape__WEBPACK_IMPORTED_MODULE_1__","props","height","_props$padding","padding","width","availableWidth","availableHeight","size","Math","min","radius","floor","sectors","Object","sort","value","pie","data","map","i","Sector","fill","key","thickness","className","transform","concat","outerRadius","innerRadius","arc","style"],"mappings":"4FAAAA,EAAAC,EAAAC,GAAAF,EAAAG,EAAAD,EAAA,4BAAAE,IAAA,IAAAC,EAAAL,EAAA,KAAAM,EAAAN,EAAA,KAmCe,SAASI,EAAWG,GAAY,MACrCC,EAA0CD,EAA1CC,OADqCC,EACKF,EAAlCG,eAD6B,IAAAD,EACnB,CAAC,EAAG,EAAG,EAAG,GADSA,EACLE,EAAUJ,EAAVI,MAElCC,EAAiBD,EAAQD,EAAQ,GAAKA,EAAQ,GAC9CG,EAAkBL,EAASE,EAAQ,GAAKA,EAAQ,GAEhDI,EAAOC,KAAKC,IAAIJ,EAAgBC,GAChCI,EAASF,KAAKG,MAAMJ,EAAO,GAM3BK,EAJMC,OAAAd,EAAA,EAAAc,GACTC,KAAK,MACLC,MAAMnB,GAAKA,EAAEmB,MAEAC,CAAIhB,EAAMiB,MAAMC,IAAI,CAACtB,EAAGuB,IAEpCrB,EAAA,cAACsB,EAAM,CACLH,KAAMrB,EACNyB,KAAMrB,EAAMiB,KAAKE,GAAGE,KACpBC,IAAKH,EACLT,OAAQA,EACRa,UAAWvB,EAAMuB,aAKvB,OACEzB,EAAA,qBAAK0B,UAAU,cAAcvB,OAAQA,EAAQG,MAAOA,GAClDN,EAAA,mBAAG2B,UAAS,aAAAC,OAAevB,EAAQ,GAAvB,MAAAuB,OAA8BvB,EAAQ,GAAtC,MACVL,EAAA,mBAAG2B,UAAS,aAAAC,OAAehB,EAAf,MAAAgB,OAA0BhB,EAA1B,MAAsCE,KAa1D,SAASQ,EAAOpB,GACd,MAGMJ,EAHMiB,OAAAd,EAAA,EAAAc,GACTc,YAAY3B,EAAMU,QAClBkB,YAAY5B,EAAMU,OAASV,EAAMuB,UAC1BM,CAAI7B,EAAMiB,MACpB,OAAOnB,EAAA,sBAAMF,EAAGA,EAAGkC,MAAO,CAAET,KAAMrB,EAAMqB","file":"js/380.m.e9ffe6b4.chunk.js","sourcesContent":["/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { arc as d3Arc, pie as d3Pie, PieArcDatum } from 'd3-shape';\n\ninterface DataPoint {\n  fill: string;\n  value: number;\n}\n\ninterface Props {\n  data: DataPoint[];\n  height: number;\n  thickness: number;\n  padding?: [number, number, number, number];\n  width: number;\n}\n\nexport default function DonutChart(props: Props) {\n  const { height, padding = [0, 0, 0, 0], width } = props;\n\n  const availableWidth = width - padding[1] - padding[3];\n  const availableHeight = height - padding[0] - padding[2];\n\n  const size = Math.min(availableWidth, availableHeight);\n  const radius = Math.floor(size / 2);\n\n  const pie = d3Pie<any, DataPoint>()\n    .sort(null)\n    .value(d => d.value);\n\n  const sectors = pie(props.data).map((d, i) => {\n    return (\n      <Sector\n        data={d}\n        fill={props.data[i].fill}\n        key={i}\n        radius={radius}\n        thickness={props.thickness}\n      />\n    );\n  });\n\n  return (\n    <svg className=\"donut-chart\" height={height} width={width}>\n      <g transform={`translate(${padding[3]}, ${padding[0]})`}>\n        <g transform={`translate(${radius}, ${radius})`}>{sectors}</g>\n      </g>\n    </svg>\n  );\n}\n\ninterface SectorProps {\n  data: PieArcDatum<DataPoint>;\n  fill: string;\n  radius: number;\n  thickness: number;\n}\n\nfunction Sector(props: SectorProps) {\n  const arc = d3Arc<any, PieArcDatum<DataPoint>>()\n    .outerRadius(props.radius)\n    .innerRadius(props.radius - props.thickness);\n  const d = arc(props.data) as string;\n  return <path d={d} style={{ fill: props.fill }} />;\n}\n"],"sourceRoot":""}