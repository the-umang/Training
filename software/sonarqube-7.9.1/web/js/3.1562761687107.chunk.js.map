{"version":3,"sources":["webpack:///./src/main/js/components/SelectList/SelectListListElement.tsx","webpack:///./src/main/js/components/SelectList/SelectListListContainer.tsx","webpack:///./src/main/js/components/SelectList/SelectList.tsx","webpack:///./src/main/js/components/SelectList/styles.css?a4d8","webpack:///./src/main/js/components/SelectList/styles.css","webpack:///./src/main/js/components/controls/Modal.tsx","webpack:///./src/main/js/components/controls/SimpleModal.tsx","webpack:///./src/main/js/components/controls/ListFooter.tsx","webpack:///./src/main/js/components/controls/Checkbox.tsx","webpack:///./src/main/js/components/controls/RadioToggle.tsx"],"names":["_super","SelectListListElement","_this","apply","this","arguments","mounted","state","loading","stopLoading","setState","handleCheck","checked","props","onSelect","onUnselect","element","then","__extends","prototype","componentDidMount","componentWillUnmount","render","index_js_exposed","className","classnames","select-list-list-disabled","disabled","Checkbox","selected","active","onCheck","renderElement","SelectListListContainer","isDisabled","readOnly","disabledElements","includes","isSelected","selectedElements","handleBulkChange","Promise","all","elements","map","catch","SelectListListContainer_extends","renderBulkSelector","_a","length","thirdState","Object","l10n","DeferredSpinner","timeout","allowBulkSelection","filter","Filter","All","SelectList_SelectListListElement","key","SelectList_SelectList","SelectList","Selected","query","changeFilter","onSearch","handleQueryChange","getFilter","SelectList_extends","_b","labelSelected","_c","labelUnselected","_d","labelAll","RadioToggle","name","options","label","value","Unselected","SearchBox","autoFocus","onChange","placeholder","SelectList_SelectListListContainer","elementsTotalCount","onLoadMore","ListFooter","count","loadMore","needReload","reload","onReload","total","content","__webpack_require__","module","i","hmr","transform","insertInto","undefined","locals","exports","push","Modal","react__WEBPACK_IMPORTED_MODULE_0__","react_modal__WEBPACK_IMPORTED_MODULE_1__","__assign","classnames__WEBPACK_IMPORTED_MODULE_2__","modal-small","size","modal-medium","modal-large","isOpen","overlayClassName","modal-no-backdrop","noBackdrop","SimpleModal","submitting","stopSubmitting","handleCloseClick","event","preventDefault","currentTarget","blur","onClose","handleFormSubmit","submit","handleSubmitClick","result","onSubmit","children","header","modalProps","__rest","_Modal__WEBPACK_IMPORTED_MODULE_1__","contentLabel","onRequestClose","onCloseClick","onFormSubmit","onSubmitClick","link","ready","hasMore","loadMoreLink","href","onClick","_helpers_l10n__WEBPACK_IMPORTED_MODULE_3__","reloadLink","classnames__WEBPACK_IMPORTED_MODULE_1__","new-loading","_helpers_measures__WEBPACK_IMPORTED_MODULE_4__","_common_DeferredSpinner__WEBPACK_IMPORTED_MODULE_2__","handleClick","id","right","title","icon-checkbox-checked","icon-checkbox-single","icon-checkbox-disabled","aria-checked","note","role","Boolean","defaultProps","__webpack_exports__","handleChange","e","newValue","renderOption","option","htmlId","type","_Tooltip__WEBPACK_IMPORTED_MODULE_2__","overlay","tooltip","htmlFor"],"mappings":"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","file":"js/3.1562761687107.chunk.js","sourcesContent":["/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport * as classNames from 'classnames';\nimport Checkbox from '../controls/Checkbox';\n\ninterface Props {\n  active?: boolean;\n  disabled?: boolean;\n  element: string;\n  onSelect: (element: string) => Promise<void>;\n  onUnselect: (element: string) => Promise<void>;\n  renderElement: (element: string) => React.ReactNode;\n  selected: boolean;\n}\n\ninterface State {\n  loading: boolean;\n}\n\nexport default class SelectListListElement extends React.PureComponent<Props, State> {\n  mounted = false;\n  state: State = { loading: false };\n\n  componentDidMount() {\n    this.mounted = true;\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  stopLoading = () => {\n    if (this.mounted) {\n      this.setState({ loading: false });\n    }\n  };\n\n  handleCheck = (checked: boolean) => {\n    this.setState({ loading: true });\n    const request = checked ? this.props.onSelect : this.props.onUnselect;\n    request(this.props.element).then(this.stopLoading, this.stopLoading);\n  };\n\n  render() {\n    return (\n      <li className={classNames({ 'select-list-list-disabled': this.props.disabled })}>\n        <Checkbox\n          checked={this.props.selected}\n          className={classNames('select-list-list-checkbox', { active: this.props.active })}\n          disabled={this.props.disabled}\n          loading={this.state.loading}\n          onCheck={this.handleCheck}>\n          <span className=\"little-spacer-left\">{this.props.renderElement(this.props.element)}</span>\n        </Checkbox>\n      </li>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport * as classNames from 'classnames';\nimport { Filter } from './SelectList';\nimport SelectListListElement from './SelectListListElement';\nimport Checkbox from '../controls/Checkbox';\nimport DeferredSpinner from '../common/DeferredSpinner';\nimport { translate } from '../../helpers/l10n';\n\ninterface Props {\n  allowBulkSelection?: boolean;\n  elements: string[];\n  disabledElements: string[];\n  filter: Filter;\n  onSelect: (element: string) => Promise<void>;\n  onUnselect: (element: string) => Promise<void>;\n  readOnly?: boolean;\n  renderElement: (element: string) => React.ReactNode;\n  selectedElements: string[];\n}\n\ninterface State {\n  loading: boolean;\n}\n\nexport default class SelectListListContainer extends React.PureComponent<Props, State> {\n  mounted = false;\n  state: State = { loading: false };\n\n  componentDidMount() {\n    this.mounted = true;\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  stopLoading = () => {\n    if (this.mounted) {\n      this.setState({ loading: false });\n    }\n  };\n\n  isDisabled = (element: string): boolean => {\n    return this.props.readOnly || this.props.disabledElements.includes(element);\n  };\n\n  isSelected = (element: string): boolean => {\n    return this.props.selectedElements.includes(element);\n  };\n\n  handleBulkChange = (checked: boolean) => {\n    this.setState({ loading: true });\n    if (checked) {\n      Promise.all(this.props.elements.map(element => this.props.onSelect(element)))\n        .then(this.stopLoading)\n        .catch(this.stopLoading);\n    } else {\n      Promise.all(this.props.selectedElements.map(element => this.props.onUnselect(element)))\n        .then(this.stopLoading)\n        .catch(this.stopLoading);\n    }\n  };\n\n  renderBulkSelector() {\n    const { elements, readOnly, selectedElements } = this.props;\n    return (\n      <>\n        <li>\n          <Checkbox\n            checked={selectedElements.length > 0}\n            disabled={this.state.loading || readOnly}\n            onCheck={this.handleBulkChange}\n            thirdState={selectedElements.length > 0 && elements.length !== selectedElements.length}>\n            <span className=\"big-spacer-left\">\n              {translate('bulk_change')}\n              <DeferredSpinner className=\"spacer-left\" loading={this.state.loading} timeout={10} />\n            </span>\n          </Checkbox>\n        </li>\n        <li className=\"divider\" />\n      </>\n    );\n  }\n\n  render() {\n    const { allowBulkSelection, elements, filter } = this.props;\n\n    return (\n      <div className={classNames('select-list-list-container spacer-top')}>\n        <ul className=\"menu\">\n          {allowBulkSelection &&\n            elements.length > 0 &&\n            filter === Filter.All &&\n            this.renderBulkSelector()}\n          {elements.map(element => (\n            <SelectListListElement\n              disabled={this.isDisabled(element)}\n              element={element}\n              key={element}\n              onSelect={this.props.onSelect}\n              onUnselect={this.props.onUnselect}\n              renderElement={this.props.renderElement}\n              selected={this.isSelected(element)}\n            />\n          ))}\n        </ul>\n      </div>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport SelectListListContainer from './SelectListListContainer';\nimport { translate } from '../../helpers/l10n';\nimport ListFooter from '../controls/ListFooter';\nimport RadioToggle from '../controls/RadioToggle';\nimport SearchBox from '../controls/SearchBox';\nimport './styles.css';\n\nexport enum Filter {\n  All = 'all',\n  Selected = 'selected',\n  Unselected = 'deselected'\n}\n\ninterface Props {\n  allowBulkSelection?: boolean;\n  elements: string[];\n  elementsTotalCount?: number;\n  disabledElements?: string[];\n  labelSelected?: string;\n  labelUnselected?: string;\n  labelAll?: string;\n  needReload?: boolean;\n  onLoadMore?: () => Promise<void>;\n  onReload?: () => Promise<void>;\n  onSearch: (query: string, tab: Filter) => Promise<void>;\n  onSelect: (element: string) => Promise<void>;\n  onUnselect: (element: string) => Promise<void>;\n  readOnly?: boolean;\n  renderElement: (element: string) => React.ReactNode;\n  selectedElements: string[];\n}\n\ninterface State {\n  filter: Filter;\n  loading: boolean;\n  query: string;\n}\n\nexport default class SelectList extends React.PureComponent<Props, State> {\n  mounted = false;\n  state: State = { filter: Filter.Selected, loading: false, query: '' };\n\n  componentDidMount() {\n    this.mounted = true;\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  stopLoading = () => {\n    if (this.mounted) {\n      this.setState({ loading: false });\n    }\n  };\n\n  changeFilter = (filter: Filter) => {\n    this.setState({ filter, loading: true });\n    this.props.onSearch(this.state.query, filter).then(this.stopLoading, this.stopLoading);\n  };\n\n  handleQueryChange = (query: string) => {\n    this.setState({ loading: true, query }, () => {\n      this.props.onSearch(query, this.getFilter()).then(this.stopLoading, this.stopLoading);\n    });\n  };\n\n  getFilter = () => {\n    return this.state.query === '' ? this.state.filter : Filter.All;\n  };\n\n  render() {\n    const {\n      labelSelected = translate('selected'),\n      labelUnselected = translate('unselected'),\n      labelAll = translate('all')\n    } = this.props;\n    const { filter } = this.state;\n\n    const disabled = this.state.query !== '';\n\n    return (\n      <div className=\"select-list\">\n        <div className=\"display-flex-center\">\n          <RadioToggle\n            className=\"spacer-right\"\n            name=\"filter\"\n            onCheck={this.changeFilter}\n            options={[\n              { disabled, label: labelSelected, value: Filter.Selected },\n              { disabled, label: labelUnselected, value: Filter.Unselected },\n              { disabled, label: labelAll, value: Filter.All }\n            ]}\n            value={filter}\n          />\n          <SearchBox\n            autoFocus={true}\n            loading={this.state.loading}\n            onChange={this.handleQueryChange}\n            placeholder={translate('search_verb')}\n            value={this.state.query}\n          />\n        </div>\n        <SelectListListContainer\n          allowBulkSelection={this.props.allowBulkSelection}\n          disabledElements={this.props.disabledElements || []}\n          elements={this.props.elements}\n          filter={this.getFilter()}\n          onSelect={this.props.onSelect}\n          onUnselect={this.props.onUnselect}\n          readOnly={this.props.readOnly}\n          renderElement={this.props.renderElement}\n          selectedElements={this.props.selectedElements}\n        />\n        {!!this.props.elementsTotalCount && this.props.onLoadMore && (\n          <ListFooter\n            count={this.props.elements.length}\n            loadMore={this.props.onLoadMore}\n            needReload={this.props.needReload}\n            reload={this.props.onReload}\n            total={this.props.elementsTotalCount}\n          />\n        )}\n      </div>\n    );\n  }\n}\n","\nvar content = require(\"!!../../../../../node_modules/css-loader/dist/cjs.js??ref--6-1!../../../../../node_modules/postcss-loader/src/index.js??postcss!./styles.css\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../../../node_modules/css-loader/dist/cjs.js??ref--6-1!../../../../../node_modules/postcss-loader/src/index.js??postcss!./styles.css\", function() {\n\t\tvar newContent = require(\"!!../../../../../node_modules/css-loader/dist/cjs.js??ref--6-1!../../../../../node_modules/postcss-loader/src/index.js??postcss!./styles.css\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","exports = module.exports = require(\"../../../../../node_modules/css-loader/dist/runtime/api.js\")(false);\n// Module\nexports.push([module.id, \".select-list-container{min-width:500px;box-sizing:border-box}.select-list-control{margin-bottom:10px;box-sizing:border-box}.select-list-list-container{border:1px solid #bfbfbf;box-sizing:border-box;height:400px;overflow:auto}.select-list-list-checkbox{display:flex!important;align-items:center}.select-list-list-checkbox i{display:inline-block;vertical-align:middle;margin-right:10px}.select-list-list-disabled{cursor:not-allowed}.select-list-list-disabled>a{pointer-events:none}.select-list-list-item{display:inline-block;vertical-align:middle}\", \"\"]);\n\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport * as ReactModal from 'react-modal';\nimport * as classNames from 'classnames';\n\nReactModal.setAppElement('#content');\n\nexport interface ModalProps {\n  children: React.ReactNode;\n  size?: 'small' | 'medium' | 'large';\n  noBackdrop?: boolean;\n}\n\ntype MandatoryProps = Pick<ReactModal.Props, 'contentLabel'>;\n\ntype Props = Partial<ReactModal.Props> & MandatoryProps & ModalProps;\n\nexport default function Modal(props: Props) {\n  return (\n    <ReactModal\n      className={classNames('modal', {\n        'modal-small': props.size === 'small',\n        'modal-medium': props.size === 'medium',\n        'modal-large': props.size === 'large'\n      })}\n      isOpen={true}\n      overlayClassName={classNames('modal-overlay', { 'modal-no-backdrop': props.noBackdrop })}\n      {...props}\n    />\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport Modal, { ModalProps } from './Modal';\n\nexport interface ChildrenProps {\n  onCloseClick: (event?: React.SyntheticEvent<HTMLElement>) => void;\n  onFormSubmit: (event: React.SyntheticEvent<HTMLFormElement>) => void;\n  onSubmitClick: (event?: React.SyntheticEvent<HTMLElement>) => void;\n  submitting: boolean;\n}\n\ninterface Props extends ModalProps {\n  children: (props: ChildrenProps) => React.ReactNode;\n  header: string;\n  onClose: () => void;\n  onSubmit: () => void | Promise<void>;\n}\n\ninterface State {\n  submitting: boolean;\n}\n\nexport default class SimpleModal extends React.Component<Props, State> {\n  mounted = false;\n  state: State = { submitting: false };\n\n  componentDidMount() {\n    this.mounted = true;\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  stopSubmitting = () => {\n    if (this.mounted) {\n      this.setState({ submitting: false });\n    }\n  };\n\n  handleCloseClick = (event?: React.SyntheticEvent<HTMLElement>) => {\n    if (event) {\n      event.preventDefault();\n      event.currentTarget.blur();\n    }\n    this.props.onClose();\n  };\n\n  handleFormSubmit = (event: React.SyntheticEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    this.submit();\n  };\n\n  handleSubmitClick = (event?: React.SyntheticEvent<HTMLElement>) => {\n    if (event) {\n      event.preventDefault();\n      event.currentTarget.blur();\n    }\n    this.submit();\n  };\n\n  submit = () => {\n    const result = this.props.onSubmit();\n    if (result) {\n      this.setState({ submitting: true });\n      result.then(this.stopSubmitting, this.stopSubmitting);\n    }\n  };\n\n  render() {\n    const { children, header, onClose, onSubmit, ...modalProps } = this.props;\n    return (\n      <Modal contentLabel={header} onRequestClose={onClose} {...modalProps}>\n        {children({\n          onCloseClick: this.handleCloseClick,\n          onFormSubmit: this.handleFormSubmit,\n          onSubmitClick: this.handleSubmitClick,\n          submitting: this.state.submitting\n        })}\n      </Modal>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport * as classNames from 'classnames';\nimport DeferredSpinner from '../common/DeferredSpinner';\nimport { translate, translateWithParameters } from '../../helpers/l10n';\nimport { formatMeasure } from '../../helpers/measures';\n\nexport interface Props {\n  count: number;\n  className?: string;\n  loading?: boolean;\n  loadMore?: () => void;\n  needReload?: boolean;\n  reload?: () => void;\n  ready?: boolean;\n  total?: number;\n}\n\nexport default function ListFooter({ ready = true, ...props }: Props) {\n  const handleLoadMore = (event: React.SyntheticEvent<HTMLElement>) => {\n    event.preventDefault();\n    event.currentTarget.blur();\n    if (props.loadMore) {\n      props.loadMore();\n    }\n  };\n\n  const handleReload = (event: React.SyntheticEvent<HTMLElement>) => {\n    event.preventDefault();\n    event.currentTarget.blur();\n    if (props.reload) {\n      props.reload();\n    }\n  };\n\n  const hasMore = props.total && props.total > props.count;\n\n  const loadMoreLink = (\n    <a className=\"spacer-left\" href=\"#\" onClick={handleLoadMore}>\n      {translate('show_more')}\n    </a>\n  );\n\n  const reloadLink = (\n    <a className=\"spacer-left\" href=\"#\" onClick={handleReload}>\n      {translate('reload')}\n    </a>\n  );\n\n  const className = classNames(\n    'spacer-top note text-center',\n    { 'new-loading': !ready },\n    props.className\n  );\n\n  let link;\n\n  if (props.needReload && props.reload) {\n    link = reloadLink;\n  } else if (hasMore && props.loadMore) {\n    link = loadMoreLink;\n  }\n\n  return (\n    <footer className={className}>\n      {translateWithParameters(\n        'x_of_y_shown',\n        formatMeasure(props.count, 'INT', null),\n        formatMeasure(props.total, 'INT', null)\n      )}\n      {link}\n      {props.loading && <DeferredSpinner className=\"text-bottom spacer-left position-absolute\" />}\n    </footer>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport * as classNames from 'classnames';\nimport DeferredSpinner from '../common/DeferredSpinner';\n\ninterface Props {\n  checked: boolean;\n  disabled?: boolean;\n  children?: React.ReactNode;\n  className?: string;\n  id?: string;\n  loading?: boolean;\n  onCheck: (checked: boolean, id?: string) => void;\n  right?: boolean;\n  thirdState?: boolean;\n  title?: string;\n}\n\nexport default class Checkbox extends React.PureComponent<Props> {\n  static defaultProps = {\n    thirdState: false\n  };\n\n  handleClick = (event: React.SyntheticEvent<HTMLElement>) => {\n    event.preventDefault();\n    event.currentTarget.blur();\n    if (!this.props.disabled) {\n      this.props.onCheck(!this.props.checked, this.props.id);\n    }\n  };\n\n  render() {\n    const { checked, children, disabled, id, loading, right, thirdState, title } = this.props;\n    const className = classNames('icon-checkbox', {\n      'icon-checkbox-checked': checked,\n      'icon-checkbox-single': thirdState,\n      'icon-checkbox-disabled': disabled\n    });\n\n    if (children) {\n      return (\n        <a\n          aria-checked={checked}\n          className={classNames('link-checkbox', this.props.className, {\n            note: disabled,\n            disabled\n          })}\n          href=\"#\"\n          id={id}\n          onClick={this.handleClick}\n          role=\"checkbox\"\n          title={title}>\n          {right && children}\n          <DeferredSpinner loading={Boolean(loading)}>\n            <i className={className} />\n          </DeferredSpinner>\n          {!right && children}\n        </a>\n      );\n    }\n\n    if (loading) {\n      return <DeferredSpinner />;\n    }\n\n    return (\n      <a\n        aria-checked={checked}\n        className={classNames(className, this.props.className)}\n        href=\"#\"\n        id={id}\n        onClick={this.handleClick}\n        role=\"checkbox\"\n        title={title}\n      />\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport * as classNames from 'classnames';\nimport Tooltip from './Tooltip';\n\ninterface Option {\n  disabled?: boolean;\n  label: string;\n  tooltip?: string;\n  value: string;\n}\n\ninterface Props {\n  className?: string;\n  name: string;\n  onCheck: (value: string) => void;\n  options: Option[];\n  value?: string;\n}\n\nexport default class RadioToggle extends React.PureComponent<Props> {\n  static defaultProps = {\n    disabled: false,\n    value: null\n  };\n\n  handleChange = (e: React.SyntheticEvent<HTMLInputElement>) => {\n    const newValue = e.currentTarget.value;\n    this.props.onCheck(newValue);\n  };\n\n  renderOption = (option: Option) => {\n    const checked = option.value === this.props.value;\n    const htmlId = this.props.name + '__' + option.value;\n    return (\n      <li key={option.value}>\n        <input\n          checked={checked}\n          disabled={option.disabled}\n          id={htmlId}\n          name={this.props.name}\n          onChange={this.handleChange}\n          type=\"radio\"\n          value={option.value}\n        />\n        <Tooltip overlay={option.tooltip || undefined}>\n          <label htmlFor={htmlId}>{option.label}</label>\n        </Tooltip>\n      </li>\n    );\n  };\n\n  render() {\n    return (\n      <ul className={classNames('radio-toggle', this.props.className)}>\n        {this.props.options.map(this.renderOption)}\n      </ul>\n    );\n  }\n}\n"],"sourceRoot":""}