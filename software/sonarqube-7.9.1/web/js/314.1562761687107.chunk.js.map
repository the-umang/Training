{"version":3,"sources":["webpack:///./src/main/js/components/common/VisibilitySelector.tsx","webpack:///./src/main/js/components/icons-components/LockIcon.tsx","webpack:///./src/main/js/apps/create/project/style.css?0a3a","webpack:///./src/main/js/apps/create/project/ManualProjectCreate.css?ab01","webpack:///./src/main/js/apps/create/project/ManualProjectCreate.css","webpack:///./src/main/js/apps/create/project/style.css","webpack:///./src/main/js/apps/create/project/AlmRepositoryItem.tsx","webpack:///./src/main/js/apps/create/project/SetupProjectBox.tsx","webpack:///./src/main/js/apps/create/project/RemoteRepositories.tsx","webpack:///./src/main/js/apps/create/project/OrganizationInput.tsx","webpack:///./src/main/js/apps/create/project/AutoProjectCreate.tsx","webpack:///./src/main/js/apps/create/components/ProjectKeyInput.tsx","webpack:///./src/main/js/apps/create/project/ManualProjectCreate.tsx","webpack:///./src/main/js/apps/create/project/CreateProjectPageSonarCloud.tsx","webpack:///./src/main/js/apps/create/project/CreateProjectPageSonarQube.tsx","webpack:///./src/main/js/apps/create/project/CreateProjectPage.tsx","webpack:///./src/main/js/components/controls/Modal.tsx","webpack:///./src/main/js/components/controls/Checkbox.tsx","webpack:///./src/main/js/helpers/organizations.ts","webpack:///./node_modules/lodash/partition.js","webpack:///./src/main/js/apps/create/components/UpgradeOrganizationModal.tsx","webpack:///./src/main/js/apps/create/components/UpgradeOrganizationBox.tsx"],"names":["VisibilitySelector","_super","_this","apply","this","arguments","handlePublicClick","event","preventDefault","currentTarget","blur","props","onChange","handlePrivateClick","__extends","prototype","render","react__WEBPACK_IMPORTED_MODULE_0__","className","classnames__WEBPACK_IMPORTED_MODULE_1__","href","id","onClick","is-checked","visibility","Object","_helpers_l10n__WEBPACK_IMPORTED_MODULE_2__","showDetails","canTurnToPrivate","__webpack_require__","d","__webpack_exports__","LockIcon","_Icon__WEBPACK_IMPORTED_MODULE_1__","_a","_b","fill","size","style","content","module","i","options","hmr","transform","insertInto","undefined","locals","exports","push","AlmRepositoryItem","handleMouseEnter","highlightUpgradeBox","handleMouseLeave","handleToggle","disabled","repository","linkedProjectKey","toggleRepository","identityProvider","selected","alreadyImported","Boolean","index_js_exposed","Tooltip","overlay","l10n","classnames","imported","onMouseEnter","onMouseLeave","role","theme","Checkbox","checked","onCheck","identity_default","a","alt","name","icon-half-transparent","height","src","urls","key","width","label","private","CheckIcon","index_es","defaultMessage","values","link","react_router_es","to","SetupProjectBox","mounted","state","submitting","canSubmit","selectedRepositories","length","handleFormSubmit","setState","alm_integration","installationKeys","map","repo","installationKey","organization","then","projects","onProjectCreate","project","projectKey","handleProvisionFail","onProvisionFail","SetupProjectBox_extends","componentDidMount","componentWillUnmount","hasSelectedRepositories","partition_default","privateRepos","_c","publicRepos","open","onSubmit","buttons","DeferredSpinner","loading","RemoteRepositories","checkAllRepositories","highlight","repositories","search","successfullyUpgraded","fetchRepositories","filterBySearch","toLowerCase","includes","handleHighlightUpgradeBox","handleOrganizationUpgrade","onOrganizationUpgrade","updateSelectedRepositories","keys","forEach","newRepository","find","r","handleSearch","onCheckAllRepositories","isPaidOrg","helpers_organizations","nextState","validRepositories","filter","filterByPlan","filterByImportable","keyBy_default","__assign","RemoteRepositories_extends","componentDidUpdate","prevProps","almApplication","hasPrivateRepositories","some","showSearchBox","showCheckAll","showUpgradebox","actions","admin","filteredRepositories","SearchBox","minLength","placeholder","value","Alert","variant","project_AlmRepositoryItem","create-project-side-with-search","project_SetupProjectBox","types","UpgradeOrganizationBox","OrganizationInput_OrganizationInput","OrganizationInput","handleLinkClick","stopPropagation","storage","utils","Date","now","toString","router","pathname","tab","autoImport","OrganizationInput_extends","organizations","htmlFor","OrganizationSelect","hideIcons","project_OrganizationInput","AutoProjectCreate","call","handleInstallAppClick","handleOrganizationSelect","selectedOrganization","getInitialSelectedOrganization","AutoProjectCreate_extends","boundOrganizations","IdentityProviderLink","small","url","installationUrl","o","project_RemoteRepositories","ProjectKeyInput","checkFreeKey","validating","components","component","alreadyExist","error","touched","catch","handleChange","validateKey","debounce_default","ProjectKeyInput_extends","test","isInvalid","isValid","ValidationInput","description","help","required","autoFocus","is-invalid","is-valid","maxLength","type","ManualProjectCreate","canChoosePrivate","subscription","getOrganization","userOrganizations","organizationKey","projectName","trim","selectedVisibility","fetchMyOrganizations","prevState","handleProjectNameChange","projectNameChanged","handleProjectKeyChange","handleVisibilityChange","ManualProjectCreate_extends","system","components_ProjectKeyInput","HelpTooltip","CreateProjectPageSonarCloud_CreateProjectPageSonarCloud","CreateProjectPageSonarCloud","handleProjectCreate","projectKeys","skipOnboarding","fetchAlmApplication","application","onTabChange","updateUrl","replace","location","query","CreateProjectPageSonarCloud_assign","CreateProjectPageSonarCloud_extends","almIntegrations","currentUser","pages","header","showManualTab","Helmet_default","title","titleTemplate","Tabs","tabs","node","create_project_ManualProjectCreate","provision","project_AutoProjectCreate","alm","mapDispatchToProps","users","project_CreateProjectPageSonarCloud","whenLoggedIn","withUserOrganizations","es","CreateProjectPageSonarQube_CreateProjectPageSonarQube","CreateProjectPageSonarQube","CreateProjectPageSonarQube_extends","project_CreateProjectPageSonarQube","CreateProjectPage","A11ySkipTarget","anchor","CreateProjectPage_assign","Modal","react_modal__WEBPACK_IMPORTED_MODULE_1__","classnames__WEBPACK_IMPORTED_MODULE_2__","modal-small","modal-medium","modal-large","isOpen","overlayClassName","modal-no-backdrop","noBackdrop","handleClick","children","right","thirdState","icon-checkbox-checked","icon-checkbox-single","icon-checkbox-disabled","aria-checked","note","_common_DeferredSpinner__WEBPACK_IMPORTED_MODULE_2__","defaultProps","isPaidOrganization","hasPrivateAccess","isCurrentUserMemberOf","_users__WEBPACK_IMPORTED_MODULE_0__","org","partition","createAggregator","result","BillingForm","withCurrentUser","BillingFormShim","UpgradeOrganizationModal","ready","extensions","contentLabel","insideModal","onRequestClose","onClose","shouldCloseOnOverlayClick","onCommit","onUpgradeDone","subscriptionPlans","processingUpgrade","renderFormFields","renderNextCharge","renderRecap","renderSubmitButton","UpgradeOrganizationAdvantages","UpgradeOrganizationBox_UpgradeOrganizationBox","upgradeOrganizationModal","fetchSubscriptionPlans","billing","handleUpgradeClick","handleUpgradeOrganizationModalClose","UpgradeOrganizationBox_extends","startingPrice","price","RadioCard","titleInfo","target","components_UpgradeOrganizationModal"],"mappings":"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","file":"js/314.1562761687107.chunk.js","sourcesContent":["/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport * as classNames from 'classnames';\nimport { translate } from '../../helpers/l10n';\n\ninterface Props {\n  canTurnToPrivate?: boolean;\n  className?: string;\n  onChange: (visibility: T.Visibility) => void;\n  showDetails?: boolean;\n  visibility?: T.Visibility;\n}\n\nexport default class VisibilitySelector extends React.PureComponent<Props> {\n  handlePublicClick = (event: React.SyntheticEvent<HTMLAnchorElement>) => {\n    event.preventDefault();\n    event.currentTarget.blur();\n    this.props.onChange('public');\n  };\n\n  handlePrivateClick = (event: React.SyntheticEvent<HTMLAnchorElement>) => {\n    event.preventDefault();\n    event.currentTarget.blur();\n    this.props.onChange('private');\n  };\n\n  render() {\n    return (\n      <div className={classNames('visibility-select', this.props.className)}>\n        <a\n          className=\"link-base-color link-no-underline visibility-select-option\"\n          href=\"#\"\n          id=\"visibility-public\"\n          onClick={this.handlePublicClick}>\n          <i\n            className={classNames('icon-radio', {\n              'is-checked': this.props.visibility === 'public'\n            })}\n          />\n          <span className=\"spacer-left\">{translate('visibility.public')}</span>\n        </a>\n        {this.props.showDetails && (\n          <span className=\"visibility-details note\">\n            {translate('visibility.public.description.long')}\n          </span>\n        )}\n\n        {this.props.canTurnToPrivate ? (\n          <>\n            <a\n              className=\"link-base-color link-no-underline huge-spacer-left visibility-select-option\"\n              href=\"#\"\n              id=\"visibility-private\"\n              onClick={this.handlePrivateClick}>\n              <i\n                className={classNames('icon-radio', {\n                  'is-checked': this.props.visibility === 'private'\n                })}\n              />\n              <span className=\"spacer-left\">{translate('visibility.private')}</span>\n            </a>\n            {this.props.showDetails && (\n              <span className=\"visibility-details note\">\n                {translate('visibility.private.description.long')}\n              </span>\n            )}\n          </>\n        ) : (\n          <>\n            <span\n              className=\"huge-spacer-left text-muted cursor-not-allowed visibility-select-option\"\n              id=\"visibility-private\">\n              <i\n                className={classNames('icon-radio', {\n                  'is-checked': this.props.visibility === 'private'\n                })}\n              />\n              <span className=\"spacer-left\">{translate('visibility.private')}</span>\n            </span>\n            {this.props.showDetails && (\n              <span className=\"visibility-details note\">\n                {translate('visibility.private.description.long')}\n              </span>\n            )}\n          </>\n        )}\n      </div>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport Icon, { IconProps } from './Icon';\n\nexport default function LockIcon({ className, fill = 'currentColor', size }: IconProps) {\n  return (\n    <Icon className={className} size={size}>\n      <path\n        d=\"M5.455 7.364h5.09v-1.91A2.55 2.55 0 0 0 8 2.91a2.55 2.55 0 0 0-2.545 2.546v1.909zm8.272.954v5.727a.955.955 0 0 1-.954.955H3.227a.955.955 0 0 1-.954-.955V8.318c0-.527.427-.954.954-.954h.318v-1.91C3.545 3.01 5.554 1 8 1s4.455 2.009 4.455 4.455v1.909h.318c.527 0 .954.427.954.954z\"\n        style={{ fill }}\n      />\n    </Icon>\n  );\n}\n","\nvar content = require(\"!!../../../../../../node_modules/css-loader/dist/cjs.js??ref--6-1!../../../../../../node_modules/postcss-loader/src/index.js??postcss!./style.css\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../../../../node_modules/css-loader/dist/cjs.js??ref--6-1!../../../../../../node_modules/postcss-loader/src/index.js??postcss!./style.css\", function() {\n\t\tvar newContent = require(\"!!../../../../../../node_modules/css-loader/dist/cjs.js??ref--6-1!../../../../../../node_modules/postcss-loader/src/index.js??postcss!./style.css\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","\nvar content = require(\"!!../../../../../../node_modules/css-loader/dist/cjs.js??ref--6-1!../../../../../../node_modules/postcss-loader/src/index.js??postcss!./ManualProjectCreate.css\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../../../../node_modules/css-loader/dist/cjs.js??ref--6-1!../../../../../../node_modules/postcss-loader/src/index.js??postcss!./ManualProjectCreate.css\", function() {\n\t\tvar newContent = require(\"!!../../../../../../node_modules/css-loader/dist/cjs.js??ref--6-1!../../../../../../node_modules/postcss-loader/src/index.js??postcss!./ManualProjectCreate.css\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","exports = module.exports = require(\"../../../../../../node_modules/css-loader/dist/runtime/api.js\")(false);\n// Module\nexports.push([module.id, \".manual-project-create{max-width:650px}.manual-project-create .visibility-select-option{margin-left:0!important;margin-bottom:8px;display:flex;align-items:center;font-size:14px}.manual-project-create .visibility-details{display:block;margin:8px 0}.manual-project-create .visibility-select-wrapper{padding:8px 0 16px}.manual-project-create .button{margin-top:8px}\", \"\"]);\n\n","exports = module.exports = require(\"../../../../../../node_modules/css-loader/dist/runtime/api.js\")(false);\n// Module\nexports.push([module.id, \".create-project{display:flex!important;justify-content:space-between}.create-project-repository{display:flex;align-items:center;min-width:500px;height:40px;border:1px solid #e6e6e6;padding:8px 16px;margin-bottom:8px;box-sizing:border-box;cursor:pointer;transition:all .3s ease}.create-project-repository.disabled{background-color:#ebebeb;border-color:#ddd;cursor:default}.create-project-repository.imported{cursor:default}.create-project-repository.selected{background-color:#cae3f2;border-color:#236a97}.create-project-repository:not(.imported):not(.disabled):active,.create-project-repository:not(.imported):not(.disabled):focus,.create-project-repository:not(.imported):not(.disabled):hover{border-color:#4b9fd5;box-shadow:none}.create-project-side-with-search{margin-top:32px}.create-project-side-sticky{position:-webkit-sticky;position:sticky;top:68px}.create-project-setup{display:flex;overflow:hidden;opacity:0;flex-direction:column;height:0;width:450px;margin-bottom:0;color:#fff;background-color:#0b3c62;border:none;border-radius:3px;transition:height .5s ease,opacity .4s ease-out,margin-bottom .5s ease-in}.create-project-setup.open{opacity:1;height:160px;margin-bottom:20px}.create-project-setup h2{color:#fff;font-weight:700;font-size:16px}.create-project-setup .boxed-group-inner{display:flex;flex-direction:column;flex-grow:1}.create-project-setup .button{border-color:#4c9bd6;background-color:#4c9bd6;color:#fff;transition:border-color .2s ease,box-shadow .2s ease,background-color .2s ease}.create-project-setup .button:focus,.create-project-setup .button:hover{border-color:#327bb3;background-color:#327bb3}.create-project-actions{min-width:500px;display:flex;justify-content:space-between;align-items:center;padding:8px 0 8px 16px;border-left:1px solid transparent}.create-project-actions .icon-checkbox{margin-right:8px}\", \"\"]);\n\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport * as classNames from 'classnames';\nimport { identity } from 'lodash';\nimport { FormattedMessage } from 'react-intl';\nimport { Link } from 'react-router';\nimport * as theme from '../../../app/theme';\nimport Checkbox from '../../../components/controls/Checkbox';\nimport CheckIcon from '../../../components/icons-components/CheckIcon';\nimport Tooltip from '../../../components/controls/Tooltip';\nimport { getBaseUrl, getProjectUrl } from '../../../helpers/urls';\nimport { translate } from '../../../helpers/l10n';\nimport LockIcon from '../../../components/icons-components/LockIcon';\n\ninterface Props {\n  disabled: boolean;\n  highlightUpgradeBox: (highlight: boolean) => void;\n  identityProvider: T.IdentityProvider;\n  repository: T.AlmRepository;\n  selected: boolean;\n  toggleRepository: (repository: T.AlmRepository) => void;\n}\n\nexport default class AlmRepositoryItem extends React.PureComponent<Props> {\n  handleMouseEnter = () => {\n    this.props.highlightUpgradeBox(true);\n  };\n\n  handleMouseLeave = () => {\n    this.props.highlightUpgradeBox(false);\n  };\n\n  handleToggle = () => {\n    if (!this.props.disabled && !this.props.repository.linkedProjectKey) {\n      this.props.toggleRepository(this.props.repository);\n    }\n  };\n\n  render() {\n    const { disabled, identityProvider, repository, selected } = this.props;\n    const alreadyImported = Boolean(repository.linkedProjectKey);\n    return (\n      <Tooltip\n        overlay={\n          disabled\n            ? translate('onboarding.create_project.subscribe_to_import_private_repositories')\n            : undefined\n        }>\n        <li>\n          <div\n            className={classNames('create-project-repository', {\n              disabled,\n              imported: alreadyImported,\n              selected\n            })}\n            onClick={this.handleToggle}\n            onMouseEnter={disabled ? this.handleMouseEnter : undefined}\n            onMouseLeave={disabled ? this.handleMouseLeave : undefined}\n            role=\"listitem\">\n            <div className=\"flex-1 display-flex-center\">\n              {disabled ? (\n                <LockIcon fill={theme.disableGrayText} />\n              ) : (\n                <Checkbox\n                  checked={selected || alreadyImported}\n                  disabled={disabled || alreadyImported}\n                  onCheck={identity}\n                />\n              )}\n              <img\n                alt={identityProvider.name}\n                className={classNames('spacer-left', { 'icon-half-transparent': disabled })}\n                height={14}\n                src={`${getBaseUrl()}/images/sonarcloud/${identityProvider.key}.svg`}\n                width={14}\n              />\n              <span className=\"spacer-left\">{this.props.repository.label}</span>\n              {repository.private && (\n                <div className=\"outline-badge spacer-left\">{translate('visibility.private')}</div>\n              )}\n            </div>\n\n            {repository.linkedProjectKey && (\n              <span>\n                <CheckIcon className=\"little-spacer-right\" fill={theme.green} />\n                <FormattedMessage\n                  defaultMessage={translate('onboarding.create_project.repository_imported')}\n                  id=\"onboarding.create_project.repository_imported\"\n                  values={{\n                    link: (\n                      <Link to={getProjectUrl(repository.linkedProjectKey)}>\n                        {translate('onboarding.create_project.see_project')}\n                      </Link>\n                    )\n                  }}\n                />\n              </span>\n            )}\n          </div>\n        </li>\n      </Tooltip>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport * as classNames from 'classnames';\nimport { partition } from 'lodash';\nimport DeferredSpinner from '../../../components/common/DeferredSpinner';\nimport { SubmitButton } from '../../../components/ui/buttons';\nimport { provisionProject } from '../../../api/alm-integration';\nimport { translate, translateWithParameters } from '../../../helpers/l10n';\n\ninterface Props {\n  onProjectCreate: (projectKeys: string[], organization: string) => void;\n  onProvisionFail: () => Promise<void>;\n  organization: T.Organization;\n  selectedRepositories: T.AlmRepository[];\n}\n\ninterface State {\n  submitting: boolean;\n}\n\nexport default class SetupProjectBox extends React.PureComponent<Props, State> {\n  mounted = false;\n  state: State = { submitting: false };\n\n  componentDidMount() {\n    this.mounted = true;\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  canSubmit = () => {\n    return !this.state.submitting && this.props.selectedRepositories.length > 0;\n  };\n\n  handleFormSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n\n    if (this.canSubmit()) {\n      const { selectedRepositories } = this.props;\n      this.setState({ submitting: true });\n      provisionProject({\n        installationKeys: selectedRepositories.map(repo => repo.installationKey),\n        organization: this.props.organization.key\n      }).then(\n        ({ projects }) =>\n          this.props.onProjectCreate(\n            projects.map(project => project.projectKey),\n            this.props.organization.key\n          ),\n        this.handleProvisionFail\n      );\n    }\n  };\n\n  handleProvisionFail = () => {\n    return this.props.onProvisionFail().then(() => {\n      if (this.mounted) {\n        this.setState({ submitting: false });\n      }\n    });\n  };\n\n  render() {\n    const { selectedRepositories } = this.props;\n    const hasSelectedRepositories = selectedRepositories.length > 0;\n    const [privateRepos = [], publicRepos = []] = partition(\n      selectedRepositories,\n      repo => repo.private\n    );\n    return (\n      <form\n        className={classNames('create-project-setup boxed-group', {\n          open: hasSelectedRepositories\n        })}\n        onSubmit={this.handleFormSubmit}>\n        <div className=\"boxed-group-header\">\n          <h2 className=\"spacer-top\">\n            {selectedRepositories.length > 1\n              ? translateWithParameters(\n                  'onboarding.create_project.x_repositories_selected',\n                  selectedRepositories.length\n                )\n              : translate('onboarding.create_project.1_repository_selected')}\n          </h2>\n        </div>\n        <div className=\"boxed-group-inner\">\n          <div className=\"flex-1\">\n            {publicRepos.length === 1 && (\n              <p>{translate('onboarding.create_project.1_repository_created_as_public')}</p>\n            )}\n            {publicRepos.length > 1 && (\n              <p>\n                {translateWithParameters(\n                  'onboarding.create_project.x_repository_created_as_public',\n                  publicRepos.length\n                )}\n              </p>\n            )}\n            {privateRepos.length === 1 && (\n              <p>{translate('onboarding.create_project.1_repository_created_as_private')}</p>\n            )}\n            {privateRepos.length > 1 && (\n              <p>\n                {translateWithParameters(\n                  'onboarding.create_project.x_repository_created_as_private',\n                  privateRepos.length\n                )}\n              </p>\n            )}\n          </div>\n          <div>\n            <SubmitButton className=\"button-large\" disabled={this.state.submitting}>\n              {translate('set_up')}\n            </SubmitButton>\n            <DeferredSpinner className=\"spacer-left\" loading={this.state.submitting} />\n          </div>\n        </div>\n      </form>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport * as classNames from 'classnames';\nimport { keyBy } from 'lodash';\nimport AlmRepositoryItem from './AlmRepositoryItem';\nimport SetupProjectBox from './SetupProjectBox';\nimport DeferredSpinner from '../../../components/common/DeferredSpinner';\nimport Checkbox from '../../../components/controls/Checkbox';\nimport SearchBox from '../../../components/controls/SearchBox';\nimport UpgradeOrganizationBox from '../components/UpgradeOrganizationBox';\nimport { Alert } from '../../../components/ui/Alert';\nimport { getRepositories } from '../../../api/alm-integration';\nimport { translateWithParameters, translate } from '../../../helpers/l10n';\nimport { isPaidOrganization } from '../../../helpers/organizations';\nimport { isDefined } from '../../../helpers/types';\n\ninterface Props {\n  almApplication: T.AlmApplication;\n  onOrganizationUpgrade: () => void;\n  onProjectCreate: (projectKeys: string[], organization: string) => void;\n  organization: T.Organization;\n}\n\ntype SelectedRepositories = T.Dict<T.AlmRepository | undefined>;\n\ninterface State {\n  checkAllRepositories: boolean;\n  highlight: boolean;\n  loading: boolean;\n  repositories: T.AlmRepository[];\n  search: string;\n  selectedRepositories: SelectedRepositories;\n  successfullyUpgraded: boolean;\n}\n\nexport default class RemoteRepositories extends React.PureComponent<Props, State> {\n  mounted = false;\n  state: State = {\n    checkAllRepositories: false,\n    highlight: false,\n    loading: true,\n    repositories: [],\n    search: '',\n    selectedRepositories: {},\n    successfullyUpgraded: false\n  };\n\n  componentDidMount() {\n    this.mounted = true;\n    this.fetchRepositories();\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    if (prevProps.organization.key !== this.props.organization.key) {\n      this.setState({ loading: true, selectedRepositories: {} });\n      this.fetchRepositories();\n    }\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  fetchRepositories = () => {\n    const { organization } = this.props;\n    return getRepositories({ organization: organization.key }).then(\n      ({ repositories }) => {\n        if (this.mounted) {\n          this.setState({ loading: false, repositories });\n        }\n      },\n      () => {\n        if (this.mounted) {\n          this.setState({ loading: false });\n        }\n      }\n    );\n  };\n\n  filterBySearch = (search: String) => (repo: T.AlmRepository) => {\n    return repo.label.toLowerCase().includes(search.toLowerCase());\n  };\n\n  handleHighlightUpgradeBox = (highlight: boolean) => {\n    this.setState({ highlight });\n  };\n\n  handleOrganizationUpgrade = () => {\n    this.props.onOrganizationUpgrade();\n    if (this.mounted) {\n      this.setState({ successfullyUpgraded: true });\n    }\n  };\n\n  handleProvisionFail = () => {\n    return this.fetchRepositories().then(() => {\n      if (this.mounted) {\n        this.setState(({ repositories, selectedRepositories }) => {\n          const updateSelectedRepositories: SelectedRepositories = {};\n          Object.keys(selectedRepositories).forEach(installationKey => {\n            const newRepository = repositories.find(r => r.installationKey === installationKey);\n            if (newRepository && !newRepository.linkedProjectKey) {\n              updateSelectedRepositories[newRepository.installationKey] = newRepository;\n            }\n          });\n          return { selectedRepositories: updateSelectedRepositories };\n        });\n      }\n    });\n  };\n\n  handleSearch = (search: string) => {\n    this.setState({ search, checkAllRepositories: false, selectedRepositories: {} });\n  };\n\n  onCheckAllRepositories = () => {\n    this.setState(({ checkAllRepositories, repositories, search }) => {\n      const { organization } = this.props;\n\n      const isPaidOrg = isPaidOrganization(organization);\n      const filterByPlan = (repo: T.AlmRepository) => (isPaidOrg ? true : !repo.private);\n      const filterByImportable = (repo: T.AlmRepository) => !repo.linkedProjectKey;\n\n      const nextState = {\n        selectedRepositories: {},\n        checkAllRepositories: !checkAllRepositories\n      };\n\n      if (nextState.checkAllRepositories) {\n        const validRepositories = repositories.filter(\n          repo =>\n            this.filterBySearch(search)(repo) && filterByPlan(repo) && filterByImportable(repo)\n        );\n        nextState.selectedRepositories = keyBy(validRepositories, 'installationKey');\n      }\n\n      return nextState;\n    });\n  };\n\n  toggleRepository = (repository: T.AlmRepository) => {\n    this.setState(({ selectedRepositories }) => ({\n      selectedRepositories: {\n        ...selectedRepositories,\n        [repository.installationKey]: selectedRepositories[repository.installationKey]\n          ? undefined\n          : repository\n      }\n    }));\n  };\n\n  render() {\n    const { highlight, loading, repositories, search, selectedRepositories } = this.state;\n    const { almApplication, organization } = this.props;\n    const isPaidOrg = isPaidOrganization(organization);\n    const hasPrivateRepositories = repositories.some(repository => Boolean(repository.private));\n    const showSearchBox = repositories.length > 5;\n    const showCheckAll = repositories.length > 1;\n    const showUpgradebox =\n      !isPaidOrg && hasPrivateRepositories && organization.actions && organization.actions.admin;\n    const filteredRepositories = repositories.filter(this.filterBySearch(search));\n\n    return (\n      <div className=\"create-project\">\n        <div className=\"flex-1 huge-spacer-right\">\n          <div className=\"spacer-bottom create-project-actions\">\n            <div>\n              {showCheckAll && (\n                <Checkbox\n                  checked={this.state.checkAllRepositories}\n                  disabled={filteredRepositories.length === 0}\n                  onCheck={this.onCheckAllRepositories}>\n                  {translate('onboarding.create_project.select_all_repositories')}\n                </Checkbox>\n              )}\n            </div>\n            {showSearchBox && (\n              <SearchBox\n                minLength={1}\n                onChange={this.handleSearch}\n                placeholder={translate('search.search_for_repositories')}\n                value={this.state.search}\n              />\n            )}\n          </div>\n\n          {this.state.successfullyUpgraded && (\n            <Alert variant=\"success\">\n              {translateWithParameters(\n                'onboarding.create_project.subscribtion_success_x',\n                organization.name\n              )}\n            </Alert>\n          )}\n          <DeferredSpinner loading={loading}>\n            <ul>\n              {filteredRepositories.length === 0 && (\n                <li className=\"big-spacer-top note\">\n                  {showUpgradebox\n                    ? translateWithParameters('no_results_for_x', search)\n                    : translate('onboarding.create_project.no_repositories')}\n                </li>\n              )}\n              {filteredRepositories.map(repo => (\n                <AlmRepositoryItem\n                  disabled={Boolean(repo.private && !isPaidOrg)}\n                  highlightUpgradeBox={this.handleHighlightUpgradeBox}\n                  identityProvider={almApplication}\n                  key={repo.installationKey}\n                  repository={repo}\n                  selected={Boolean(selectedRepositories[repo.installationKey])}\n                  toggleRepository={this.toggleRepository}\n                />\n              ))}\n            </ul>\n          </DeferredSpinner>\n        </div>\n        {organization && (\n          <div className={classNames({ 'create-project-side-with-search': showSearchBox })}>\n            <div className=\"create-project-side-sticky\">\n              <SetupProjectBox\n                onProjectCreate={this.props.onProjectCreate}\n                onProvisionFail={this.handleProvisionFail}\n                organization={organization}\n                selectedRepositories={Object.keys(selectedRepositories)\n                  .map(r => selectedRepositories[r])\n                  .filter(isDefined)}\n              />\n              {showUpgradebox && (\n                <UpgradeOrganizationBox\n                  className={classNames({ highlight })}\n                  onOrganizationUpgrade={this.handleOrganizationUpgrade}\n                  organization={organization}\n                />\n              )}\n            </div>\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { WithRouterProps, withRouter } from 'react-router';\nimport OrganizationSelect from '../components/OrganizationSelect';\nimport { ORGANIZATION_IMPORT_REDIRECT_TO_PROJECT_TIMESTAMP } from '../organization/utils';\nimport { translate } from '../../../helpers/l10n';\nimport { save } from '../../../helpers/storage';\n\ninterface Props {\n  autoImport?: boolean;\n  onChange: (organization: T.Organization) => void;\n  organization: string;\n  organizations: T.Organization[];\n}\n\nexport class OrganizationInput extends React.PureComponent<Props & WithRouterProps> {\n  handleLinkClick = (event: React.MouseEvent<HTMLAnchorElement>) => {\n    event.preventDefault();\n    event.stopPropagation();\n    save(ORGANIZATION_IMPORT_REDIRECT_TO_PROJECT_TIMESTAMP, Date.now().toString(10));\n    this.props.router.push({\n      pathname: '/create-organization',\n      state: { tab: this.props.autoImport ? 'auto' : 'manual' }\n    });\n  };\n\n  render() {\n    const { autoImport, onChange, organization, organizations } = this.props;\n    return (\n      <div className=\"form-field spacer-bottom\">\n        <label htmlFor=\"select-organization\">\n          <span className=\"text-middle\">\n            <strong>{translate('onboarding.create_project.organization')}</strong>\n            <em className=\"mandatory\">*</em>\n          </span>\n        </label>\n        <OrganizationSelect\n          hideIcons={!autoImport}\n          onChange={onChange}\n          organization={organization}\n          organizations={organizations}\n        />\n        <a className=\"big-spacer-left js-new-org\" href=\"#\" onClick={this.handleLinkClick}>\n          {autoImport\n            ? translate('onboarding.create_project.import_new_org')\n            : translate('onboarding.create_project.create_new_org')}\n        </a>\n      </div>\n    );\n  }\n}\n\nexport default withRouter(OrganizationInput);\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport RemoteRepositories from './RemoteRepositories';\nimport OrganizationInput from './OrganizationInput';\nimport IdentityProviderLink from '../../../components/ui/IdentityProviderLink';\nimport {\n  ORGANIZATION_IMPORT_BINDING_IN_PROGRESS_TIMESTAMP,\n  ORGANIZATION_IMPORT_REDIRECT_TO_PROJECT_TIMESTAMP\n} from '../organization/utils';\nimport { translate } from '../../../helpers/l10n';\nimport { save } from '../../../helpers/storage';\n\ninterface Props {\n  almApplication: T.AlmApplication;\n  boundOrganizations: T.Organization[];\n  onOrganizationUpgrade: () => void;\n  onProjectCreate: (projectKeys: string[], organization: string) => void;\n  organization?: string;\n}\n\ninterface State {\n  selectedOrganization: string;\n}\n\nexport default class AutoProjectCreate extends React.PureComponent<Props, State> {\n  mounted = false;\n\n  constructor(props: Props) {\n    super(props);\n    this.state = { selectedOrganization: this.getInitialSelectedOrganization(props) };\n  }\n\n  componentDidMount() {\n    this.mounted = true;\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  getInitialSelectedOrganization(props: Props) {\n    if (props.organization) {\n      return props.organization;\n    } else if (props.boundOrganizations.length === 1) {\n      return props.boundOrganizations[0].key;\n    } else {\n      return '';\n    }\n  }\n\n  handleInstallAppClick = () => {\n    save(ORGANIZATION_IMPORT_BINDING_IN_PROGRESS_TIMESTAMP, Date.now().toString(10));\n    save(ORGANIZATION_IMPORT_REDIRECT_TO_PROJECT_TIMESTAMP, Date.now().toString(10));\n  };\n\n  handleOrganizationSelect = ({ key }: T.Organization) => {\n    this.setState({ selectedOrganization: key });\n  };\n\n  render() {\n    const { almApplication, boundOrganizations, onProjectCreate } = this.props;\n\n    if (boundOrganizations.length === 0) {\n      return (\n        <>\n          <p className=\"spacer-bottom\">\n            {translate('onboarding.create_project.install_app_description', almApplication.key)}\n          </p>\n          <IdentityProviderLink\n            className=\"display-inline-block\"\n            identityProvider={almApplication}\n            onClick={this.handleInstallAppClick}\n            small={true}\n            url={almApplication.installationUrl}>\n            {translate(\n              'onboarding.import_organization.choose_organization_button',\n              almApplication.key\n            )}\n          </IdentityProviderLink>\n        </>\n      );\n    }\n\n    const { selectedOrganization } = this.state;\n    const organization = boundOrganizations.find(o => o.key === selectedOrganization);\n\n    return (\n      <>\n        <OrganizationInput\n          autoImport={true}\n          onChange={this.handleOrganizationSelect}\n          organization={selectedOrganization}\n          organizations={this.props.boundOrganizations}\n        />\n        {organization && (\n          <RemoteRepositories\n            almApplication={almApplication}\n            onOrganizationUpgrade={this.props.onOrganizationUpgrade}\n            onProjectCreate={onProjectCreate}\n            organization={organization}\n          />\n        )}\n      </>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport * as classNames from 'classnames';\nimport { debounce } from 'lodash';\nimport ValidationInput from '../../../components/controls/ValidationInput';\nimport { doesComponentExists } from '../../../api/components';\nimport { translate } from '../../../helpers/l10n';\n\ninterface Props {\n  className?: string;\n  value: string;\n  onChange: (value: string | undefined) => void;\n}\n\ninterface State {\n  error?: string;\n  touched: boolean;\n  validating: boolean;\n}\n\nexport default class ProjectKeyInput extends React.PureComponent<Props, State> {\n  mounted = false;\n  constructor(props: Props) {\n    super(props);\n    this.state = { error: undefined, touched: false, validating: false };\n    this.checkFreeKey = debounce(this.checkFreeKey, 250);\n  }\n\n  componentDidMount() {\n    this.mounted = true;\n    if (this.props.value) {\n      this.validateKey(this.props.value);\n    }\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  checkFreeKey = (key: string) => {\n    this.setState({ validating: true });\n    return doesComponentExists({ component: key })\n      .then(alreadyExist => {\n        if (this.mounted && key === this.props.value) {\n          if (!alreadyExist) {\n            this.setState({ error: undefined, validating: false });\n          } else {\n            this.setState({\n              error: translate('onboarding.create_project.project_key.taken'),\n              touched: true,\n              validating: false\n            });\n          }\n        }\n      })\n      .catch(() => {\n        if (this.mounted && key === this.props.value) {\n          this.setState({ error: undefined, validating: false });\n        }\n      });\n  };\n\n  handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const { value } = event.currentTarget;\n    this.setState({ touched: true });\n    this.validateKey(value);\n    this.props.onChange(value);\n  };\n\n  validateKey(key: string) {\n    if (key.length > 400 || !/^[\\w-.:]*[a-zA-Z]+[\\w-.:]*$/.test(key)) {\n      this.setState({\n        error: translate('onboarding.create_project.project_key.error'),\n        touched: true\n      });\n    } else {\n      this.checkFreeKey(key);\n    }\n  }\n\n  render() {\n    const isInvalid = this.state.touched && this.state.error !== undefined;\n    const isValid = this.state.touched && !this.state.validating && this.state.error === undefined;\n    return (\n      <ValidationInput\n        className={this.props.className}\n        description={translate('onboarding.create_project.project_key.description')}\n        error={this.state.error}\n        help={translate('onboarding.create_project.project_key.help')}\n        id=\"project-key\"\n        isInvalid={isInvalid}\n        isValid={isValid}\n        label={translate('onboarding.create_project.project_key')}\n        required={true}>\n        <input\n          autoFocus={true}\n          className={classNames('input-super-large', {\n            'is-invalid': isInvalid,\n            'is-valid': isValid\n          })}\n          id=\"project-key\"\n          maxLength={400}\n          minLength={1}\n          onChange={this.handleChange}\n          type=\"text\"\n          value={this.props.value}\n        />\n      </ValidationInput>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport * as classNames from 'classnames';\nimport OrganizationInput from './OrganizationInput';\nimport { createProject } from '../../../api/components';\nimport DeferredSpinner from '../../../components/common/DeferredSpinner';\nimport { SubmitButton } from '../../../components/ui/buttons';\nimport ProjectKeyInput from '../components/ProjectKeyInput';\nimport VisibilitySelector from '../../../components/common/VisibilitySelector';\nimport UpgradeOrganizationBox from '../components/UpgradeOrganizationBox';\nimport HelpTooltip from '../../../components/controls/HelpTooltip';\nimport { translate } from '../../../helpers/l10n';\nimport { isSonarCloud } from '../../../helpers/system';\nimport './ManualProjectCreate.css';\n\ninterface Props {\n  currentUser: T.LoggedInUser;\n  fetchMyOrganizations?: () => Promise<void>;\n  onProjectCreate: (projectKeys: string[]) => void;\n  organization?: string;\n  userOrganizations?: T.Organization[];\n}\n\ninterface State {\n  projectName: string;\n  projectNameChanged: boolean;\n  projectKey: string;\n  selectedOrganization?: T.Organization;\n  selectedVisibility?: T.Visibility;\n  submitting: boolean;\n}\n\ntype ValidState = State & Required<Pick<State, 'projectKey' | 'projectName'>>;\n\nexport default class ManualProjectCreate extends React.PureComponent<Props, State> {\n  mounted = false;\n\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      projectKey: '',\n      projectName: '',\n      projectNameChanged: false,\n      selectedOrganization: this.getInitialSelectedOrganization(props),\n      submitting: false\n    };\n  }\n\n  componentDidMount() {\n    this.mounted = true;\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  canChoosePrivate = (selectedOrganization: T.Organization | undefined) => {\n    return Boolean(selectedOrganization && selectedOrganization.subscription === 'PAID');\n  };\n\n  canSubmit(state: State): state is ValidState {\n    return Boolean(\n      state.projectKey && state.projectName && (!isSonarCloud() || state.selectedOrganization)\n    );\n  }\n\n  getInitialSelectedOrganization = (props: Props) => {\n    if (props.organization) {\n      return this.getOrganization(props.organization);\n    } else if (props.userOrganizations && props.userOrganizations.length === 1) {\n      return props.userOrganizations[0];\n    } else {\n      return undefined;\n    }\n  };\n\n  getOrganization = (organizationKey: string) => {\n    return (\n      this.props.userOrganizations &&\n      this.props.userOrganizations.find(({ key }: T.Organization) => key === organizationKey)\n    );\n  };\n\n  handleFormSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    const { state } = this;\n    if (this.canSubmit(state)) {\n      this.setState({ submitting: true });\n      createProject({\n        project: state.projectKey,\n        name: (state.projectName || state.projectKey).trim(),\n        organization: state.selectedOrganization && state.selectedOrganization.key,\n        visibility: this.state.selectedVisibility\n      }).then(\n        ({ project }) => this.props.onProjectCreate([project.key]),\n        () => {\n          if (this.mounted) {\n            this.setState({ submitting: false });\n          }\n        }\n      );\n    }\n  };\n\n  handleOrganizationSelect = ({ key }: T.Organization) => {\n    const selectedOrganization = this.getOrganization(key);\n    let { selectedVisibility } = this.state;\n\n    if (selectedVisibility === undefined) {\n      selectedVisibility = this.canChoosePrivate(selectedOrganization) ? 'private' : 'public';\n    }\n\n    this.setState({\n      selectedOrganization,\n      selectedVisibility\n    });\n  };\n\n  handleOrganizationUpgrade = () => {\n    this.props.fetchMyOrganizations!().then(\n      () => {\n        this.setState(prevState => {\n          if (prevState.selectedOrganization) {\n            const selectedOrganization = this.getOrganization(prevState.selectedOrganization.key);\n            return {\n              selectedOrganization\n            };\n          }\n          return null;\n        });\n      },\n      () => {}\n    );\n  };\n\n  handleProjectNameChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const projectName = event.currentTarget.value;\n    this.setState({ projectName, projectNameChanged: true });\n  };\n\n  handleProjectKeyChange = (projectKey: string) => {\n    this.setState(state => ({\n      projectKey,\n      projectName: state.projectNameChanged ? state.projectName : projectKey || ''\n    }));\n  };\n\n  handleVisibilityChange = (selectedVisibility: T.Visibility) => {\n    this.setState({ selectedVisibility });\n  };\n\n  render() {\n    const { selectedOrganization, submitting } = this.state;\n    const canChoosePrivate = this.canChoosePrivate(selectedOrganization);\n\n    return (\n      <div className=\"create-project\">\n        <div className=\"flex-1 huge-spacer-right\">\n          <form className=\"manual-project-create\" onSubmit={this.handleFormSubmit}>\n            {isSonarCloud() && this.props.userOrganizations && (\n              <OrganizationInput\n                onChange={this.handleOrganizationSelect}\n                organization={selectedOrganization ? selectedOrganization.key : ''}\n                organizations={this.props.userOrganizations}\n              />\n            )}\n            <ProjectKeyInput\n              className=\"form-field\"\n              onChange={this.handleProjectKeyChange}\n              value={this.state.projectKey}\n            />\n            <div className=\"form-field\">\n              <label htmlFor=\"project-name\">\n                <span className=\"text-middle\">\n                  <strong>{translate('onboarding.create_project.display_name')}</strong>\n                  <em className=\"mandatory\">*</em>\n                </span>\n                <HelpTooltip\n                  className=\"spacer-left\"\n                  overlay={translate('onboarding.create_project.display_name.help')}\n                />\n              </label>\n              <div className=\"little-spacer-top spacer-bottom\">\n                <input\n                  className={'input-super-large'}\n                  id=\"project-name\"\n                  maxLength={255}\n                  minLength={1}\n                  onChange={this.handleProjectNameChange}\n                  type=\"text\"\n                  value={this.state.projectName}\n                />\n              </div>\n              <div className=\"note abs-width-400\">\n                {translate('onboarding.create_project.display_name.description')}\n              </div>\n            </div>\n            {isSonarCloud() && selectedOrganization && (\n              <div\n                className={classNames('visibility-select-wrapper', {\n                  open: Boolean(this.state.selectedOrganization)\n                })}>\n                <VisibilitySelector\n                  canTurnToPrivate={canChoosePrivate}\n                  onChange={this.handleVisibilityChange}\n                  showDetails={true}\n                  visibility={canChoosePrivate ? this.state.selectedVisibility : 'public'}\n                />\n              </div>\n            )}\n            <SubmitButton disabled={!this.canSubmit(this.state) || submitting}>\n              {translate('set_up')}\n            </SubmitButton>\n            <DeferredSpinner className=\"spacer-left\" loading={submitting} />\n          </form>\n        </div>\n\n        {isSonarCloud() && selectedOrganization && (\n          <div className=\"create-project-side-sticky\">\n            <UpgradeOrganizationBox\n              className={classNames('animated', { open: !canChoosePrivate })}\n              onOrganizationUpgrade={this.handleOrganizationUpgrade}\n              organization={selectedOrganization}\n            />\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { connect } from 'react-redux';\nimport { WithRouterProps } from 'react-router';\nimport Helmet from 'react-helmet';\nimport AutoProjectCreate from './AutoProjectCreate';\nimport ManualProjectCreate from './ManualProjectCreate';\nimport DeferredSpinner from '../../../components/common/DeferredSpinner';\nimport Tabs from '../../../components/controls/Tabs';\nimport { whenLoggedIn } from '../../../components/hoc/whenLoggedIn';\nimport { withUserOrganizations } from '../../../components/hoc/withUserOrganizations';\nimport { getAlmAppInfo } from '../../../api/alm-integration';\nimport { hasAdvancedALMIntegration } from '../../../helpers/almIntegrations';\nimport { translate } from '../../../helpers/l10n';\nimport { addWhitePageClass, removeWhitePageClass } from '../../../helpers/pages';\nimport { getProjectUrl, getOrganizationUrl } from '../../../helpers/urls';\nimport { skipOnboarding } from '../../../store/users';\nimport './style.css';\n\ninterface Props {\n  currentUser: T.LoggedInUser;\n  fetchMyOrganizations: () => Promise<void>;\n  skipOnboarding: () => void;\n  userOrganizations: T.Organization[];\n}\n\ninterface State {\n  almApplication?: T.AlmApplication;\n  loading: boolean;\n}\n\ntype TabKeys = 'auto' | 'manual';\n\ninterface LocationState {\n  organization?: string;\n  tab?: TabKeys;\n}\n\nexport class CreateProjectPageSonarCloud extends React.PureComponent<\n  Props & WithRouterProps,\n  State\n> {\n  mounted = false;\n  state: State = { loading: true };\n\n  componentDidMount() {\n    this.mounted = true;\n    if (hasAdvancedALMIntegration(this.props.currentUser)) {\n      this.fetchAlmApplication();\n    } else {\n      this.setState({ loading: false });\n    }\n    addWhitePageClass();\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n    removeWhitePageClass();\n  }\n\n  handleProjectCreate = (projectKeys: string[], organization?: string) => {\n    this.props.skipOnboarding();\n    if (projectKeys.length > 1) {\n      this.props.router.push({\n        pathname: (organization ? getOrganizationUrl(organization) : '') + '/projects'\n      });\n    } else if (projectKeys.length === 1) {\n      this.props.router.push(getProjectUrl(projectKeys[0]));\n    }\n  };\n\n  fetchAlmApplication = () => {\n    return getAlmAppInfo().then(\n      ({ application }) => {\n        if (this.mounted) {\n          this.setState({ almApplication: application, loading: false });\n        }\n      },\n      () => {\n        if (this.mounted) {\n          this.setState({ loading: false });\n        }\n      }\n    );\n  };\n\n  onTabChange = (tab: TabKeys) => {\n    this.updateUrl({ tab });\n  };\n\n  updateUrl = (state: Partial<LocationState> = {}) => {\n    this.props.router.replace({\n      pathname: this.props.location.pathname,\n      query: this.props.location.query,\n      state: { ...(this.props.location.state || {}), ...state }\n    });\n  };\n\n  render() {\n    const { currentUser, location, userOrganizations } = this.props;\n    const { almApplication, loading } = this.state;\n    const state: LocationState = location.state || {};\n    const header = translate('onboarding.create_project.header');\n    const showManualTab = state.tab === 'manual';\n\n    return (\n      <>\n        <Helmet title={header} titleTemplate=\"%s\" />\n        <div className=\"page page-limited huge-spacer-top huge-spacer-bottom\">\n          <header className=\"page-header huge-spacer-bottom\">\n            <h1 className=\"page-title huge\">\n              <strong>{header}</strong>\n            </h1>\n          </header>\n          {loading ? (\n            <DeferredSpinner />\n          ) : (\n            <>\n              {almApplication && (\n                <Tabs<TabKeys>\n                  onChange={this.onTabChange}\n                  selected={state.tab || 'auto'}\n                  tabs={[\n                    {\n                      key: 'auto',\n                      node: translate('onboarding.create_project.select_repositories')\n                    },\n                    { key: 'manual', node: translate('onboarding.create_project.setup_manually') }\n                  ]}\n                />\n              )}\n\n              {showManualTab || !almApplication ? (\n                <ManualProjectCreate\n                  currentUser={currentUser}\n                  fetchMyOrganizations={this.props.fetchMyOrganizations}\n                  onProjectCreate={this.handleProjectCreate}\n                  organization={state.organization}\n                  userOrganizations={userOrganizations.filter(\n                    ({ actions = {} }) => actions.provision\n                  )}\n                />\n              ) : (\n                <AutoProjectCreate\n                  almApplication={almApplication}\n                  boundOrganizations={userOrganizations.filter(\n                    ({ alm, actions = {} }) => alm && actions.provision\n                  )}\n                  onOrganizationUpgrade={this.props.fetchMyOrganizations}\n                  onProjectCreate={this.handleProjectCreate}\n                  organization={state.organization}\n                />\n              )}\n            </>\n          )}\n        </div>\n      </>\n    );\n  }\n}\n\nconst mapDispatchToProps = { skipOnboarding };\n\nexport default whenLoggedIn(\n  withUserOrganizations(\n    connect(\n      null,\n      mapDispatchToProps\n    )(CreateProjectPageSonarCloud)\n  )\n);\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { WithRouterProps } from 'react-router';\nimport Helmet from 'react-helmet';\nimport ManualProjectCreate from './ManualProjectCreate';\nimport { whenLoggedIn } from '../../../components/hoc/whenLoggedIn';\nimport { translate } from '../../../helpers/l10n';\nimport { addWhitePageClass, removeWhitePageClass } from '../../../helpers/pages';\nimport { getProjectUrl } from '../../../helpers/urls';\nimport './style.css';\n\ninterface Props {\n  currentUser: T.LoggedInUser;\n}\n\nexport class CreateProjectPageSonarQube extends React.PureComponent<Props & WithRouterProps> {\n  componentDidMount() {\n    addWhitePageClass();\n  }\n\n  componentWillUnmount() {\n    removeWhitePageClass();\n  }\n\n  handleProjectCreate = (projectKeys: string[]) => {\n    if (projectKeys.length === 1) {\n      this.props.router.push(getProjectUrl(projectKeys[0]));\n    }\n  };\n\n  render() {\n    const { currentUser } = this.props;\n    const header = translate('my_account.create_new.TRK');\n    return (\n      <>\n        <Helmet title={header} titleTemplate=\"%s\" />\n        <div className=\"page page-limited huge-spacer-top huge-spacer-bottom\">\n          <header className=\"page-header bordered-bottom big-spacer-bottom\">\n            <h1 className=\"page-title huge big-spacer-bottom\">\n              <strong>{header}</strong>\n            </h1>\n          </header>\n          <ManualProjectCreate\n            currentUser={currentUser}\n            onProjectCreate={this.handleProjectCreate}\n          />\n        </div>\n      </>\n    );\n  }\n}\n\nexport default whenLoggedIn(CreateProjectPageSonarQube);\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { WithRouterProps } from 'react-router';\nimport CreateProjectPageSonarCloud from './CreateProjectPageSonarCloud';\nimport CreateProjectPageSonarQube from './CreateProjectPageSonarQube';\nimport A11ySkipTarget from '../../../app/components/a11y/A11ySkipTarget';\nimport { isSonarCloud } from '../../../helpers/system';\n\nexport default function CreateProjectPage(props: WithRouterProps) {\n  return (\n    <>\n      <A11ySkipTarget anchor=\"create_project_main\" />\n      {isSonarCloud() ? (\n        <CreateProjectPageSonarCloud {...props} />\n      ) : (\n        <CreateProjectPageSonarQube {...props} />\n      )}\n    </>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport * as ReactModal from 'react-modal';\nimport * as classNames from 'classnames';\n\nReactModal.setAppElement('#content');\n\nexport interface ModalProps {\n  children: React.ReactNode;\n  size?: 'small' | 'medium' | 'large';\n  noBackdrop?: boolean;\n}\n\ntype MandatoryProps = Pick<ReactModal.Props, 'contentLabel'>;\n\ntype Props = Partial<ReactModal.Props> & MandatoryProps & ModalProps;\n\nexport default function Modal(props: Props) {\n  return (\n    <ReactModal\n      className={classNames('modal', {\n        'modal-small': props.size === 'small',\n        'modal-medium': props.size === 'medium',\n        'modal-large': props.size === 'large'\n      })}\n      isOpen={true}\n      overlayClassName={classNames('modal-overlay', { 'modal-no-backdrop': props.noBackdrop })}\n      {...props}\n    />\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport * as classNames from 'classnames';\nimport DeferredSpinner from '../common/DeferredSpinner';\n\ninterface Props {\n  checked: boolean;\n  disabled?: boolean;\n  children?: React.ReactNode;\n  className?: string;\n  id?: string;\n  loading?: boolean;\n  onCheck: (checked: boolean, id?: string) => void;\n  right?: boolean;\n  thirdState?: boolean;\n  title?: string;\n}\n\nexport default class Checkbox extends React.PureComponent<Props> {\n  static defaultProps = {\n    thirdState: false\n  };\n\n  handleClick = (event: React.SyntheticEvent<HTMLElement>) => {\n    event.preventDefault();\n    event.currentTarget.blur();\n    if (!this.props.disabled) {\n      this.props.onCheck(!this.props.checked, this.props.id);\n    }\n  };\n\n  render() {\n    const { checked, children, disabled, id, loading, right, thirdState, title } = this.props;\n    const className = classNames('icon-checkbox', {\n      'icon-checkbox-checked': checked,\n      'icon-checkbox-single': thirdState,\n      'icon-checkbox-disabled': disabled\n    });\n\n    if (children) {\n      return (\n        <a\n          aria-checked={checked}\n          className={classNames('link-checkbox', this.props.className, {\n            note: disabled,\n            disabled\n          })}\n          href=\"#\"\n          id={id}\n          onClick={this.handleClick}\n          role=\"checkbox\"\n          title={title}>\n          {right && children}\n          <DeferredSpinner loading={Boolean(loading)}>\n            <i className={className} />\n          </DeferredSpinner>\n          {!right && children}\n        </a>\n      );\n    }\n\n    if (loading) {\n      return <DeferredSpinner />;\n    }\n\n    return (\n      <a\n        aria-checked={checked}\n        className={classNames(className, this.props.className)}\n        href=\"#\"\n        id={id}\n        onClick={this.handleClick}\n        role=\"checkbox\"\n        title={title}\n      />\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { isLoggedIn } from './users';\n\nexport function isPaidOrganization(organization: T.Organization | undefined): boolean {\n  return Boolean(organization && organization.subscription === 'PAID');\n}\n\nexport function hasPrivateAccess(\n  currentUser: T.CurrentUser,\n  organization: T.Organization | undefined,\n  userOrganizations: T.Organization[]\n): boolean {\n  return (\n    !isPaidOrganization(organization) ||\n    isCurrentUserMemberOf(currentUser, organization, userOrganizations)\n  );\n}\n\nexport function isCurrentUserMemberOf(\n  currentUser: T.CurrentUser,\n  organization: T.Organization | undefined,\n  userOrganizations: T.Organization[]\n): boolean {\n  return Boolean(\n    organization &&\n      isLoggedIn(currentUser) &&\n      ((organization.actions && organization.actions.admin) ||\n        userOrganizations.some(org => org.key === organization.key))\n  );\n}\n","var createAggregator = require('./_createAggregator');\n\n/**\n * Creates an array of elements split into two groups, the first of which\n * contains elements `predicate` returns truthy for, the second of which\n * contains elements `predicate` returns falsey for. The predicate is\n * invoked with one argument: (value).\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} [predicate=_.identity] The function invoked per iteration.\n * @returns {Array} Returns the array of grouped elements.\n * @example\n *\n * var users = [\n *   { 'user': 'barney',  'age': 36, 'active': false },\n *   { 'user': 'fred',    'age': 40, 'active': true },\n *   { 'user': 'pebbles', 'age': 1,  'active': false }\n * ];\n *\n * _.partition(users, function(o) { return o.active; });\n * // => objects for [['fred'], ['barney', 'pebbles']]\n *\n * // The `_.matches` iteratee shorthand.\n * _.partition(users, { 'age': 1, 'active': false });\n * // => objects for [['pebbles'], ['barney', 'fred']]\n *\n * // The `_.matchesProperty` iteratee shorthand.\n * _.partition(users, ['active', false]);\n * // => objects for [['barney', 'pebbles'], ['fred']]\n *\n * // The `_.property` iteratee shorthand.\n * _.partition(users, 'active');\n * // => objects for [['fred'], ['barney', 'pebbles']]\n */\nvar partition = createAggregator(function(result, value, key) {\n  result[key ? 0 : 1].push(value);\n}, function() { return [[], []]; });\n\nmodule.exports = partition;\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport BillingFormShim from './BillingFormShim';\nimport UpgradeOrganizationAdvantages from './UpgradeOrganizationAdvantages';\nimport DeferredSpinner from '../../../components/common/DeferredSpinner';\nimport Modal from '../../../components/controls/Modal';\nimport { ResetButtonLink } from '../../../components/ui/buttons';\nimport { withCurrentUser } from '../../../components/hoc/withCurrentUser';\nimport { getExtensionStart } from '../../../helpers/extensions';\nimport { translate } from '../../../helpers/l10n';\n\nconst BillingForm = withCurrentUser(BillingFormShim);\n\ninterface Props {\n  insideModal?: boolean;\n  onUpgradeDone: () => void;\n  onClose: () => void;\n  organization: T.Organization;\n  subscriptionPlans: T.SubscriptionPlan[];\n}\n\ninterface State {\n  ready: boolean;\n}\n\nexport default class UpgradeOrganizationModal extends React.PureComponent<Props, State> {\n  mounted = false;\n  state: State = { ready: false };\n\n  componentDidMount() {\n    this.mounted = true;\n    getExtensionStart('billing/billing').then(\n      () => {\n        if (this.mounted) {\n          this.setState({ ready: true });\n        }\n      },\n      () => {}\n    );\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  render() {\n    const header = translate('billing.upgrade_box.upgrade_to_paid_plan');\n\n    if (!this.state.ready) {\n      return null;\n    }\n\n    return (\n      <Modal\n        contentLabel={header}\n        noBackdrop={this.props.insideModal}\n        onRequestClose={this.props.onClose}\n        shouldCloseOnOverlayClick={false}\n        size={'medium'}>\n        <div className=\"modal-head\">\n          <h2>{header}</h2>\n        </div>\n        <BillingForm\n          onCommit={this.props.onUpgradeDone}\n          organizationKey={this.props.organization.key}\n          subscriptionPlans={this.props.subscriptionPlans}>\n          {({\n            onSubmit,\n            processingUpgrade,\n            renderFormFields,\n            renderNextCharge,\n            renderRecap,\n            renderSubmitButton\n          }) => (\n            <form id=\"organization-paid-plan-form\" onSubmit={onSubmit}>\n              <div className=\"modal-body modal-container\">\n                <div className=\"huge-spacer-bottom\">\n                  <p className=\"spacer-bottom\">\n                    <FormattedMessage\n                      defaultMessage={translate('billing.upgrade.org_x_advantages')}\n                      id=\"billing.coupon.description\"\n                      values={{\n                        org: <strong>{this.props.organization.name}</strong>\n                      }}\n                    />\n                  </p>\n                  <UpgradeOrganizationAdvantages />\n                </div>\n                {renderFormFields()}\n                <div className=\"big-spacer-top\">{renderRecap()}</div>\n              </div>\n              <footer className=\"modal-foot display-flex-center display-flex-space-between\">\n                {renderNextCharge() || <span />}\n                <div>\n                  <DeferredSpinner loading={processingUpgrade} />\n                  {renderSubmitButton()}\n                  <ResetButtonLink onClick={this.props.onClose}>\n                    {translate('cancel')}\n                  </ResetButtonLink>\n                </div>\n              </footer>\n            </form>\n          )}\n        </BillingForm>\n      </Modal>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport { Link } from 'react-router';\nimport UpgradeOrganizationAdvantages from './UpgradeOrganizationAdvantages';\nimport UpgradeOrganizationModal from './UpgradeOrganizationModal';\nimport RadioCard from '../../../components/controls/RadioCard';\nimport { Button } from '../../../components/ui/buttons';\nimport { formatPrice } from '../organization/utils';\nimport { getSubscriptionPlans } from '../../../api/billing';\nimport { translate, hasMessage } from '../../../helpers/l10n';\n\ninterface Props {\n  className?: string;\n  insideModal?: boolean;\n  onOrganizationUpgrade: () => void;\n  organization: T.Organization;\n}\n\ninterface State {\n  subscriptionPlans: T.SubscriptionPlan[];\n  upgradeOrganizationModal: boolean;\n}\n\nexport default class UpgradeOrganizationBox extends React.PureComponent<Props, State> {\n  mounted = false;\n  state: State = { subscriptionPlans: [], upgradeOrganizationModal: false };\n\n  componentDidMount() {\n    this.mounted = true;\n    this.fetchSubscriptionPlans();\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  fetchSubscriptionPlans = () => {\n    return getSubscriptionPlans().then(subscriptionPlans => {\n      if (this.mounted) {\n        this.setState({ subscriptionPlans });\n      }\n    });\n  };\n\n  handleUpgradeClick = () => {\n    this.setState({ upgradeOrganizationModal: true });\n  };\n\n  handleUpgradeOrganizationModalClose = () => {\n    if (this.mounted) {\n      this.setState({ upgradeOrganizationModal: false });\n    }\n  };\n\n  handleOrganizationUpgrade = () => {\n    this.props.onOrganizationUpgrade();\n    this.handleUpgradeOrganizationModalClose();\n  };\n\n  render() {\n    if (!hasMessage('billing.upgrade_box.header')) {\n      return null;\n    }\n\n    const { subscriptionPlans, upgradeOrganizationModal } = this.state;\n    const startingPrice = subscriptionPlans[0] && subscriptionPlans[0].price;\n\n    return (\n      <>\n        <RadioCard\n          className={this.props.className}\n          title={translate('billing.upgrade_box.header')}\n          titleInfo={\n            startingPrice !== undefined && (\n              <FormattedMessage\n                defaultMessage={translate('billing.price_from_x')}\n                id=\"billing.price_from_x\"\n                values={{\n                  price: <span className=\"big\">{formatPrice(startingPrice)}</span>\n                }}\n              />\n            )\n          }>\n          <>\n            <UpgradeOrganizationAdvantages />\n            <div className=\"big-spacer-left\">\n              <Button className=\"js-upgrade-organization\" onClick={this.handleUpgradeClick}>\n                {translate('billing.paid_plan.upgrade')}\n              </Button>\n              <Link className=\"spacer-left\" target=\"_blank\" to=\"/about/pricing\">\n                {translate('billing.pricing.learn_more')}\n              </Link>\n            </div>\n          </>\n        </RadioCard>\n        {upgradeOrganizationModal && (\n          <UpgradeOrganizationModal\n            insideModal={this.props.insideModal}\n            onClose={this.handleUpgradeOrganizationModalClose}\n            onUpgradeDone={this.handleOrganizationUpgrade}\n            organization={this.props.organization}\n            subscriptionPlans={subscriptionPlans}\n          />\n        )}\n      </>\n    );\n  }\n}\n"],"sourceRoot":""}