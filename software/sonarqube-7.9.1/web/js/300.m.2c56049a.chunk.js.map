{"version":3,"sources":["webpack:///./src/main/js/app/components/nav/settings/PendingPluginsActionNotif.tsx","webpack:///./src/main/js/app/components/nav/settings/SystemRestartNotif.tsx","webpack:///./src/main/js/app/components/nav/settings/SettingsNav.tsx","webpack:///./src/main/js/app/components/AdminContainer.tsx","webpack:///./src/main/js/components/controls/Modal.tsx","webpack:///./src/main/js/components/controls/SimpleModal.tsx","webpack:///./src/main/js/components/controls/ConfirmModal.tsx","webpack:///./src/main/js/components/controls/ConfirmButton.tsx","webpack:///./src/main/js/components/controls/ModalButton.tsx","webpack:///./node_modules/lodash/toFinite.js","webpack:///./node_modules/lodash/toInteger.js","webpack:///./node_modules/lodash/_baseFindIndex.js","webpack:///./src/main/js/api/system.ts","webpack:///./src/main/js/api/nav.ts","webpack:///./src/main/js/app/utils/handleRequiredAuthorization.ts","webpack:///./src/main/js/app/components/AdminContext.tsx","webpack:///./src/main/js/api/plugins.ts","webpack:///./node_modules/lodash/findLastIndex.js","webpack:///./src/main/js/components/common/RestartButton.tsx"],"names":["PendingPluginsActionNotif_PendingPluginsActionNotif","index_js_exposed","[object Object]","this","handleRevert","Object","plugins","then","props","refreshPending","_this$props$pending","pending","installing","updating","removing","length","Alert","className","display","variant","InstanceMessage","message","l10n","msg","filter","_ref","map","_ref2","idx","key","index_es","defaultMessage","id","values","nb","RestartButton","fetchSystemStatus","systemStatus","buttons","onClick","SystemRestartNotif","instance","system","link","react_router_es","to","pathname","SettingsNav_SettingsNav","renderExtension","name","activeClassName","concat","urls","path","window","location","some","url","indexOf","baseUrl","isSomethingActive","organizationsEnabled","extensionsWithoutSupport","extensions","extension","Dropdown","overlay","tagName","onToggleClick","open","aria-expanded","aria-haspopup","classnames","active","isSecurityActive","isProjectsActive","isSystemActive","isMarketplace","href","DropdownIcon","_ref3","_ref4","_this$props","pendingPlugins","hasSupportExtension","find","totalPendingPlugins","notifComponent","fetchPendingPlugins","ContextNavBar","height","theme","notif","NavBarTabs","renderConfigurationTab","renderSecurityTab","renderProjectsTab","defaultProps","__webpack_require__","d","__webpack_exports__","AdminContainer_AdminContainer","mounted","state","AdminContext","fetchNavigationSettings","nav","r","setAdminPages","setState","api_system","status","waitRestartingDone","document","reload","appState","canAdmin","handleRequiredAuthorization","_this$props$appState","adminPages","_this$state","defaultTitle","Helmet_default","a","titleTemplate","Provider","value","children","mapDispatchToProps","es","rootReducer","Modal","react__WEBPACK_IMPORTED_MODULE_0__","react_modal__WEBPACK_IMPORTED_MODULE_1__","classnames__WEBPACK_IMPORTED_MODULE_2__","assign","modal-small","size","modal-medium","modal-large","isOpen","overlayClassName","modal-no-backdrop","noBackdrop","SimpleModal","submitting","stopSubmitting","handleCloseClick","event","preventDefault","currentTarget","blur","onClose","handleFormSubmit","submit","handleSubmitClick","result","onSubmit","_a","header","modalProps","__rest","_Modal__WEBPACK_IMPORTED_MODULE_1__","contentLabel","onRequestClose","onCloseClick","onFormSubmit","onSubmitClick","ConfirmModal","_SimpleModal__WEBPACK_IMPORTED_MODULE_1__","_common_DeferredSpinner__WEBPACK_IMPORTED_MODULE_2__","_ui_buttons__WEBPACK_IMPORTED_MODULE_3__","_helpers_l10n__WEBPACK_IMPORTED_MODULE_4__","handleSubmit","onConfirm","confirmData","renderModalContent","confirmButtonText","confirmDisable","headerDescription","isDestructive","_this$props$cancelBut","cancelButtonText","loading","autoFocus","undefined","disabled","_this$props2","ConfirmButton","renderConfirmModal","modalBody","modalHeader","modalHeaderDescription","confirmModalProps","_ConfirmModal__WEBPACK_IMPORTED_MODULE_1__","_ModalButton__WEBPACK_IMPORTED_MODULE_2__","modal","ModalButton","handleButtonClick","handleCloseModal","toNumber","INFINITY","MAX_INTEGER","module","exports","toFinite","remainder","array","predicate","fromIndex","fromRight","index","setLogLevel","getSystemInfo","getSystemStatus","getSystemUpgrades","getMigrationStatus","migrateDatabase","restart","waitSystemUPStatus","_helpers_request__WEBPACK_IMPORTED_MODULE_0__","_app_utils_throwGlobalError__WEBPACK_IMPORTED_MODULE_1__","level","catch","max","slowThreshold","getComponentNavigation","getMarketplaceNavigation","getSettingsNavigation","data","_getStore__WEBPACK_IMPORTED_MODULE_0__","_getHistory__WEBPACK_IMPORTED_MODULE_1__","_store_appState__WEBPACK_IMPORTED_MODULE_2__","store","history","returnTo","search","hash","dispatch","replace","query","return_to","defaultPendingPlugins","defaultSystemStatus","getAvailablePlugins","_helpers_request__WEBPACK_IMPORTED_MODULE_1__","_app_utils_throwGlobalError__WEBPACK_IMPORTED_MODULE_2__","getPendingPlugins","getLastUpdates","updates","lodash_findLastIndex__WEBPACK_IMPORTED_MODULE_0___default","update","_helpers_types__WEBPACK_IMPORTED_MODULE_3__","addChangelog","previousUpdates","slice","getInstalledPlugins","f","getInstalledPluginsWithUpdates","Promise","all","_slicedToArray","installed","plugin","updatePlugin","p","getPluginUpdates","_ref5","installPlugin","uninstallPlugin","cancelPendingPlugins","baseFindIndex","baseIteratee","toInteger","nativeMax","Math","nativeMin","min","classnames__WEBPACK_IMPORTED_MODULE_1__","_controls_ConfirmButton__WEBPACK_IMPORTED_MODULE_2__","_helpers_l10n__WEBPACK_IMPORTED_MODULE_3__","_api_system__WEBPACK_IMPORTED_MODULE_4__","_ui_buttons__WEBPACK_IMPORTED_MODULE_5__","handleConfirm"],"mappings":"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","file":"js/300.m.2c56049a.chunk.js","sourcesContent":["/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport InstanceMessage from '../../../../components/common/InstanceMessage';\nimport RestartButton from '../../../../components/common/RestartButton';\nimport { Alert } from '../../../../components/ui/Alert';\nimport { Button } from '../../../../components/ui/buttons';\nimport { cancelPendingPlugins, PluginPendingResult } from '../../../../api/plugins';\nimport { translate } from '../../../../helpers/l10n';\n\ninterface Props {\n  fetchSystemStatus: () => void;\n  pending: PluginPendingResult;\n  refreshPending: () => void;\n  systemStatus: T.SysStatus;\n}\n\nexport default class PendingPluginsActionNotif extends React.PureComponent<Props> {\n  handleRevert = () => {\n    cancelPendingPlugins().then(this.props.refreshPending, () => {});\n  };\n\n  render() {\n    const { installing, updating, removing } = this.props.pending;\n    const hasPendingActions = installing.length || updating.length || removing.length;\n    if (!hasPendingActions) {\n      return null;\n    }\n\n    return (\n      <Alert className=\"js-pending\" display=\"banner\" variant=\"info\">\n        <div className=\"display-flex-center\">\n          <span className=\"little-spacer-right\">\n            <InstanceMessage message={translate('marketplace.instance_needs_to_be_restarted_to')} />\n          </span>\n          {[\n            { length: installing.length, msg: 'marketplace.install_x_plugins' },\n            { length: updating.length, msg: 'marketplace.update_x_plugins' },\n            { length: removing.length, msg: 'marketplace.uninstall_x_plugins' }\n          ]\n            .filter(({ length }) => length > 0)\n            .map(({ length, msg }, idx) => (\n              <span key={msg}>\n                {idx > 0 && '; '}\n                <FormattedMessage\n                  defaultMessage={translate(msg)}\n                  id={msg}\n                  values={{ nb: <strong>{length}</strong> }}\n                />\n              </span>\n            ))}\n\n          <RestartButton\n            className=\"spacer-left\"\n            fetchSystemStatus={this.props.fetchSystemStatus}\n            systemStatus={this.props.systemStatus}\n          />\n          <Button className=\"spacer-left js-cancel-all\" onClick={this.handleRevert}>\n            {translate('marketplace.revert')}\n          </Button>\n        </div>\n      </Alert>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport { Link } from 'react-router';\nimport { Alert } from '../../../../components/ui/Alert';\nimport { translate } from '../../../../helpers/l10n';\nimport { getInstance } from '../../../../helpers/system';\n\nexport default function SystemRestartNotif() {\n  return (\n    <Alert display=\"banner\" variant=\"info\">\n      <FormattedMessage\n        defaultMessage={translate('system.instance_restarting')}\n        id=\"system.instance_restarting\"\n        values={{\n          instance: getInstance(),\n          link: (\n            <Link to={{ pathname: '/admin/background_tasks' }}>\n              {translate('background_tasks.page')}\n            </Link>\n          )\n        }}\n      />\n    </Alert>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport * as classNames from 'classnames';\nimport { IndexLink, Link } from 'react-router';\nimport PendingPluginsActionNotif from './PendingPluginsActionNotif';\nimport SystemRestartNotif from './SystemRestartNotif';\nimport ContextNavBar from '../../../../components/nav/ContextNavBar';\nimport Dropdown from '../../../../components/controls/Dropdown';\nimport DropdownIcon from '../../../../components/icons-components/DropdownIcon';\nimport NavBarTabs from '../../../../components/nav/NavBarTabs';\nimport * as theme from '../../../theme';\nimport { PluginPendingResult } from '../../../../api/plugins';\nimport { translate } from '../../../../helpers/l10n';\n\ninterface Props {\n  extensions: T.Extension[];\n  fetchPendingPlugins: () => void;\n  fetchSystemStatus: () => void;\n  location: {};\n  organizationsEnabled?: boolean;\n  pendingPlugins: PluginPendingResult;\n  systemStatus: T.SysStatus;\n}\n\nexport default class SettingsNav extends React.PureComponent<Props> {\n  static defaultProps = {\n    extensions: []\n  };\n\n  isSomethingActive(urls: string[]): boolean {\n    const path = window.location.pathname;\n    return urls.some((url: string) => path.indexOf((window as any).baseUrl + url) === 0);\n  }\n\n  isSecurityActive() {\n    const urls = [\n      '/admin/users',\n      '/admin/groups',\n      '/admin/permissions',\n      '/admin/permission_templates'\n    ];\n    return this.isSomethingActive(urls);\n  }\n\n  isProjectsActive() {\n    const urls = ['/admin/projects_management', '/admin/background_tasks'];\n    return this.isSomethingActive(urls);\n  }\n\n  isSystemActive() {\n    const urls = ['/admin/system'];\n    return this.isSomethingActive(urls);\n  }\n\n  isMarketplace() {\n    const urls = ['/admin/marketplace'];\n    return this.isSomethingActive(urls);\n  }\n\n  renderExtension = ({ key, name }: T.Extension) => {\n    return (\n      <li key={key}>\n        <Link activeClassName=\"active\" to={`/admin/extension/${key}`}>\n          {name}\n        </Link>\n      </li>\n    );\n  };\n\n  renderConfigurationTab() {\n    const { organizationsEnabled } = this.props;\n    const extensionsWithoutSupport = this.props.extensions.filter(\n      extension => extension.key !== 'license/support'\n    );\n    return (\n      <Dropdown\n        overlay={\n          <ul className=\"menu\">\n            <li>\n              <IndexLink activeClassName=\"active\" to=\"/admin/settings\">\n                {translate('settings.page')}\n              </IndexLink>\n            </li>\n            <li>\n              <IndexLink activeClassName=\"active\" to=\"/admin/settings/encryption\">\n                {translate('property.category.security.encryption')}\n              </IndexLink>\n            </li>\n            <li>\n              <IndexLink activeClassName=\"active\" to=\"/admin/custom_metrics\">\n                {translate('custom_metrics.page')}\n              </IndexLink>\n            </li>\n            {!organizationsEnabled && (\n              <li>\n                <IndexLink activeClassName=\"active\" to=\"/admin/webhooks\">\n                  {translate('webhooks.page')}\n                </IndexLink>\n              </li>\n            )}\n            {extensionsWithoutSupport.map(this.renderExtension)}\n          </ul>\n        }\n        tagName=\"li\">\n        {({ onToggleClick, open }) => (\n          <a\n            aria-expanded={open}\n            aria-haspopup=\"true\"\n            className={classNames('dropdown-toggle', {\n              active:\n                open ||\n                (!this.isSecurityActive() &&\n                  !this.isProjectsActive() &&\n                  !this.isSystemActive() &&\n                  !this.isSomethingActive(['/admin/extension/license/support']) &&\n                  !this.isMarketplace())\n            })}\n            href=\"#\"\n            id=\"settings-navigation-configuration\"\n            onClick={onToggleClick}>\n            {translate('sidebar.project_settings')}\n            <DropdownIcon className=\"little-spacer-left\" />\n          </a>\n        )}\n      </Dropdown>\n    );\n  }\n\n  renderProjectsTab() {\n    const { organizationsEnabled } = this.props;\n    return (\n      <Dropdown\n        overlay={\n          <ul className=\"menu\">\n            {!organizationsEnabled && (\n              <li>\n                <IndexLink activeClassName=\"active\" to=\"/admin/projects_management\">\n                  {translate('management')}\n                </IndexLink>\n              </li>\n            )}\n            <li>\n              <IndexLink activeClassName=\"active\" to=\"/admin/background_tasks\">\n                {translate('background_tasks.page')}\n              </IndexLink>\n            </li>\n          </ul>\n        }\n        tagName=\"li\">\n        {({ onToggleClick, open }) => (\n          <a\n            aria-expanded={open}\n            aria-haspopup=\"true\"\n            className={classNames('dropdown-toggle', { active: open || this.isProjectsActive() })}\n            href=\"#\"\n            onClick={onToggleClick}>\n            {translate('sidebar.projects')}\n            <DropdownIcon className=\"little-spacer-left\" />\n          </a>\n        )}\n      </Dropdown>\n    );\n  }\n\n  renderSecurityTab() {\n    const { organizationsEnabled } = this.props;\n    return (\n      <Dropdown\n        overlay={\n          <ul className=\"menu\">\n            <li>\n              <IndexLink activeClassName=\"active\" to=\"/admin/users\">\n                {translate('users.page')}\n              </IndexLink>\n            </li>\n            {!organizationsEnabled && (\n              <li>\n                <IndexLink activeClassName=\"active\" to=\"/admin/groups\">\n                  {translate('user_groups.page')}\n                </IndexLink>\n              </li>\n            )}\n            {!organizationsEnabled && (\n              <li>\n                <IndexLink activeClassName=\"active\" to=\"/admin/permissions\">\n                  {translate('global_permissions.page')}\n                </IndexLink>\n              </li>\n            )}\n            {!organizationsEnabled && (\n              <li>\n                <IndexLink activeClassName=\"active\" to=\"/admin/permission_templates\">\n                  {translate('permission_templates')}\n                </IndexLink>\n              </li>\n            )}\n          </ul>\n        }\n        tagName=\"li\">\n        {({ onToggleClick, open }) => (\n          <a\n            aria-expanded={open}\n            aria-haspopup=\"true\"\n            className={classNames('dropdown-toggle', { active: open || this.isSecurityActive() })}\n            href=\"#\"\n            onClick={onToggleClick}>\n            {translate('sidebar.security')}\n            <DropdownIcon className=\"little-spacer-left\" />\n          </a>\n        )}\n      </Dropdown>\n    );\n  }\n\n  render() {\n    const { extensions, pendingPlugins } = this.props;\n    const hasSupportExtension = extensions.find(extension => extension.key === 'license/support');\n    const totalPendingPlugins =\n      pendingPlugins.installing.length +\n      pendingPlugins.removing.length +\n      pendingPlugins.updating.length;\n\n    let notifComponent;\n    if (this.props.systemStatus === 'RESTARTING') {\n      notifComponent = <SystemRestartNotif />;\n    } else if (totalPendingPlugins > 0) {\n      notifComponent = (\n        <PendingPluginsActionNotif\n          fetchSystemStatus={this.props.fetchSystemStatus}\n          pending={pendingPlugins}\n          refreshPending={this.props.fetchPendingPlugins}\n          systemStatus={this.props.systemStatus}\n        />\n      );\n    }\n\n    return (\n      <ContextNavBar\n        height={notifComponent ? theme.contextNavHeightRaw + 30 : theme.contextNavHeightRaw}\n        id=\"context-navigation\"\n        notif={notifComponent}>\n        <header className=\"navbar-context-header\">\n          <h1>{translate('layout.settings')}</h1>\n        </header>\n\n        <NavBarTabs>\n          {this.renderConfigurationTab()}\n          {this.renderSecurityTab()}\n          {this.renderProjectsTab()}\n\n          <li>\n            <IndexLink activeClassName=\"active\" to=\"/admin/system\">\n              {translate('sidebar.system')}\n            </IndexLink>\n          </li>\n\n          <li>\n            <IndexLink activeClassName=\"active\" to=\"/admin/marketplace\">\n              {translate('marketplace.page')}\n            </IndexLink>\n          </li>\n\n          {hasSupportExtension && (\n            <li>\n              <IndexLink activeClassName=\"active\" to=\"/admin/extension/license/support\">\n                {translate('support')}\n              </IndexLink>\n            </li>\n          )}\n        </NavBarTabs>\n      </ContextNavBar>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport Helmet from 'react-helmet';\nimport { connect } from 'react-redux';\nimport AdminContext, { defaultPendingPlugins, defaultSystemStatus } from './AdminContext';\nimport SettingsNav from './nav/settings/SettingsNav';\nimport { getAppState, Store } from '../../store/rootReducer';\nimport { getSettingsNavigation } from '../../api/nav';\nimport { setAdminPages } from '../../store/appState';\nimport { translate } from '../../helpers/l10n';\nimport { PluginPendingResult, getPendingPlugins } from '../../api/plugins';\nimport handleRequiredAuthorization from '../utils/handleRequiredAuthorization';\nimport { getSystemStatus, waitSystemUPStatus } from '../../api/system';\n\ninterface Props {\n  appState: Pick<T.AppState, 'adminPages' | 'canAdmin' | 'organizationsEnabled'>;\n  location: {};\n  setAdminPages: (adminPages: T.Extension[]) => void;\n}\n\ninterface State {\n  pendingPlugins: PluginPendingResult;\n  systemStatus: T.SysStatus;\n}\n\nexport class AdminContainer extends React.PureComponent<Props, State> {\n  mounted = false;\n  state: State = {\n    pendingPlugins: defaultPendingPlugins,\n    systemStatus: defaultSystemStatus\n  };\n\n  componentDidMount() {\n    this.mounted = true;\n    if (!this.props.appState.canAdmin) {\n      handleRequiredAuthorization();\n    } else {\n      this.fetchNavigationSettings();\n      this.fetchPendingPlugins();\n      this.fetchSystemStatus();\n    }\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  fetchNavigationSettings = () => {\n    getSettingsNavigation().then(r => this.props.setAdminPages(r.extensions), () => {});\n  };\n\n  fetchPendingPlugins = () => {\n    getPendingPlugins().then(\n      pendingPlugins => {\n        if (this.mounted) {\n          this.setState({ pendingPlugins });\n        }\n      },\n      () => {}\n    );\n  };\n\n  fetchSystemStatus = () => {\n    getSystemStatus().then(\n      ({ status }) => {\n        if (this.mounted) {\n          this.setState({ systemStatus: status });\n          if (status === 'RESTARTING') {\n            this.waitRestartingDone();\n          }\n        }\n      },\n      () => {}\n    );\n  };\n\n  waitRestartingDone = () => {\n    waitSystemUPStatus().then(\n      ({ status }) => {\n        if (this.mounted) {\n          this.setState({ systemStatus: status });\n          document.location.reload();\n        }\n      },\n      () => {}\n    );\n  };\n\n  render() {\n    const { adminPages, organizationsEnabled } = this.props.appState;\n\n    // Check that the adminPages are loaded\n    if (!adminPages) {\n      return null;\n    }\n\n    const { pendingPlugins, systemStatus } = this.state;\n    const defaultTitle = translate('layout.settings');\n\n    return (\n      <div>\n        <Helmet defaultTitle={defaultTitle} titleTemplate={'%s - ' + defaultTitle} />\n        <SettingsNav\n          extensions={adminPages}\n          fetchPendingPlugins={this.fetchPendingPlugins}\n          fetchSystemStatus={this.fetchSystemStatus}\n          location={this.props.location}\n          organizationsEnabled={organizationsEnabled}\n          pendingPlugins={pendingPlugins}\n          systemStatus={systemStatus}\n        />\n        <AdminContext.Provider\n          value={{\n            fetchSystemStatus: this.fetchSystemStatus,\n            fetchPendingPlugins: this.fetchPendingPlugins,\n            pendingPlugins,\n            systemStatus\n          }}>\n          {this.props.children}\n        </AdminContext.Provider>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state: Store) => ({ appState: getAppState(state) });\n\nconst mapDispatchToProps = { setAdminPages };\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(AdminContainer);\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport * as ReactModal from 'react-modal';\nimport * as classNames from 'classnames';\n\nReactModal.setAppElement('#content');\n\nexport interface ModalProps {\n  children: React.ReactNode;\n  size?: 'small' | 'medium' | 'large';\n  noBackdrop?: boolean;\n}\n\ntype MandatoryProps = Pick<ReactModal.Props, 'contentLabel'>;\n\ntype Props = Partial<ReactModal.Props> & MandatoryProps & ModalProps;\n\nexport default function Modal(props: Props) {\n  return (\n    <ReactModal\n      className={classNames('modal', {\n        'modal-small': props.size === 'small',\n        'modal-medium': props.size === 'medium',\n        'modal-large': props.size === 'large'\n      })}\n      isOpen={true}\n      overlayClassName={classNames('modal-overlay', { 'modal-no-backdrop': props.noBackdrop })}\n      {...props}\n    />\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport Modal, { ModalProps } from './Modal';\n\nexport interface ChildrenProps {\n  onCloseClick: (event?: React.SyntheticEvent<HTMLElement>) => void;\n  onFormSubmit: (event: React.SyntheticEvent<HTMLFormElement>) => void;\n  onSubmitClick: (event?: React.SyntheticEvent<HTMLElement>) => void;\n  submitting: boolean;\n}\n\ninterface Props extends ModalProps {\n  children: (props: ChildrenProps) => React.ReactNode;\n  header: string;\n  onClose: () => void;\n  onSubmit: () => void | Promise<void>;\n}\n\ninterface State {\n  submitting: boolean;\n}\n\nexport default class SimpleModal extends React.Component<Props, State> {\n  mounted = false;\n  state: State = { submitting: false };\n\n  componentDidMount() {\n    this.mounted = true;\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  stopSubmitting = () => {\n    if (this.mounted) {\n      this.setState({ submitting: false });\n    }\n  };\n\n  handleCloseClick = (event?: React.SyntheticEvent<HTMLElement>) => {\n    if (event) {\n      event.preventDefault();\n      event.currentTarget.blur();\n    }\n    this.props.onClose();\n  };\n\n  handleFormSubmit = (event: React.SyntheticEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    this.submit();\n  };\n\n  handleSubmitClick = (event?: React.SyntheticEvent<HTMLElement>) => {\n    if (event) {\n      event.preventDefault();\n      event.currentTarget.blur();\n    }\n    this.submit();\n  };\n\n  submit = () => {\n    const result = this.props.onSubmit();\n    if (result) {\n      this.setState({ submitting: true });\n      result.then(this.stopSubmitting, this.stopSubmitting);\n    }\n  };\n\n  render() {\n    const { children, header, onClose, onSubmit, ...modalProps } = this.props;\n    return (\n      <Modal contentLabel={header} onRequestClose={onClose} {...modalProps}>\n        {children({\n          onCloseClick: this.handleCloseClick,\n          onFormSubmit: this.handleFormSubmit,\n          onSubmitClick: this.handleSubmitClick,\n          submitting: this.state.submitting\n        })}\n      </Modal>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { ModalProps } from './Modal';\nimport SimpleModal, { ChildrenProps } from './SimpleModal';\nimport DeferredSpinner from '../common/DeferredSpinner';\nimport { SubmitButton, ResetButtonLink } from '../ui/buttons';\nimport { translate } from '../../helpers/l10n';\n\nexport interface ConfirmModalProps<T> extends ModalProps {\n  cancelButtonText?: string;\n  confirmButtonText: string;\n  confirmData?: T;\n  confirmDisable?: boolean;\n  isDestructive?: boolean;\n  onConfirm: (data?: T) => void | Promise<void | Response>;\n}\n\ninterface Props<T> extends ConfirmModalProps<T> {\n  header: string;\n  headerDescription?: React.ReactNode;\n  onClose: () => void;\n}\n\nexport default class ConfirmModal<T = string> extends React.PureComponent<Props<T>> {\n  mounted = false;\n\n  componentDidMount() {\n    this.mounted = true;\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  handleSubmit = () => {\n    const result = this.props.onConfirm(this.props.confirmData);\n    if (result) {\n      return result.then(this.props.onClose, () => {});\n    } else {\n      this.props.onClose();\n      return undefined;\n    }\n  };\n\n  renderModalContent = ({ onCloseClick, onFormSubmit, submitting }: ChildrenProps) => {\n    const {\n      children,\n      confirmButtonText,\n      confirmDisable,\n      header,\n      headerDescription,\n      isDestructive,\n      cancelButtonText = translate('cancel')\n    } = this.props;\n    return (\n      <form onSubmit={onFormSubmit}>\n        <header className=\"modal-head\">\n          <h2>{header}</h2>\n          {headerDescription}\n        </header>\n        <div className=\"modal-body\">{children}</div>\n        <footer className=\"modal-foot\">\n          <DeferredSpinner className=\"spacer-right\" loading={submitting} />\n          <SubmitButton\n            autoFocus={true}\n            className={isDestructive ? 'button-red' : undefined}\n            disabled={submitting || confirmDisable}>\n            {confirmButtonText}\n          </SubmitButton>\n          <ResetButtonLink disabled={submitting} onClick={onCloseClick}>\n            {cancelButtonText}\n          </ResetButtonLink>\n        </footer>\n      </form>\n    );\n  };\n\n  render() {\n    const { header, onClose, noBackdrop, size } = this.props;\n    const modalProps = { header, onClose, noBackdrop, size };\n    return (\n      <SimpleModal onSubmit={this.handleSubmit} {...modalProps}>\n        {this.renderModalContent}\n      </SimpleModal>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport ConfirmModal, { ConfirmModalProps } from './ConfirmModal';\nimport ModalButton, { ChildrenProps, ModalProps } from './ModalButton';\n\ninterface Props<T> extends ConfirmModalProps<T> {\n  children: (props: ChildrenProps) => React.ReactNode;\n  modalBody: React.ReactNode;\n  modalHeader: string;\n  modalHeaderDescription?: React.ReactNode;\n}\n\ninterface State {\n  modal: boolean;\n}\n\nexport default class ConfirmButton<T> extends React.PureComponent<Props<T>, State> {\n  renderConfirmModal = ({ onClose }: ModalProps) => {\n    const {\n      children,\n      modalBody,\n      modalHeader,\n      modalHeaderDescription,\n      ...confirmModalProps\n    } = this.props;\n    return (\n      <ConfirmModal\n        header={modalHeader}\n        headerDescription={modalHeaderDescription}\n        onClose={onClose}\n        {...confirmModalProps}>\n        {modalBody}\n      </ConfirmModal>\n    );\n  };\n\n  render() {\n    return <ModalButton modal={this.renderConfirmModal}>{this.props.children}</ModalButton>;\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\n\nexport interface ChildrenProps {\n  onClick: () => void;\n  onFormSubmit: (event: React.FormEvent<HTMLFormElement>) => void;\n}\n\nexport interface ModalProps {\n  onClose: () => void;\n}\n\nexport interface Props {\n  children: (props: ChildrenProps) => React.ReactNode;\n  modal: (props: ModalProps) => React.ReactNode;\n}\n\ninterface State {\n  modal: boolean;\n}\n\nexport default class ModalButton extends React.PureComponent<Props, State> {\n  mounted = false;\n  state: State = { modal: false };\n\n  componentDidMount() {\n    this.mounted = true;\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  handleButtonClick = () => {\n    this.setState({ modal: true });\n  };\n\n  handleFormSubmit = (event?: React.FormEvent<HTMLFormElement>) => {\n    if (event) {\n      event.preventDefault();\n    }\n    this.setState({ modal: true });\n  };\n\n  handleCloseModal = () => {\n    if (this.mounted) {\n      this.setState({ modal: false });\n    }\n  };\n\n  render() {\n    return (\n      <>\n        {this.props.children({\n          onClick: this.handleButtonClick,\n          onFormSubmit: this.handleFormSubmit\n        })}\n        {this.state.modal && this.props.modal({ onClose: this.handleCloseModal })}\n      </>\n    );\n  }\n}\n","var toNumber = require('./toNumber');\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0,\n    MAX_INTEGER = 1.7976931348623157e+308;\n\n/**\n * Converts `value` to a finite number.\n *\n * @static\n * @memberOf _\n * @since 4.12.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {number} Returns the converted number.\n * @example\n *\n * _.toFinite(3.2);\n * // => 3.2\n *\n * _.toFinite(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toFinite(Infinity);\n * // => 1.7976931348623157e+308\n *\n * _.toFinite('3.2');\n * // => 3.2\n */\nfunction toFinite(value) {\n  if (!value) {\n    return value === 0 ? value : 0;\n  }\n  value = toNumber(value);\n  if (value === INFINITY || value === -INFINITY) {\n    var sign = (value < 0 ? -1 : 1);\n    return sign * MAX_INTEGER;\n  }\n  return value === value ? value : 0;\n}\n\nmodule.exports = toFinite;\n","var toFinite = require('./toFinite');\n\n/**\n * Converts `value` to an integer.\n *\n * **Note:** This method is loosely based on\n * [`ToInteger`](http://www.ecma-international.org/ecma-262/7.0/#sec-tointeger).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {number} Returns the converted integer.\n * @example\n *\n * _.toInteger(3.2);\n * // => 3\n *\n * _.toInteger(Number.MIN_VALUE);\n * // => 0\n *\n * _.toInteger(Infinity);\n * // => 1.7976931348623157e+308\n *\n * _.toInteger('3.2');\n * // => 3\n */\nfunction toInteger(value) {\n  var result = toFinite(value),\n      remainder = result % 1;\n\n  return result === result ? (remainder ? result - remainder : result) : 0;\n}\n\nmodule.exports = toInteger;\n","/**\n * The base implementation of `_.findIndex` and `_.findLastIndex` without\n * support for iteratee shorthands.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {Function} predicate The function invoked per iteration.\n * @param {number} fromIndex The index to search from.\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction baseFindIndex(array, predicate, fromIndex, fromRight) {\n  var length = array.length,\n      index = fromIndex + (fromRight ? 1 : -1);\n\n  while ((fromRight ? index-- : ++index < length)) {\n    if (predicate(array[index], index, array)) {\n      return index;\n    }\n  }\n  return -1;\n}\n\nmodule.exports = baseFindIndex;\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { getJSON, post, postJSON, requestTryAndRepeatUntil } from '../helpers/request';\nimport throwGlobalError from '../app/utils/throwGlobalError';\n\nexport function setLogLevel(level: string): Promise<void | Response> {\n  return post('/api/system/change_log_level', { level }).catch(throwGlobalError);\n}\n\nexport function getSystemInfo(): Promise<T.SysInfoCluster | T.SysInfoStandalone> {\n  return getJSON('/api/system/info').catch(throwGlobalError);\n}\n\nexport function getSystemStatus(): Promise<{ id: string; version: string; status: T.SysStatus }> {\n  return getJSON('/api/system/status');\n}\n\nexport function getSystemUpgrades(): Promise<{\n  upgrades: T.SystemUpgrade[];\n  updateCenterRefresh: string;\n}> {\n  return getJSON('/api/system/upgrades');\n}\n\nexport function getMigrationStatus(): Promise<{\n  message?: string;\n  startedAt?: string;\n  state: string;\n}> {\n  return getJSON('/api/system/db_migration_status');\n}\n\nexport function migrateDatabase(): Promise<{\n  message?: string;\n  startedAt?: string;\n  state: string;\n}> {\n  return postJSON('/api/system/migrate_db');\n}\n\nexport function restart(): Promise<void | Response> {\n  return post('/api/system/restart').catch(throwGlobalError);\n}\n\nexport function waitSystemUPStatus(): Promise<{\n  id: string;\n  version: string;\n  status: T.SysStatus;\n}> {\n  return requestTryAndRepeatUntil(\n    getSystemStatus,\n    { max: -1, slowThreshold: -15 },\n    ({ status }) => status === 'UP'\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { getJSON } from '../helpers/request';\nimport throwGlobalError from '../app/utils/throwGlobalError';\n\nexport function getGlobalNavigation(): Promise<T.AppState> {\n  return getJSON('/api/navigation/global');\n}\n\nexport function getComponentNavigation(\n  data: { component: string } & T.BranchParameters\n): Promise<any> {\n  return getJSON('/api/navigation/component', data).catch(throwGlobalError);\n}\n\nexport function getMarketplaceNavigation(): Promise<{ serverId: string; ncloc: number }> {\n  return getJSON('/api/navigation/marketplace').catch(throwGlobalError);\n}\n\nexport function getSettingsNavigation(): Promise<any> {\n  return getJSON('/api/navigation/settings').catch(throwGlobalError);\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport getStore from './getStore';\nimport getHistory from './getHistory';\nimport { requireAuthorization } from '../../store/appState';\n\nexport default function handleRequiredAuthorization() {\n  const store = getStore();\n  const history = getHistory();\n\n  const returnTo = window.location.pathname + window.location.search + window.location.hash;\n\n  store.dispatch(requireAuthorization());\n  history.replace({ pathname: '/sessions/new', query: { return_to: returnTo } });\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { PluginPendingResult } from '../../api/plugins';\n\nexport interface AdminContextInterface {\n  fetchSystemStatus: () => void;\n  fetchPendingPlugins: () => void;\n  pendingPlugins: PluginPendingResult;\n  systemStatus: T.SysStatus;\n}\n\nexport const defaultPendingPlugins = { installing: [], removing: [], updating: [] };\nexport const defaultSystemStatus = 'UP';\n\nconst AdminContext = React.createContext<AdminContextInterface>({\n  fetchSystemStatus: () => {},\n  fetchPendingPlugins: () => {},\n  pendingPlugins: defaultPendingPlugins,\n  systemStatus: defaultSystemStatus\n});\nexport default AdminContext;\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { findLastIndex } from 'lodash';\nimport { getJSON, post } from '../helpers/request';\nimport throwGlobalError from '../app/utils/throwGlobalError';\nimport { isDefined } from '../helpers/types';\n\nexport interface Plugin {\n  key: string;\n  name: string;\n  category?: string;\n  description?: string;\n  editionBundled?: boolean;\n  license?: string;\n  organizationName?: string;\n  homepageUrl?: string;\n  organizationUrl?: string;\n  issueTrackerUrl?: string;\n  termsAndConditionsUrl?: string;\n}\n\nexport interface Release {\n  version: string;\n  date: string;\n  description?: string;\n  changeLogUrl?: string;\n}\n\nexport interface Update {\n  status: string;\n  release?: Release;\n  requires: Plugin[];\n  previousUpdates?: Update[];\n}\n\nexport interface PluginPendingResult {\n  installing: PluginPending[];\n  updating: PluginPending[];\n  removing: PluginPending[];\n}\n\nexport interface PluginAvailable extends Plugin {\n  release: Release;\n  update: Update;\n}\n\nexport interface PluginPending extends Plugin {\n  version: string;\n  implementationBuild: string;\n}\n\nexport interface PluginInstalled extends PluginPending {\n  filename: string;\n  hash: string;\n  sonarLintSupported: boolean;\n  updatedAt: number;\n  updates?: Update[];\n}\n\nexport function getAvailablePlugins(): Promise<{\n  plugins: PluginAvailable[];\n  updateCenterRefresh: string;\n}> {\n  return getJSON('/api/plugins/available').catch(throwGlobalError);\n}\n\nexport function getPendingPlugins(): Promise<PluginPendingResult> {\n  return getJSON('/api/plugins/pending').catch(throwGlobalError);\n}\n\nfunction getLastUpdates(updates: undefined | Update[]): Update[] {\n  if (!updates) {\n    return [];\n  }\n  const lastUpdate = ['COMPATIBLE', 'REQUIRES_SYSTEM_UPGRADE', 'DEPS_REQUIRE_SYSTEM_UPGRADE'].map(\n    status => {\n      const index = findLastIndex(updates, update => update.status === status);\n      return index > -1 ? updates[index] : undefined;\n    }\n  );\n  return lastUpdate.filter(isDefined);\n}\n\nfunction addChangelog(update: Update, updates?: Update[]) {\n  if (!updates) {\n    return update;\n  }\n  const index = updates.indexOf(update);\n  const previousUpdates = index > 0 ? updates.slice(0, index) : [];\n  return { ...update, previousUpdates };\n}\n\nexport function getInstalledPlugins(): Promise<PluginInstalled[]> {\n  return getJSON('/api/plugins/installed', { f: 'category' }).then(\n    ({ plugins }) => plugins,\n    throwGlobalError\n  );\n}\n\nexport function getInstalledPluginsWithUpdates(): Promise<PluginInstalled[]> {\n  return Promise.all([\n    getJSON('/api/plugins/installed', { f: 'category' }),\n    getJSON('/api/plugins/updates')\n  ])\n    .then(([installed, updates]) =>\n      installed.plugins.map((plugin: PluginInstalled) => {\n        const updatePlugin: PluginInstalled = updates.plugins.find(\n          (p: PluginInstalled) => p.key === plugin.key\n        );\n        if (updatePlugin) {\n          return {\n            ...updatePlugin,\n            ...plugin,\n            updates: getLastUpdates(updatePlugin.updates).map(update =>\n              addChangelog(update, updatePlugin.updates)\n            )\n          };\n        }\n        return plugin;\n      })\n    )\n    .catch(throwGlobalError);\n}\n\nexport function getPluginUpdates(): Promise<PluginInstalled[]> {\n  return Promise.all([getJSON('/api/plugins/updates'), getJSON('/api/plugins/installed')])\n    .then(([updates, installed]) =>\n      updates.plugins.map((updatePlugin: PluginInstalled) => {\n        const updates = getLastUpdates(updatePlugin.updates).map(update =>\n          addChangelog(update, updatePlugin.updates)\n        );\n        const plugin = installed.plugins.find((p: PluginInstalled) => p.key === updatePlugin.key);\n        if (plugin) {\n          return {\n            ...plugin,\n            ...updatePlugin,\n            updates\n          };\n        }\n        return { ...updatePlugin, updates };\n      })\n    )\n    .catch(throwGlobalError);\n}\n\nexport function installPlugin(data: { key: string }): Promise<void | Response> {\n  return post('/api/plugins/install', data).catch(throwGlobalError);\n}\n\nexport function uninstallPlugin(data: { key: string }): Promise<void | Response> {\n  return post('/api/plugins/uninstall', data).catch(throwGlobalError);\n}\n\nexport function updatePlugin(data: { key: string }): Promise<void | Response> {\n  return post('/api/plugins/update', data).catch(throwGlobalError);\n}\n\nexport function cancelPendingPlugins(): Promise<void | Response> {\n  return post('/api/plugins/cancel_all').catch(throwGlobalError);\n}\n","var baseFindIndex = require('./_baseFindIndex'),\n    baseIteratee = require('./_baseIteratee'),\n    toInteger = require('./toInteger');\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max,\n    nativeMin = Math.min;\n\n/**\n * This method is like `_.findIndex` except that it iterates over elements\n * of `collection` from right to left.\n *\n * @static\n * @memberOf _\n * @since 2.0.0\n * @category Array\n * @param {Array} array The array to inspect.\n * @param {Function} [predicate=_.identity] The function invoked per iteration.\n * @param {number} [fromIndex=array.length-1] The index to search from.\n * @returns {number} Returns the index of the found element, else `-1`.\n * @example\n *\n * var users = [\n *   { 'user': 'barney',  'active': true },\n *   { 'user': 'fred',    'active': false },\n *   { 'user': 'pebbles', 'active': false }\n * ];\n *\n * _.findLastIndex(users, function(o) { return o.user == 'pebbles'; });\n * // => 2\n *\n * // The `_.matches` iteratee shorthand.\n * _.findLastIndex(users, { 'user': 'barney', 'active': true });\n * // => 0\n *\n * // The `_.matchesProperty` iteratee shorthand.\n * _.findLastIndex(users, ['active', false]);\n * // => 2\n *\n * // The `_.property` iteratee shorthand.\n * _.findLastIndex(users, 'active');\n * // => 0\n */\nfunction findLastIndex(array, predicate, fromIndex) {\n  var length = array == null ? 0 : array.length;\n  if (!length) {\n    return -1;\n  }\n  var index = length - 1;\n  if (fromIndex !== undefined) {\n    index = toInteger(fromIndex);\n    index = fromIndex < 0\n      ? nativeMax(length + index, 0)\n      : nativeMin(index, length - 1);\n  }\n  return baseFindIndex(array, baseIteratee(predicate, 3), index, true);\n}\n\nmodule.exports = findLastIndex;\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport * as classNames from 'classnames';\nimport ConfirmButton from '../controls/ConfirmButton';\nimport { translate } from '../../helpers/l10n';\nimport { restart } from '../../api/system';\nimport { Button } from '../ui/buttons';\n\ninterface Props {\n  className?: string;\n  fetchSystemStatus: () => void;\n  systemStatus: T.SysStatus;\n}\n\nexport default class RestartButton extends React.PureComponent<Props> {\n  handleConfirm = () => {\n    return restart().then(this.props.fetchSystemStatus);\n  };\n\n  render() {\n    const { className, systemStatus } = this.props;\n    return (\n      <ConfirmButton\n        confirmButtonText={translate('restart')}\n        modalBody={\n          <>\n            <p className=\"spacer-top spacer-bottom\">\n              {translate('system.are_you_sure_to_restart')}\n            </p>\n            <p>{translate('system.forcing_shutdown_not_recommended')}</p>\n          </>\n        }\n        modalHeader={translate('system.restart_server')}\n        onConfirm={this.handleConfirm}>\n        {({ onClick }) => (\n          <Button\n            className={classNames('button-red', className)}\n            disabled={systemStatus !== 'UP'}\n            onClick={onClick}>\n            {systemStatus === 'RESTARTING'\n              ? translate('system.restart_in_progress')\n              : translate('system.restart_server')}\n          </Button>\n        )}\n      </ConfirmButton>\n    );\n  }\n}\n"],"sourceRoot":""}